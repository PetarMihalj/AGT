
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "CompilationUnitADD BEQ BOOLL BREAK CHARL COMMENT CONTINUE DIV ELSE EQ FOR ID IF INTL LEQ LPAREN MUL NEQ RETURN RPAREN SUB WHILEBlock : '{' '}'BoolLiteral : BOOLLCharLiteral : CHARLCompilationUnit : DefinitionListDefinitionList : FunctionDefinition DefinitionList\n                      | empty\n    FunctionDefinition : TypeName ID '(' ParameterList ')' BlockIntLiteral : INTLLiteral : IntLiteral\n               | BoolLiteral\n               | CharLiteral\n    Parameter : TypeName IDParameterList : Parameter ',' ParameterList\n                     | Parameter\n                     | empty\n    TypeName : IDempty :"
    
_lr_action_items = {'$end':([0,1,2,3,4,7,17,20,],[-17,0,-4,-17,-6,-5,-7,-1,]),'ID':([0,3,5,6,9,10,16,17,20,],[6,6,8,-16,6,14,6,-7,-1,]),'(':([8,],[9,]),')':([9,11,12,13,14,16,19,],[-17,15,-14,-15,-12,-17,-13,]),',':([12,14,],[16,-12,]),'{':([15,],[18,]),'}':([18,],[20,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'CompilationUnit':([0,],[1,]),'DefinitionList':([0,3,],[2,7,]),'FunctionDefinition':([0,3,],[3,3,]),'empty':([0,3,9,16,],[4,4,13,13,]),'TypeName':([0,3,9,16,],[5,5,10,10,]),'ParameterList':([9,16,],[11,19,]),'Parameter':([9,16,],[12,12,]),'Block':([15,],[17,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> CompilationUnit","S'",1,None,None,None),
  ('Block -> { }','Block',2,"p_<class '__main__.Block'>",'parser_rules.py',319),
  ('BoolLiteral -> BOOLL','BoolLiteral',1,"p_<class '__main__.BoolLiteral'>",'parser_rules.py',319),
  ('CharLiteral -> CHARL','CharLiteral',1,"p_<class '__main__.CharLiteral'>",'parser_rules.py',319),
  ('CompilationUnit -> DefinitionList','CompilationUnit',1,"p_<class '__main__.CompilationUnit'>",'parser_rules.py',319),
  ('DefinitionList -> FunctionDefinition DefinitionList','DefinitionList',2,"p_<class '__main__.DefinitionList'>",'parser_rules.py',319),
  ('DefinitionList -> empty','DefinitionList',1,"p_<class '__main__.DefinitionList'>",'parser_rules.py',320),
  ('FunctionDefinition -> TypeName ID ( ParameterList ) Block','FunctionDefinition',6,"p_<class '__main__.FunctionDefinition'>",'parser_rules.py',319),
  ('IntLiteral -> INTL','IntLiteral',1,"p_<class '__main__.IntLiteral'>",'parser_rules.py',319),
  ('Literal -> IntLiteral','Literal',1,"p_<class '__main__.Literal'>",'parser_rules.py',319),
  ('Literal -> BoolLiteral','Literal',1,"p_<class '__main__.Literal'>",'parser_rules.py',320),
  ('Literal -> CharLiteral','Literal',1,"p_<class '__main__.Literal'>",'parser_rules.py',321),
  ('Parameter -> TypeName ID','Parameter',2,"p_<class '__main__.Parameter'>",'parser_rules.py',319),
  ('ParameterList -> Parameter , ParameterList','ParameterList',3,"p_<class '__main__.ParameterList'>",'parser_rules.py',319),
  ('ParameterList -> Parameter','ParameterList',1,"p_<class '__main__.ParameterList'>",'parser_rules.py',320),
  ('ParameterList -> empty','ParameterList',1,"p_<class '__main__.ParameterList'>",'parser_rules.py',321),
  ('TypeName -> ID','TypeName',1,"p_<class '__main__.TypeName'>",'parser_rules.py',319),
  ('empty -> <empty>','empty',0,'p_empty','parser_rules.py',326),
]
