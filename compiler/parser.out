Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AMPERSAND

Grammar

Rule 0     S' -> CompilationUnit
Rule 1     AddressExpression -> ADDRESS Expression
Rule 2     AngleCallExpression -> Expression LANGLE ExpressionList RANGLE
Rule 3     AssignmentStatement -> Expression ASSIGNMENT Expression SEMICOLON
Rule 4     BinaryExpression -> Expression PLUS Expression
Rule 5     BinaryExpression -> Expression MINUS Expression
Rule 6     BinaryExpression -> Expression TIMES Expression
Rule 7     BinaryExpression -> Expression DIVIDE Expression
Rule 8     BinaryExpression -> Expression MOD Expression
Rule 9     BinaryExpression -> Expression LEQ Expression
Rule 10    BinaryExpression -> Expression GEQ Expression
Rule 11    BinaryExpression -> Expression LT Expression
Rule 12    BinaryExpression -> Expression GT Expression
Rule 13    BinaryExpression -> Expression EQ Expression
Rule 14    BinaryExpression -> Expression NE Expression
Rule 15    BlankStatement -> SEMICOLON
Rule 16    Block -> LBRACE StatementList RBRACE
Rule 17    BlockStatement -> Block
Rule 18    BoolLiteral -> BOOLL
Rule 19    BracketCallExpression -> Expression LBRACKET Expression RBRACKET
Rule 20    BreakStatement -> BREAK IntLiteral SEMICOLON
Rule 21    BreakStatement -> BREAK SEMICOLON
Rule 22    CompilationUnit -> DefinitionList
Rule 23    DeclarationStatement -> Expression Expression SEMICOLON
Rule 24    DefinitionList -> FunctionDefinition DefinitionList
Rule 25    DefinitionList -> StructDefinition DefinitionList
Rule 26    DefinitionList -> empty
Rule 27    DereferenceExpression -> Expression DEREF
Rule 28    DotExpression -> Expression DOT Expression
Rule 29    Expression -> BinaryExpression
Rule 30    Expression -> UnaryExpression
Rule 31    Expression -> IdExpression
Rule 32    Expression -> IdPairExpression
Rule 33    ExpressionList -> Expression COMMA ExpressionList
Rule 34    ExpressionList -> Expression
Rule 35    ExpressionList -> empty
Rule 36    ExpressionStatement -> Expression SEMICOLON
Rule 37    ForStatement -> FOR LPAREN Statement Expression SEMICOLON Statement RPAREN Block
Rule 38    FunctionDefinition -> FN Expression Block
Rule 39    FunctionDefinition -> FN Expression ARROW Expression Block
Rule 40    IdExpression -> ID
Rule 41    IdPairExpression -> ID ID
Rule 42    IfElseStatement -> IF LPAREN Expression RPAREN Block ELSE Block
Rule 43    IfElseStatement -> IF LPAREN Expression RPAREN Block
Rule 44    InitStatement -> LET Expression ASSIGNMENT Expression SEMICOLON
Rule 45    IntLiteral -> INTL
Rule 46    LiteralExpression -> IntLiteral
Rule 47    LiteralExpression -> BoolLiteral
Rule 48    ParenthesesCallExpression -> Expression LPAREN ExpressionList RPAREN
Rule 49    ParenthesesExpression -> LPAREN Expression RPAREN
Rule 50    ReturnStatement -> RETURN Expression SEMICOLON
Rule 51    ReturnStatement -> RETURN SEMICOLON
Rule 52    Statement -> AssignmentStatement
Rule 53    Statement -> InitStatement
Rule 54    Statement -> ExpressionStatement
Rule 55    Statement -> IfElseStatement
Rule 56    Statement -> ForStatement
Rule 57    Statement -> WhileStatement
Rule 58    Statement -> BreakStatement
Rule 59    Statement -> ReturnStatement
Rule 60    Statement -> BlockStatement
Rule 61    Statement -> BlankStatement
Rule 62    Statement -> TypeStatement
Rule 63    Statement -> DeclarationStatement
Rule 64    StatementList -> Statement StatementList
Rule 65    StatementList -> Statement
Rule 66    StructDefinition -> STRUCT Expression Block
Rule 67    TypeStatement -> TYPE Expression ASSIGNMENT Expression SEMICOLON
Rule 68    UnaryExpression -> LiteralExpression
Rule 69    UnaryExpression -> ParenthesesCallExpression
Rule 70    UnaryExpression -> BracketCallExpression
Rule 71    UnaryExpression -> DotExpression
Rule 72    UnaryExpression -> ParenthesesExpression
Rule 73    UnaryExpression -> DereferenceExpression
Rule 74    UnaryExpression -> AddressExpression
Rule 75    UnaryExpression -> AngleCallExpression
Rule 76    WhileStatement -> WHILE LPAREN Expression RPAREN Block
Rule 77    empty -> <empty>

Terminals, with rules where they appear

ADDRESS              : 1
AMPERSAND            : 
ARROW                : 39
ASSIGNMENT           : 3 44 67
BOOLL                : 18
BREAK                : 20 21
COMMA                : 33
DEREF                : 27
DIVIDE               : 7
DOT                  : 28
ELSE                 : 42
EQ                   : 13
FN                   : 38 39
FOR                  : 37
GEQ                  : 10
GT                   : 12
ID                   : 40 41 41
IF                   : 42 43
INTL                 : 45
LANGLE               : 2
LBRACE               : 16
LBRACKET             : 19
LEQ                  : 9
LET                  : 44
LPAREN               : 37 42 43 48 49 76
LT                   : 11
MINUS                : 5
MOD                  : 8
NE                   : 14
PLUS                 : 4
RANGLE               : 2
RBRACE               : 16
RBRACKET             : 19
RETURN               : 50 51
RPAREN               : 37 42 43 48 49 76
SEMICOLON            : 3 15 20 21 23 36 37 44 50 51 67
STRUCT               : 66
TIMES                : 6
TYPE                 : 67
WHILE                : 76
error                : 

Nonterminals, with rules where they appear

AddressExpression    : 74
AngleCallExpression  : 75
AssignmentStatement  : 52
BinaryExpression     : 29
BlankStatement       : 61
Block                : 17 37 38 39 42 42 43 66 76
BlockStatement       : 60
BoolLiteral          : 47
BracketCallExpression : 70
BreakStatement       : 58
CompilationUnit      : 0
DeclarationStatement : 63
DefinitionList       : 22 24 25
DereferenceExpression : 73
DotExpression        : 71
Expression           : 1 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11 11 12 12 13 13 14 14 19 19 23 23 27 28 28 33 34 36 37 38 39 39 42 43 44 44 48 49 50 66 67 67 76
ExpressionList       : 2 33 48
ExpressionStatement  : 54
ForStatement         : 56
FunctionDefinition   : 24
IdExpression         : 31
IdPairExpression     : 32
IfElseStatement      : 55
InitStatement        : 53
IntLiteral           : 20 46
LiteralExpression    : 68
ParenthesesCallExpression : 69
ParenthesesExpression : 72
ReturnStatement      : 59
Statement            : 37 37 64 65
StatementList        : 16 64
StructDefinition     : 25
TypeStatement        : 62
UnaryExpression      : 30
WhileStatement       : 57
empty                : 26 35

Parsing method: LALR

state 0

    (0) S' -> . CompilationUnit
    (22) CompilationUnit -> . DefinitionList
    (24) DefinitionList -> . FunctionDefinition DefinitionList
    (25) DefinitionList -> . StructDefinition DefinitionList
    (26) DefinitionList -> . empty
    (38) FunctionDefinition -> . FN Expression Block
    (39) FunctionDefinition -> . FN Expression ARROW Expression Block
    (66) StructDefinition -> . STRUCT Expression Block
    (77) empty -> .

    FN              shift and go to state 6
    STRUCT          shift and go to state 7
    $end            reduce using rule 77 (empty -> .)

    CompilationUnit                shift and go to state 1
    DefinitionList                 shift and go to state 2
    FunctionDefinition             shift and go to state 3
    StructDefinition               shift and go to state 4
    empty                          shift and go to state 5

state 1

    (0) S' -> CompilationUnit .



state 2

    (22) CompilationUnit -> DefinitionList .

    $end            reduce using rule 22 (CompilationUnit -> DefinitionList .)


state 3

    (24) DefinitionList -> FunctionDefinition . DefinitionList
    (24) DefinitionList -> . FunctionDefinition DefinitionList
    (25) DefinitionList -> . StructDefinition DefinitionList
    (26) DefinitionList -> . empty
    (38) FunctionDefinition -> . FN Expression Block
    (39) FunctionDefinition -> . FN Expression ARROW Expression Block
    (66) StructDefinition -> . STRUCT Expression Block
    (77) empty -> .

    FN              shift and go to state 6
    STRUCT          shift and go to state 7
    $end            reduce using rule 77 (empty -> .)

    FunctionDefinition             shift and go to state 3
    DefinitionList                 shift and go to state 8
    StructDefinition               shift and go to state 4
    empty                          shift and go to state 5

state 4

    (25) DefinitionList -> StructDefinition . DefinitionList
    (24) DefinitionList -> . FunctionDefinition DefinitionList
    (25) DefinitionList -> . StructDefinition DefinitionList
    (26) DefinitionList -> . empty
    (38) FunctionDefinition -> . FN Expression Block
    (39) FunctionDefinition -> . FN Expression ARROW Expression Block
    (66) StructDefinition -> . STRUCT Expression Block
    (77) empty -> .

    FN              shift and go to state 6
    STRUCT          shift and go to state 7
    $end            reduce using rule 77 (empty -> .)

    StructDefinition               shift and go to state 4
    DefinitionList                 shift and go to state 9
    FunctionDefinition             shift and go to state 3
    empty                          shift and go to state 5

state 5

    (26) DefinitionList -> empty .

    $end            reduce using rule 26 (DefinitionList -> empty .)


state 6

    (38) FunctionDefinition -> FN . Expression Block
    (39) FunctionDefinition -> FN . Expression ARROW Expression Block
    (29) Expression -> . BinaryExpression
    (30) Expression -> . UnaryExpression
    (31) Expression -> . IdExpression
    (32) Expression -> . IdPairExpression
    (4) BinaryExpression -> . Expression PLUS Expression
    (5) BinaryExpression -> . Expression MINUS Expression
    (6) BinaryExpression -> . Expression TIMES Expression
    (7) BinaryExpression -> . Expression DIVIDE Expression
    (8) BinaryExpression -> . Expression MOD Expression
    (9) BinaryExpression -> . Expression LEQ Expression
    (10) BinaryExpression -> . Expression GEQ Expression
    (11) BinaryExpression -> . Expression LT Expression
    (12) BinaryExpression -> . Expression GT Expression
    (13) BinaryExpression -> . Expression EQ Expression
    (14) BinaryExpression -> . Expression NE Expression
    (68) UnaryExpression -> . LiteralExpression
    (69) UnaryExpression -> . ParenthesesCallExpression
    (70) UnaryExpression -> . BracketCallExpression
    (71) UnaryExpression -> . DotExpression
    (72) UnaryExpression -> . ParenthesesExpression
    (73) UnaryExpression -> . DereferenceExpression
    (74) UnaryExpression -> . AddressExpression
    (75) UnaryExpression -> . AngleCallExpression
    (40) IdExpression -> . ID
    (41) IdPairExpression -> . ID ID
    (46) LiteralExpression -> . IntLiteral
    (47) LiteralExpression -> . BoolLiteral
    (48) ParenthesesCallExpression -> . Expression LPAREN ExpressionList RPAREN
    (19) BracketCallExpression -> . Expression LBRACKET Expression RBRACKET
    (28) DotExpression -> . Expression DOT Expression
    (49) ParenthesesExpression -> . LPAREN Expression RPAREN
    (27) DereferenceExpression -> . Expression DEREF
    (1) AddressExpression -> . ADDRESS Expression
    (2) AngleCallExpression -> . Expression LANGLE ExpressionList RANGLE
    (45) IntLiteral -> . INTL
    (18) BoolLiteral -> . BOOLL

    ID              shift and go to state 23
    LPAREN          shift and go to state 26
    ADDRESS         shift and go to state 27
    INTL            shift and go to state 28
    BOOLL           shift and go to state 29

    Expression                     shift and go to state 10
    BinaryExpression               shift and go to state 11
    UnaryExpression                shift and go to state 12
    IdExpression                   shift and go to state 13
    IdPairExpression               shift and go to state 14
    LiteralExpression              shift and go to state 15
    ParenthesesCallExpression      shift and go to state 16
    BracketCallExpression          shift and go to state 17
    DotExpression                  shift and go to state 18
    ParenthesesExpression          shift and go to state 19
    DereferenceExpression          shift and go to state 20
    AddressExpression              shift and go to state 21
    AngleCallExpression            shift and go to state 22
    IntLiteral                     shift and go to state 24
    BoolLiteral                    shift and go to state 25

state 7

    (66) StructDefinition -> STRUCT . Expression Block
    (29) Expression -> . BinaryExpression
    (30) Expression -> . UnaryExpression
    (31) Expression -> . IdExpression
    (32) Expression -> . IdPairExpression
    (4) BinaryExpression -> . Expression PLUS Expression
    (5) BinaryExpression -> . Expression MINUS Expression
    (6) BinaryExpression -> . Expression TIMES Expression
    (7) BinaryExpression -> . Expression DIVIDE Expression
    (8) BinaryExpression -> . Expression MOD Expression
    (9) BinaryExpression -> . Expression LEQ Expression
    (10) BinaryExpression -> . Expression GEQ Expression
    (11) BinaryExpression -> . Expression LT Expression
    (12) BinaryExpression -> . Expression GT Expression
    (13) BinaryExpression -> . Expression EQ Expression
    (14) BinaryExpression -> . Expression NE Expression
    (68) UnaryExpression -> . LiteralExpression
    (69) UnaryExpression -> . ParenthesesCallExpression
    (70) UnaryExpression -> . BracketCallExpression
    (71) UnaryExpression -> . DotExpression
    (72) UnaryExpression -> . ParenthesesExpression
    (73) UnaryExpression -> . DereferenceExpression
    (74) UnaryExpression -> . AddressExpression
    (75) UnaryExpression -> . AngleCallExpression
    (40) IdExpression -> . ID
    (41) IdPairExpression -> . ID ID
    (46) LiteralExpression -> . IntLiteral
    (47) LiteralExpression -> . BoolLiteral
    (48) ParenthesesCallExpression -> . Expression LPAREN ExpressionList RPAREN
    (19) BracketCallExpression -> . Expression LBRACKET Expression RBRACKET
    (28) DotExpression -> . Expression DOT Expression
    (49) ParenthesesExpression -> . LPAREN Expression RPAREN
    (27) DereferenceExpression -> . Expression DEREF
    (1) AddressExpression -> . ADDRESS Expression
    (2) AngleCallExpression -> . Expression LANGLE ExpressionList RANGLE
    (45) IntLiteral -> . INTL
    (18) BoolLiteral -> . BOOLL

    ID              shift and go to state 23
    LPAREN          shift and go to state 26
    ADDRESS         shift and go to state 27
    INTL            shift and go to state 28
    BOOLL           shift and go to state 29

    Expression                     shift and go to state 30
    BinaryExpression               shift and go to state 11
    UnaryExpression                shift and go to state 12
    IdExpression                   shift and go to state 13
    IdPairExpression               shift and go to state 14
    LiteralExpression              shift and go to state 15
    ParenthesesCallExpression      shift and go to state 16
    BracketCallExpression          shift and go to state 17
    DotExpression                  shift and go to state 18
    ParenthesesExpression          shift and go to state 19
    DereferenceExpression          shift and go to state 20
    AddressExpression              shift and go to state 21
    AngleCallExpression            shift and go to state 22
    IntLiteral                     shift and go to state 24
    BoolLiteral                    shift and go to state 25

state 8

    (24) DefinitionList -> FunctionDefinition DefinitionList .

    $end            reduce using rule 24 (DefinitionList -> FunctionDefinition DefinitionList .)


state 9

    (25) DefinitionList -> StructDefinition DefinitionList .

    $end            reduce using rule 25 (DefinitionList -> StructDefinition DefinitionList .)


state 10

    (38) FunctionDefinition -> FN Expression . Block
    (39) FunctionDefinition -> FN Expression . ARROW Expression Block
    (4) BinaryExpression -> Expression . PLUS Expression
    (5) BinaryExpression -> Expression . MINUS Expression
    (6) BinaryExpression -> Expression . TIMES Expression
    (7) BinaryExpression -> Expression . DIVIDE Expression
    (8) BinaryExpression -> Expression . MOD Expression
    (9) BinaryExpression -> Expression . LEQ Expression
    (10) BinaryExpression -> Expression . GEQ Expression
    (11) BinaryExpression -> Expression . LT Expression
    (12) BinaryExpression -> Expression . GT Expression
    (13) BinaryExpression -> Expression . EQ Expression
    (14) BinaryExpression -> Expression . NE Expression
    (48) ParenthesesCallExpression -> Expression . LPAREN ExpressionList RPAREN
    (19) BracketCallExpression -> Expression . LBRACKET Expression RBRACKET
    (28) DotExpression -> Expression . DOT Expression
    (27) DereferenceExpression -> Expression . DEREF
    (2) AngleCallExpression -> Expression . LANGLE ExpressionList RANGLE
    (16) Block -> . LBRACE StatementList RBRACE

    ARROW           shift and go to state 32
    PLUS            shift and go to state 33
    MINUS           shift and go to state 34
    TIMES           shift and go to state 35
    DIVIDE          shift and go to state 36
    MOD             shift and go to state 37
    LEQ             shift and go to state 38
    GEQ             shift and go to state 39
    LT              shift and go to state 40
    GT              shift and go to state 41
    EQ              shift and go to state 42
    NE              shift and go to state 43
    LPAREN          shift and go to state 44
    LBRACKET        shift and go to state 45
    DOT             shift and go to state 46
    DEREF           shift and go to state 47
    LANGLE          shift and go to state 48
    LBRACE          shift and go to state 49

    Block                          shift and go to state 31

state 11

    (29) Expression -> BinaryExpression .

    ARROW           reduce using rule 29 (Expression -> BinaryExpression .)
    PLUS            reduce using rule 29 (Expression -> BinaryExpression .)
    MINUS           reduce using rule 29 (Expression -> BinaryExpression .)
    TIMES           reduce using rule 29 (Expression -> BinaryExpression .)
    DIVIDE          reduce using rule 29 (Expression -> BinaryExpression .)
    MOD             reduce using rule 29 (Expression -> BinaryExpression .)
    LEQ             reduce using rule 29 (Expression -> BinaryExpression .)
    GEQ             reduce using rule 29 (Expression -> BinaryExpression .)
    LT              reduce using rule 29 (Expression -> BinaryExpression .)
    GT              reduce using rule 29 (Expression -> BinaryExpression .)
    EQ              reduce using rule 29 (Expression -> BinaryExpression .)
    NE              reduce using rule 29 (Expression -> BinaryExpression .)
    LPAREN          reduce using rule 29 (Expression -> BinaryExpression .)
    LBRACKET        reduce using rule 29 (Expression -> BinaryExpression .)
    DOT             reduce using rule 29 (Expression -> BinaryExpression .)
    DEREF           reduce using rule 29 (Expression -> BinaryExpression .)
    LANGLE          reduce using rule 29 (Expression -> BinaryExpression .)
    LBRACE          reduce using rule 29 (Expression -> BinaryExpression .)
    RPAREN          reduce using rule 29 (Expression -> BinaryExpression .)
    COMMA           reduce using rule 29 (Expression -> BinaryExpression .)
    RBRACKET        reduce using rule 29 (Expression -> BinaryExpression .)
    RANGLE          reduce using rule 29 (Expression -> BinaryExpression .)
    ASSIGNMENT      reduce using rule 29 (Expression -> BinaryExpression .)
    SEMICOLON       reduce using rule 29 (Expression -> BinaryExpression .)
    ID              reduce using rule 29 (Expression -> BinaryExpression .)
    ADDRESS         reduce using rule 29 (Expression -> BinaryExpression .)
    INTL            reduce using rule 29 (Expression -> BinaryExpression .)
    BOOLL           reduce using rule 29 (Expression -> BinaryExpression .)


state 12

    (30) Expression -> UnaryExpression .

    ARROW           reduce using rule 30 (Expression -> UnaryExpression .)
    PLUS            reduce using rule 30 (Expression -> UnaryExpression .)
    MINUS           reduce using rule 30 (Expression -> UnaryExpression .)
    TIMES           reduce using rule 30 (Expression -> UnaryExpression .)
    DIVIDE          reduce using rule 30 (Expression -> UnaryExpression .)
    MOD             reduce using rule 30 (Expression -> UnaryExpression .)
    LEQ             reduce using rule 30 (Expression -> UnaryExpression .)
    GEQ             reduce using rule 30 (Expression -> UnaryExpression .)
    LT              reduce using rule 30 (Expression -> UnaryExpression .)
    GT              reduce using rule 30 (Expression -> UnaryExpression .)
    EQ              reduce using rule 30 (Expression -> UnaryExpression .)
    NE              reduce using rule 30 (Expression -> UnaryExpression .)
    LPAREN          reduce using rule 30 (Expression -> UnaryExpression .)
    LBRACKET        reduce using rule 30 (Expression -> UnaryExpression .)
    DOT             reduce using rule 30 (Expression -> UnaryExpression .)
    DEREF           reduce using rule 30 (Expression -> UnaryExpression .)
    LANGLE          reduce using rule 30 (Expression -> UnaryExpression .)
    LBRACE          reduce using rule 30 (Expression -> UnaryExpression .)
    RPAREN          reduce using rule 30 (Expression -> UnaryExpression .)
    COMMA           reduce using rule 30 (Expression -> UnaryExpression .)
    RBRACKET        reduce using rule 30 (Expression -> UnaryExpression .)
    RANGLE          reduce using rule 30 (Expression -> UnaryExpression .)
    ASSIGNMENT      reduce using rule 30 (Expression -> UnaryExpression .)
    SEMICOLON       reduce using rule 30 (Expression -> UnaryExpression .)
    ID              reduce using rule 30 (Expression -> UnaryExpression .)
    ADDRESS         reduce using rule 30 (Expression -> UnaryExpression .)
    INTL            reduce using rule 30 (Expression -> UnaryExpression .)
    BOOLL           reduce using rule 30 (Expression -> UnaryExpression .)


state 13

    (31) Expression -> IdExpression .

    ARROW           reduce using rule 31 (Expression -> IdExpression .)
    PLUS            reduce using rule 31 (Expression -> IdExpression .)
    MINUS           reduce using rule 31 (Expression -> IdExpression .)
    TIMES           reduce using rule 31 (Expression -> IdExpression .)
    DIVIDE          reduce using rule 31 (Expression -> IdExpression .)
    MOD             reduce using rule 31 (Expression -> IdExpression .)
    LEQ             reduce using rule 31 (Expression -> IdExpression .)
    GEQ             reduce using rule 31 (Expression -> IdExpression .)
    LT              reduce using rule 31 (Expression -> IdExpression .)
    GT              reduce using rule 31 (Expression -> IdExpression .)
    EQ              reduce using rule 31 (Expression -> IdExpression .)
    NE              reduce using rule 31 (Expression -> IdExpression .)
    LPAREN          reduce using rule 31 (Expression -> IdExpression .)
    LBRACKET        reduce using rule 31 (Expression -> IdExpression .)
    DOT             reduce using rule 31 (Expression -> IdExpression .)
    DEREF           reduce using rule 31 (Expression -> IdExpression .)
    LANGLE          reduce using rule 31 (Expression -> IdExpression .)
    LBRACE          reduce using rule 31 (Expression -> IdExpression .)
    RPAREN          reduce using rule 31 (Expression -> IdExpression .)
    COMMA           reduce using rule 31 (Expression -> IdExpression .)
    RBRACKET        reduce using rule 31 (Expression -> IdExpression .)
    RANGLE          reduce using rule 31 (Expression -> IdExpression .)
    ASSIGNMENT      reduce using rule 31 (Expression -> IdExpression .)
    SEMICOLON       reduce using rule 31 (Expression -> IdExpression .)
    ID              reduce using rule 31 (Expression -> IdExpression .)
    ADDRESS         reduce using rule 31 (Expression -> IdExpression .)
    INTL            reduce using rule 31 (Expression -> IdExpression .)
    BOOLL           reduce using rule 31 (Expression -> IdExpression .)


state 14

    (32) Expression -> IdPairExpression .

    ARROW           reduce using rule 32 (Expression -> IdPairExpression .)
    PLUS            reduce using rule 32 (Expression -> IdPairExpression .)
    MINUS           reduce using rule 32 (Expression -> IdPairExpression .)
    TIMES           reduce using rule 32 (Expression -> IdPairExpression .)
    DIVIDE          reduce using rule 32 (Expression -> IdPairExpression .)
    MOD             reduce using rule 32 (Expression -> IdPairExpression .)
    LEQ             reduce using rule 32 (Expression -> IdPairExpression .)
    GEQ             reduce using rule 32 (Expression -> IdPairExpression .)
    LT              reduce using rule 32 (Expression -> IdPairExpression .)
    GT              reduce using rule 32 (Expression -> IdPairExpression .)
    EQ              reduce using rule 32 (Expression -> IdPairExpression .)
    NE              reduce using rule 32 (Expression -> IdPairExpression .)
    LPAREN          reduce using rule 32 (Expression -> IdPairExpression .)
    LBRACKET        reduce using rule 32 (Expression -> IdPairExpression .)
    DOT             reduce using rule 32 (Expression -> IdPairExpression .)
    DEREF           reduce using rule 32 (Expression -> IdPairExpression .)
    LANGLE          reduce using rule 32 (Expression -> IdPairExpression .)
    LBRACE          reduce using rule 32 (Expression -> IdPairExpression .)
    RPAREN          reduce using rule 32 (Expression -> IdPairExpression .)
    COMMA           reduce using rule 32 (Expression -> IdPairExpression .)
    RBRACKET        reduce using rule 32 (Expression -> IdPairExpression .)
    RANGLE          reduce using rule 32 (Expression -> IdPairExpression .)
    ASSIGNMENT      reduce using rule 32 (Expression -> IdPairExpression .)
    SEMICOLON       reduce using rule 32 (Expression -> IdPairExpression .)
    ID              reduce using rule 32 (Expression -> IdPairExpression .)
    ADDRESS         reduce using rule 32 (Expression -> IdPairExpression .)
    INTL            reduce using rule 32 (Expression -> IdPairExpression .)
    BOOLL           reduce using rule 32 (Expression -> IdPairExpression .)


state 15

    (68) UnaryExpression -> LiteralExpression .

    ARROW           reduce using rule 68 (UnaryExpression -> LiteralExpression .)
    PLUS            reduce using rule 68 (UnaryExpression -> LiteralExpression .)
    MINUS           reduce using rule 68 (UnaryExpression -> LiteralExpression .)
    TIMES           reduce using rule 68 (UnaryExpression -> LiteralExpression .)
    DIVIDE          reduce using rule 68 (UnaryExpression -> LiteralExpression .)
    MOD             reduce using rule 68 (UnaryExpression -> LiteralExpression .)
    LEQ             reduce using rule 68 (UnaryExpression -> LiteralExpression .)
    GEQ             reduce using rule 68 (UnaryExpression -> LiteralExpression .)
    LT              reduce using rule 68 (UnaryExpression -> LiteralExpression .)
    GT              reduce using rule 68 (UnaryExpression -> LiteralExpression .)
    EQ              reduce using rule 68 (UnaryExpression -> LiteralExpression .)
    NE              reduce using rule 68 (UnaryExpression -> LiteralExpression .)
    LPAREN          reduce using rule 68 (UnaryExpression -> LiteralExpression .)
    LBRACKET        reduce using rule 68 (UnaryExpression -> LiteralExpression .)
    DOT             reduce using rule 68 (UnaryExpression -> LiteralExpression .)
    DEREF           reduce using rule 68 (UnaryExpression -> LiteralExpression .)
    LANGLE          reduce using rule 68 (UnaryExpression -> LiteralExpression .)
    LBRACE          reduce using rule 68 (UnaryExpression -> LiteralExpression .)
    RPAREN          reduce using rule 68 (UnaryExpression -> LiteralExpression .)
    COMMA           reduce using rule 68 (UnaryExpression -> LiteralExpression .)
    RBRACKET        reduce using rule 68 (UnaryExpression -> LiteralExpression .)
    RANGLE          reduce using rule 68 (UnaryExpression -> LiteralExpression .)
    ASSIGNMENT      reduce using rule 68 (UnaryExpression -> LiteralExpression .)
    SEMICOLON       reduce using rule 68 (UnaryExpression -> LiteralExpression .)
    ID              reduce using rule 68 (UnaryExpression -> LiteralExpression .)
    ADDRESS         reduce using rule 68 (UnaryExpression -> LiteralExpression .)
    INTL            reduce using rule 68 (UnaryExpression -> LiteralExpression .)
    BOOLL           reduce using rule 68 (UnaryExpression -> LiteralExpression .)


state 16

    (69) UnaryExpression -> ParenthesesCallExpression .

    ARROW           reduce using rule 69 (UnaryExpression -> ParenthesesCallExpression .)
    PLUS            reduce using rule 69 (UnaryExpression -> ParenthesesCallExpression .)
    MINUS           reduce using rule 69 (UnaryExpression -> ParenthesesCallExpression .)
    TIMES           reduce using rule 69 (UnaryExpression -> ParenthesesCallExpression .)
    DIVIDE          reduce using rule 69 (UnaryExpression -> ParenthesesCallExpression .)
    MOD             reduce using rule 69 (UnaryExpression -> ParenthesesCallExpression .)
    LEQ             reduce using rule 69 (UnaryExpression -> ParenthesesCallExpression .)
    GEQ             reduce using rule 69 (UnaryExpression -> ParenthesesCallExpression .)
    LT              reduce using rule 69 (UnaryExpression -> ParenthesesCallExpression .)
    GT              reduce using rule 69 (UnaryExpression -> ParenthesesCallExpression .)
    EQ              reduce using rule 69 (UnaryExpression -> ParenthesesCallExpression .)
    NE              reduce using rule 69 (UnaryExpression -> ParenthesesCallExpression .)
    LPAREN          reduce using rule 69 (UnaryExpression -> ParenthesesCallExpression .)
    LBRACKET        reduce using rule 69 (UnaryExpression -> ParenthesesCallExpression .)
    DOT             reduce using rule 69 (UnaryExpression -> ParenthesesCallExpression .)
    DEREF           reduce using rule 69 (UnaryExpression -> ParenthesesCallExpression .)
    LANGLE          reduce using rule 69 (UnaryExpression -> ParenthesesCallExpression .)
    LBRACE          reduce using rule 69 (UnaryExpression -> ParenthesesCallExpression .)
    RPAREN          reduce using rule 69 (UnaryExpression -> ParenthesesCallExpression .)
    COMMA           reduce using rule 69 (UnaryExpression -> ParenthesesCallExpression .)
    RBRACKET        reduce using rule 69 (UnaryExpression -> ParenthesesCallExpression .)
    RANGLE          reduce using rule 69 (UnaryExpression -> ParenthesesCallExpression .)
    ASSIGNMENT      reduce using rule 69 (UnaryExpression -> ParenthesesCallExpression .)
    SEMICOLON       reduce using rule 69 (UnaryExpression -> ParenthesesCallExpression .)
    ID              reduce using rule 69 (UnaryExpression -> ParenthesesCallExpression .)
    ADDRESS         reduce using rule 69 (UnaryExpression -> ParenthesesCallExpression .)
    INTL            reduce using rule 69 (UnaryExpression -> ParenthesesCallExpression .)
    BOOLL           reduce using rule 69 (UnaryExpression -> ParenthesesCallExpression .)


state 17

    (70) UnaryExpression -> BracketCallExpression .

    ARROW           reduce using rule 70 (UnaryExpression -> BracketCallExpression .)
    PLUS            reduce using rule 70 (UnaryExpression -> BracketCallExpression .)
    MINUS           reduce using rule 70 (UnaryExpression -> BracketCallExpression .)
    TIMES           reduce using rule 70 (UnaryExpression -> BracketCallExpression .)
    DIVIDE          reduce using rule 70 (UnaryExpression -> BracketCallExpression .)
    MOD             reduce using rule 70 (UnaryExpression -> BracketCallExpression .)
    LEQ             reduce using rule 70 (UnaryExpression -> BracketCallExpression .)
    GEQ             reduce using rule 70 (UnaryExpression -> BracketCallExpression .)
    LT              reduce using rule 70 (UnaryExpression -> BracketCallExpression .)
    GT              reduce using rule 70 (UnaryExpression -> BracketCallExpression .)
    EQ              reduce using rule 70 (UnaryExpression -> BracketCallExpression .)
    NE              reduce using rule 70 (UnaryExpression -> BracketCallExpression .)
    LPAREN          reduce using rule 70 (UnaryExpression -> BracketCallExpression .)
    LBRACKET        reduce using rule 70 (UnaryExpression -> BracketCallExpression .)
    DOT             reduce using rule 70 (UnaryExpression -> BracketCallExpression .)
    DEREF           reduce using rule 70 (UnaryExpression -> BracketCallExpression .)
    LANGLE          reduce using rule 70 (UnaryExpression -> BracketCallExpression .)
    LBRACE          reduce using rule 70 (UnaryExpression -> BracketCallExpression .)
    RPAREN          reduce using rule 70 (UnaryExpression -> BracketCallExpression .)
    COMMA           reduce using rule 70 (UnaryExpression -> BracketCallExpression .)
    RBRACKET        reduce using rule 70 (UnaryExpression -> BracketCallExpression .)
    RANGLE          reduce using rule 70 (UnaryExpression -> BracketCallExpression .)
    ASSIGNMENT      reduce using rule 70 (UnaryExpression -> BracketCallExpression .)
    SEMICOLON       reduce using rule 70 (UnaryExpression -> BracketCallExpression .)
    ID              reduce using rule 70 (UnaryExpression -> BracketCallExpression .)
    ADDRESS         reduce using rule 70 (UnaryExpression -> BracketCallExpression .)
    INTL            reduce using rule 70 (UnaryExpression -> BracketCallExpression .)
    BOOLL           reduce using rule 70 (UnaryExpression -> BracketCallExpression .)


state 18

    (71) UnaryExpression -> DotExpression .

    ARROW           reduce using rule 71 (UnaryExpression -> DotExpression .)
    PLUS            reduce using rule 71 (UnaryExpression -> DotExpression .)
    MINUS           reduce using rule 71 (UnaryExpression -> DotExpression .)
    TIMES           reduce using rule 71 (UnaryExpression -> DotExpression .)
    DIVIDE          reduce using rule 71 (UnaryExpression -> DotExpression .)
    MOD             reduce using rule 71 (UnaryExpression -> DotExpression .)
    LEQ             reduce using rule 71 (UnaryExpression -> DotExpression .)
    GEQ             reduce using rule 71 (UnaryExpression -> DotExpression .)
    LT              reduce using rule 71 (UnaryExpression -> DotExpression .)
    GT              reduce using rule 71 (UnaryExpression -> DotExpression .)
    EQ              reduce using rule 71 (UnaryExpression -> DotExpression .)
    NE              reduce using rule 71 (UnaryExpression -> DotExpression .)
    LPAREN          reduce using rule 71 (UnaryExpression -> DotExpression .)
    LBRACKET        reduce using rule 71 (UnaryExpression -> DotExpression .)
    DOT             reduce using rule 71 (UnaryExpression -> DotExpression .)
    DEREF           reduce using rule 71 (UnaryExpression -> DotExpression .)
    LANGLE          reduce using rule 71 (UnaryExpression -> DotExpression .)
    LBRACE          reduce using rule 71 (UnaryExpression -> DotExpression .)
    RPAREN          reduce using rule 71 (UnaryExpression -> DotExpression .)
    COMMA           reduce using rule 71 (UnaryExpression -> DotExpression .)
    RBRACKET        reduce using rule 71 (UnaryExpression -> DotExpression .)
    RANGLE          reduce using rule 71 (UnaryExpression -> DotExpression .)
    ASSIGNMENT      reduce using rule 71 (UnaryExpression -> DotExpression .)
    SEMICOLON       reduce using rule 71 (UnaryExpression -> DotExpression .)
    ID              reduce using rule 71 (UnaryExpression -> DotExpression .)
    ADDRESS         reduce using rule 71 (UnaryExpression -> DotExpression .)
    INTL            reduce using rule 71 (UnaryExpression -> DotExpression .)
    BOOLL           reduce using rule 71 (UnaryExpression -> DotExpression .)


state 19

    (72) UnaryExpression -> ParenthesesExpression .

    ARROW           reduce using rule 72 (UnaryExpression -> ParenthesesExpression .)
    PLUS            reduce using rule 72 (UnaryExpression -> ParenthesesExpression .)
    MINUS           reduce using rule 72 (UnaryExpression -> ParenthesesExpression .)
    TIMES           reduce using rule 72 (UnaryExpression -> ParenthesesExpression .)
    DIVIDE          reduce using rule 72 (UnaryExpression -> ParenthesesExpression .)
    MOD             reduce using rule 72 (UnaryExpression -> ParenthesesExpression .)
    LEQ             reduce using rule 72 (UnaryExpression -> ParenthesesExpression .)
    GEQ             reduce using rule 72 (UnaryExpression -> ParenthesesExpression .)
    LT              reduce using rule 72 (UnaryExpression -> ParenthesesExpression .)
    GT              reduce using rule 72 (UnaryExpression -> ParenthesesExpression .)
    EQ              reduce using rule 72 (UnaryExpression -> ParenthesesExpression .)
    NE              reduce using rule 72 (UnaryExpression -> ParenthesesExpression .)
    LPAREN          reduce using rule 72 (UnaryExpression -> ParenthesesExpression .)
    LBRACKET        reduce using rule 72 (UnaryExpression -> ParenthesesExpression .)
    DOT             reduce using rule 72 (UnaryExpression -> ParenthesesExpression .)
    DEREF           reduce using rule 72 (UnaryExpression -> ParenthesesExpression .)
    LANGLE          reduce using rule 72 (UnaryExpression -> ParenthesesExpression .)
    LBRACE          reduce using rule 72 (UnaryExpression -> ParenthesesExpression .)
    RPAREN          reduce using rule 72 (UnaryExpression -> ParenthesesExpression .)
    COMMA           reduce using rule 72 (UnaryExpression -> ParenthesesExpression .)
    RBRACKET        reduce using rule 72 (UnaryExpression -> ParenthesesExpression .)
    RANGLE          reduce using rule 72 (UnaryExpression -> ParenthesesExpression .)
    ASSIGNMENT      reduce using rule 72 (UnaryExpression -> ParenthesesExpression .)
    SEMICOLON       reduce using rule 72 (UnaryExpression -> ParenthesesExpression .)
    ID              reduce using rule 72 (UnaryExpression -> ParenthesesExpression .)
    ADDRESS         reduce using rule 72 (UnaryExpression -> ParenthesesExpression .)
    INTL            reduce using rule 72 (UnaryExpression -> ParenthesesExpression .)
    BOOLL           reduce using rule 72 (UnaryExpression -> ParenthesesExpression .)


state 20

    (73) UnaryExpression -> DereferenceExpression .

    ARROW           reduce using rule 73 (UnaryExpression -> DereferenceExpression .)
    PLUS            reduce using rule 73 (UnaryExpression -> DereferenceExpression .)
    MINUS           reduce using rule 73 (UnaryExpression -> DereferenceExpression .)
    TIMES           reduce using rule 73 (UnaryExpression -> DereferenceExpression .)
    DIVIDE          reduce using rule 73 (UnaryExpression -> DereferenceExpression .)
    MOD             reduce using rule 73 (UnaryExpression -> DereferenceExpression .)
    LEQ             reduce using rule 73 (UnaryExpression -> DereferenceExpression .)
    GEQ             reduce using rule 73 (UnaryExpression -> DereferenceExpression .)
    LT              reduce using rule 73 (UnaryExpression -> DereferenceExpression .)
    GT              reduce using rule 73 (UnaryExpression -> DereferenceExpression .)
    EQ              reduce using rule 73 (UnaryExpression -> DereferenceExpression .)
    NE              reduce using rule 73 (UnaryExpression -> DereferenceExpression .)
    LPAREN          reduce using rule 73 (UnaryExpression -> DereferenceExpression .)
    LBRACKET        reduce using rule 73 (UnaryExpression -> DereferenceExpression .)
    DOT             reduce using rule 73 (UnaryExpression -> DereferenceExpression .)
    DEREF           reduce using rule 73 (UnaryExpression -> DereferenceExpression .)
    LANGLE          reduce using rule 73 (UnaryExpression -> DereferenceExpression .)
    LBRACE          reduce using rule 73 (UnaryExpression -> DereferenceExpression .)
    RPAREN          reduce using rule 73 (UnaryExpression -> DereferenceExpression .)
    COMMA           reduce using rule 73 (UnaryExpression -> DereferenceExpression .)
    RBRACKET        reduce using rule 73 (UnaryExpression -> DereferenceExpression .)
    RANGLE          reduce using rule 73 (UnaryExpression -> DereferenceExpression .)
    ASSIGNMENT      reduce using rule 73 (UnaryExpression -> DereferenceExpression .)
    SEMICOLON       reduce using rule 73 (UnaryExpression -> DereferenceExpression .)
    ID              reduce using rule 73 (UnaryExpression -> DereferenceExpression .)
    ADDRESS         reduce using rule 73 (UnaryExpression -> DereferenceExpression .)
    INTL            reduce using rule 73 (UnaryExpression -> DereferenceExpression .)
    BOOLL           reduce using rule 73 (UnaryExpression -> DereferenceExpression .)


state 21

    (74) UnaryExpression -> AddressExpression .

    ARROW           reduce using rule 74 (UnaryExpression -> AddressExpression .)
    PLUS            reduce using rule 74 (UnaryExpression -> AddressExpression .)
    MINUS           reduce using rule 74 (UnaryExpression -> AddressExpression .)
    TIMES           reduce using rule 74 (UnaryExpression -> AddressExpression .)
    DIVIDE          reduce using rule 74 (UnaryExpression -> AddressExpression .)
    MOD             reduce using rule 74 (UnaryExpression -> AddressExpression .)
    LEQ             reduce using rule 74 (UnaryExpression -> AddressExpression .)
    GEQ             reduce using rule 74 (UnaryExpression -> AddressExpression .)
    LT              reduce using rule 74 (UnaryExpression -> AddressExpression .)
    GT              reduce using rule 74 (UnaryExpression -> AddressExpression .)
    EQ              reduce using rule 74 (UnaryExpression -> AddressExpression .)
    NE              reduce using rule 74 (UnaryExpression -> AddressExpression .)
    LPAREN          reduce using rule 74 (UnaryExpression -> AddressExpression .)
    LBRACKET        reduce using rule 74 (UnaryExpression -> AddressExpression .)
    DOT             reduce using rule 74 (UnaryExpression -> AddressExpression .)
    DEREF           reduce using rule 74 (UnaryExpression -> AddressExpression .)
    LANGLE          reduce using rule 74 (UnaryExpression -> AddressExpression .)
    LBRACE          reduce using rule 74 (UnaryExpression -> AddressExpression .)
    RPAREN          reduce using rule 74 (UnaryExpression -> AddressExpression .)
    COMMA           reduce using rule 74 (UnaryExpression -> AddressExpression .)
    RBRACKET        reduce using rule 74 (UnaryExpression -> AddressExpression .)
    RANGLE          reduce using rule 74 (UnaryExpression -> AddressExpression .)
    ASSIGNMENT      reduce using rule 74 (UnaryExpression -> AddressExpression .)
    SEMICOLON       reduce using rule 74 (UnaryExpression -> AddressExpression .)
    ID              reduce using rule 74 (UnaryExpression -> AddressExpression .)
    ADDRESS         reduce using rule 74 (UnaryExpression -> AddressExpression .)
    INTL            reduce using rule 74 (UnaryExpression -> AddressExpression .)
    BOOLL           reduce using rule 74 (UnaryExpression -> AddressExpression .)


state 22

    (75) UnaryExpression -> AngleCallExpression .

    ARROW           reduce using rule 75 (UnaryExpression -> AngleCallExpression .)
    PLUS            reduce using rule 75 (UnaryExpression -> AngleCallExpression .)
    MINUS           reduce using rule 75 (UnaryExpression -> AngleCallExpression .)
    TIMES           reduce using rule 75 (UnaryExpression -> AngleCallExpression .)
    DIVIDE          reduce using rule 75 (UnaryExpression -> AngleCallExpression .)
    MOD             reduce using rule 75 (UnaryExpression -> AngleCallExpression .)
    LEQ             reduce using rule 75 (UnaryExpression -> AngleCallExpression .)
    GEQ             reduce using rule 75 (UnaryExpression -> AngleCallExpression .)
    LT              reduce using rule 75 (UnaryExpression -> AngleCallExpression .)
    GT              reduce using rule 75 (UnaryExpression -> AngleCallExpression .)
    EQ              reduce using rule 75 (UnaryExpression -> AngleCallExpression .)
    NE              reduce using rule 75 (UnaryExpression -> AngleCallExpression .)
    LPAREN          reduce using rule 75 (UnaryExpression -> AngleCallExpression .)
    LBRACKET        reduce using rule 75 (UnaryExpression -> AngleCallExpression .)
    DOT             reduce using rule 75 (UnaryExpression -> AngleCallExpression .)
    DEREF           reduce using rule 75 (UnaryExpression -> AngleCallExpression .)
    LANGLE          reduce using rule 75 (UnaryExpression -> AngleCallExpression .)
    LBRACE          reduce using rule 75 (UnaryExpression -> AngleCallExpression .)
    RPAREN          reduce using rule 75 (UnaryExpression -> AngleCallExpression .)
    COMMA           reduce using rule 75 (UnaryExpression -> AngleCallExpression .)
    RBRACKET        reduce using rule 75 (UnaryExpression -> AngleCallExpression .)
    RANGLE          reduce using rule 75 (UnaryExpression -> AngleCallExpression .)
    ASSIGNMENT      reduce using rule 75 (UnaryExpression -> AngleCallExpression .)
    SEMICOLON       reduce using rule 75 (UnaryExpression -> AngleCallExpression .)
    ID              reduce using rule 75 (UnaryExpression -> AngleCallExpression .)
    ADDRESS         reduce using rule 75 (UnaryExpression -> AngleCallExpression .)
    INTL            reduce using rule 75 (UnaryExpression -> AngleCallExpression .)
    BOOLL           reduce using rule 75 (UnaryExpression -> AngleCallExpression .)


state 23

    (40) IdExpression -> ID .
    (41) IdPairExpression -> ID . ID

  ! shift/reduce conflict for ID resolved as shift
    ARROW           reduce using rule 40 (IdExpression -> ID .)
    PLUS            reduce using rule 40 (IdExpression -> ID .)
    MINUS           reduce using rule 40 (IdExpression -> ID .)
    TIMES           reduce using rule 40 (IdExpression -> ID .)
    DIVIDE          reduce using rule 40 (IdExpression -> ID .)
    MOD             reduce using rule 40 (IdExpression -> ID .)
    LEQ             reduce using rule 40 (IdExpression -> ID .)
    GEQ             reduce using rule 40 (IdExpression -> ID .)
    LT              reduce using rule 40 (IdExpression -> ID .)
    GT              reduce using rule 40 (IdExpression -> ID .)
    EQ              reduce using rule 40 (IdExpression -> ID .)
    NE              reduce using rule 40 (IdExpression -> ID .)
    LPAREN          reduce using rule 40 (IdExpression -> ID .)
    LBRACKET        reduce using rule 40 (IdExpression -> ID .)
    DOT             reduce using rule 40 (IdExpression -> ID .)
    DEREF           reduce using rule 40 (IdExpression -> ID .)
    LANGLE          reduce using rule 40 (IdExpression -> ID .)
    LBRACE          reduce using rule 40 (IdExpression -> ID .)
    RPAREN          reduce using rule 40 (IdExpression -> ID .)
    COMMA           reduce using rule 40 (IdExpression -> ID .)
    RBRACKET        reduce using rule 40 (IdExpression -> ID .)
    RANGLE          reduce using rule 40 (IdExpression -> ID .)
    ASSIGNMENT      reduce using rule 40 (IdExpression -> ID .)
    SEMICOLON       reduce using rule 40 (IdExpression -> ID .)
    ADDRESS         reduce using rule 40 (IdExpression -> ID .)
    INTL            reduce using rule 40 (IdExpression -> ID .)
    BOOLL           reduce using rule 40 (IdExpression -> ID .)
    ID              shift and go to state 50

  ! ID              [ reduce using rule 40 (IdExpression -> ID .) ]


state 24

    (46) LiteralExpression -> IntLiteral .

    ARROW           reduce using rule 46 (LiteralExpression -> IntLiteral .)
    PLUS            reduce using rule 46 (LiteralExpression -> IntLiteral .)
    MINUS           reduce using rule 46 (LiteralExpression -> IntLiteral .)
    TIMES           reduce using rule 46 (LiteralExpression -> IntLiteral .)
    DIVIDE          reduce using rule 46 (LiteralExpression -> IntLiteral .)
    MOD             reduce using rule 46 (LiteralExpression -> IntLiteral .)
    LEQ             reduce using rule 46 (LiteralExpression -> IntLiteral .)
    GEQ             reduce using rule 46 (LiteralExpression -> IntLiteral .)
    LT              reduce using rule 46 (LiteralExpression -> IntLiteral .)
    GT              reduce using rule 46 (LiteralExpression -> IntLiteral .)
    EQ              reduce using rule 46 (LiteralExpression -> IntLiteral .)
    NE              reduce using rule 46 (LiteralExpression -> IntLiteral .)
    LPAREN          reduce using rule 46 (LiteralExpression -> IntLiteral .)
    LBRACKET        reduce using rule 46 (LiteralExpression -> IntLiteral .)
    DOT             reduce using rule 46 (LiteralExpression -> IntLiteral .)
    DEREF           reduce using rule 46 (LiteralExpression -> IntLiteral .)
    LANGLE          reduce using rule 46 (LiteralExpression -> IntLiteral .)
    LBRACE          reduce using rule 46 (LiteralExpression -> IntLiteral .)
    RPAREN          reduce using rule 46 (LiteralExpression -> IntLiteral .)
    COMMA           reduce using rule 46 (LiteralExpression -> IntLiteral .)
    RBRACKET        reduce using rule 46 (LiteralExpression -> IntLiteral .)
    RANGLE          reduce using rule 46 (LiteralExpression -> IntLiteral .)
    ASSIGNMENT      reduce using rule 46 (LiteralExpression -> IntLiteral .)
    SEMICOLON       reduce using rule 46 (LiteralExpression -> IntLiteral .)
    ID              reduce using rule 46 (LiteralExpression -> IntLiteral .)
    ADDRESS         reduce using rule 46 (LiteralExpression -> IntLiteral .)
    INTL            reduce using rule 46 (LiteralExpression -> IntLiteral .)
    BOOLL           reduce using rule 46 (LiteralExpression -> IntLiteral .)


state 25

    (47) LiteralExpression -> BoolLiteral .

    ARROW           reduce using rule 47 (LiteralExpression -> BoolLiteral .)
    PLUS            reduce using rule 47 (LiteralExpression -> BoolLiteral .)
    MINUS           reduce using rule 47 (LiteralExpression -> BoolLiteral .)
    TIMES           reduce using rule 47 (LiteralExpression -> BoolLiteral .)
    DIVIDE          reduce using rule 47 (LiteralExpression -> BoolLiteral .)
    MOD             reduce using rule 47 (LiteralExpression -> BoolLiteral .)
    LEQ             reduce using rule 47 (LiteralExpression -> BoolLiteral .)
    GEQ             reduce using rule 47 (LiteralExpression -> BoolLiteral .)
    LT              reduce using rule 47 (LiteralExpression -> BoolLiteral .)
    GT              reduce using rule 47 (LiteralExpression -> BoolLiteral .)
    EQ              reduce using rule 47 (LiteralExpression -> BoolLiteral .)
    NE              reduce using rule 47 (LiteralExpression -> BoolLiteral .)
    LPAREN          reduce using rule 47 (LiteralExpression -> BoolLiteral .)
    LBRACKET        reduce using rule 47 (LiteralExpression -> BoolLiteral .)
    DOT             reduce using rule 47 (LiteralExpression -> BoolLiteral .)
    DEREF           reduce using rule 47 (LiteralExpression -> BoolLiteral .)
    LANGLE          reduce using rule 47 (LiteralExpression -> BoolLiteral .)
    LBRACE          reduce using rule 47 (LiteralExpression -> BoolLiteral .)
    RPAREN          reduce using rule 47 (LiteralExpression -> BoolLiteral .)
    COMMA           reduce using rule 47 (LiteralExpression -> BoolLiteral .)
    RBRACKET        reduce using rule 47 (LiteralExpression -> BoolLiteral .)
    RANGLE          reduce using rule 47 (LiteralExpression -> BoolLiteral .)
    ASSIGNMENT      reduce using rule 47 (LiteralExpression -> BoolLiteral .)
    SEMICOLON       reduce using rule 47 (LiteralExpression -> BoolLiteral .)
    ID              reduce using rule 47 (LiteralExpression -> BoolLiteral .)
    ADDRESS         reduce using rule 47 (LiteralExpression -> BoolLiteral .)
    INTL            reduce using rule 47 (LiteralExpression -> BoolLiteral .)
    BOOLL           reduce using rule 47 (LiteralExpression -> BoolLiteral .)


state 26

    (49) ParenthesesExpression -> LPAREN . Expression RPAREN
    (29) Expression -> . BinaryExpression
    (30) Expression -> . UnaryExpression
    (31) Expression -> . IdExpression
    (32) Expression -> . IdPairExpression
    (4) BinaryExpression -> . Expression PLUS Expression
    (5) BinaryExpression -> . Expression MINUS Expression
    (6) BinaryExpression -> . Expression TIMES Expression
    (7) BinaryExpression -> . Expression DIVIDE Expression
    (8) BinaryExpression -> . Expression MOD Expression
    (9) BinaryExpression -> . Expression LEQ Expression
    (10) BinaryExpression -> . Expression GEQ Expression
    (11) BinaryExpression -> . Expression LT Expression
    (12) BinaryExpression -> . Expression GT Expression
    (13) BinaryExpression -> . Expression EQ Expression
    (14) BinaryExpression -> . Expression NE Expression
    (68) UnaryExpression -> . LiteralExpression
    (69) UnaryExpression -> . ParenthesesCallExpression
    (70) UnaryExpression -> . BracketCallExpression
    (71) UnaryExpression -> . DotExpression
    (72) UnaryExpression -> . ParenthesesExpression
    (73) UnaryExpression -> . DereferenceExpression
    (74) UnaryExpression -> . AddressExpression
    (75) UnaryExpression -> . AngleCallExpression
    (40) IdExpression -> . ID
    (41) IdPairExpression -> . ID ID
    (46) LiteralExpression -> . IntLiteral
    (47) LiteralExpression -> . BoolLiteral
    (48) ParenthesesCallExpression -> . Expression LPAREN ExpressionList RPAREN
    (19) BracketCallExpression -> . Expression LBRACKET Expression RBRACKET
    (28) DotExpression -> . Expression DOT Expression
    (49) ParenthesesExpression -> . LPAREN Expression RPAREN
    (27) DereferenceExpression -> . Expression DEREF
    (1) AddressExpression -> . ADDRESS Expression
    (2) AngleCallExpression -> . Expression LANGLE ExpressionList RANGLE
    (45) IntLiteral -> . INTL
    (18) BoolLiteral -> . BOOLL

    ID              shift and go to state 23
    LPAREN          shift and go to state 26
    ADDRESS         shift and go to state 27
    INTL            shift and go to state 28
    BOOLL           shift and go to state 29

    Expression                     shift and go to state 51
    BinaryExpression               shift and go to state 11
    UnaryExpression                shift and go to state 12
    IdExpression                   shift and go to state 13
    IdPairExpression               shift and go to state 14
    LiteralExpression              shift and go to state 15
    ParenthesesCallExpression      shift and go to state 16
    BracketCallExpression          shift and go to state 17
    DotExpression                  shift and go to state 18
    ParenthesesExpression          shift and go to state 19
    DereferenceExpression          shift and go to state 20
    AddressExpression              shift and go to state 21
    AngleCallExpression            shift and go to state 22
    IntLiteral                     shift and go to state 24
    BoolLiteral                    shift and go to state 25

state 27

    (1) AddressExpression -> ADDRESS . Expression
    (29) Expression -> . BinaryExpression
    (30) Expression -> . UnaryExpression
    (31) Expression -> . IdExpression
    (32) Expression -> . IdPairExpression
    (4) BinaryExpression -> . Expression PLUS Expression
    (5) BinaryExpression -> . Expression MINUS Expression
    (6) BinaryExpression -> . Expression TIMES Expression
    (7) BinaryExpression -> . Expression DIVIDE Expression
    (8) BinaryExpression -> . Expression MOD Expression
    (9) BinaryExpression -> . Expression LEQ Expression
    (10) BinaryExpression -> . Expression GEQ Expression
    (11) BinaryExpression -> . Expression LT Expression
    (12) BinaryExpression -> . Expression GT Expression
    (13) BinaryExpression -> . Expression EQ Expression
    (14) BinaryExpression -> . Expression NE Expression
    (68) UnaryExpression -> . LiteralExpression
    (69) UnaryExpression -> . ParenthesesCallExpression
    (70) UnaryExpression -> . BracketCallExpression
    (71) UnaryExpression -> . DotExpression
    (72) UnaryExpression -> . ParenthesesExpression
    (73) UnaryExpression -> . DereferenceExpression
    (74) UnaryExpression -> . AddressExpression
    (75) UnaryExpression -> . AngleCallExpression
    (40) IdExpression -> . ID
    (41) IdPairExpression -> . ID ID
    (46) LiteralExpression -> . IntLiteral
    (47) LiteralExpression -> . BoolLiteral
    (48) ParenthesesCallExpression -> . Expression LPAREN ExpressionList RPAREN
    (19) BracketCallExpression -> . Expression LBRACKET Expression RBRACKET
    (28) DotExpression -> . Expression DOT Expression
    (49) ParenthesesExpression -> . LPAREN Expression RPAREN
    (27) DereferenceExpression -> . Expression DEREF
    (1) AddressExpression -> . ADDRESS Expression
    (2) AngleCallExpression -> . Expression LANGLE ExpressionList RANGLE
    (45) IntLiteral -> . INTL
    (18) BoolLiteral -> . BOOLL

    ID              shift and go to state 23
    LPAREN          shift and go to state 26
    ADDRESS         shift and go to state 27
    INTL            shift and go to state 28
    BOOLL           shift and go to state 29

    Expression                     shift and go to state 52
    BinaryExpression               shift and go to state 11
    UnaryExpression                shift and go to state 12
    IdExpression                   shift and go to state 13
    IdPairExpression               shift and go to state 14
    LiteralExpression              shift and go to state 15
    ParenthesesCallExpression      shift and go to state 16
    BracketCallExpression          shift and go to state 17
    DotExpression                  shift and go to state 18
    ParenthesesExpression          shift and go to state 19
    DereferenceExpression          shift and go to state 20
    AddressExpression              shift and go to state 21
    AngleCallExpression            shift and go to state 22
    IntLiteral                     shift and go to state 24
    BoolLiteral                    shift and go to state 25

state 28

    (45) IntLiteral -> INTL .

    ARROW           reduce using rule 45 (IntLiteral -> INTL .)
    PLUS            reduce using rule 45 (IntLiteral -> INTL .)
    MINUS           reduce using rule 45 (IntLiteral -> INTL .)
    TIMES           reduce using rule 45 (IntLiteral -> INTL .)
    DIVIDE          reduce using rule 45 (IntLiteral -> INTL .)
    MOD             reduce using rule 45 (IntLiteral -> INTL .)
    LEQ             reduce using rule 45 (IntLiteral -> INTL .)
    GEQ             reduce using rule 45 (IntLiteral -> INTL .)
    LT              reduce using rule 45 (IntLiteral -> INTL .)
    GT              reduce using rule 45 (IntLiteral -> INTL .)
    EQ              reduce using rule 45 (IntLiteral -> INTL .)
    NE              reduce using rule 45 (IntLiteral -> INTL .)
    LPAREN          reduce using rule 45 (IntLiteral -> INTL .)
    LBRACKET        reduce using rule 45 (IntLiteral -> INTL .)
    DOT             reduce using rule 45 (IntLiteral -> INTL .)
    DEREF           reduce using rule 45 (IntLiteral -> INTL .)
    LANGLE          reduce using rule 45 (IntLiteral -> INTL .)
    LBRACE          reduce using rule 45 (IntLiteral -> INTL .)
    RPAREN          reduce using rule 45 (IntLiteral -> INTL .)
    COMMA           reduce using rule 45 (IntLiteral -> INTL .)
    RBRACKET        reduce using rule 45 (IntLiteral -> INTL .)
    RANGLE          reduce using rule 45 (IntLiteral -> INTL .)
    ASSIGNMENT      reduce using rule 45 (IntLiteral -> INTL .)
    SEMICOLON       reduce using rule 45 (IntLiteral -> INTL .)
    ID              reduce using rule 45 (IntLiteral -> INTL .)
    ADDRESS         reduce using rule 45 (IntLiteral -> INTL .)
    INTL            reduce using rule 45 (IntLiteral -> INTL .)
    BOOLL           reduce using rule 45 (IntLiteral -> INTL .)


state 29

    (18) BoolLiteral -> BOOLL .

    ARROW           reduce using rule 18 (BoolLiteral -> BOOLL .)
    PLUS            reduce using rule 18 (BoolLiteral -> BOOLL .)
    MINUS           reduce using rule 18 (BoolLiteral -> BOOLL .)
    TIMES           reduce using rule 18 (BoolLiteral -> BOOLL .)
    DIVIDE          reduce using rule 18 (BoolLiteral -> BOOLL .)
    MOD             reduce using rule 18 (BoolLiteral -> BOOLL .)
    LEQ             reduce using rule 18 (BoolLiteral -> BOOLL .)
    GEQ             reduce using rule 18 (BoolLiteral -> BOOLL .)
    LT              reduce using rule 18 (BoolLiteral -> BOOLL .)
    GT              reduce using rule 18 (BoolLiteral -> BOOLL .)
    EQ              reduce using rule 18 (BoolLiteral -> BOOLL .)
    NE              reduce using rule 18 (BoolLiteral -> BOOLL .)
    LPAREN          reduce using rule 18 (BoolLiteral -> BOOLL .)
    LBRACKET        reduce using rule 18 (BoolLiteral -> BOOLL .)
    DOT             reduce using rule 18 (BoolLiteral -> BOOLL .)
    DEREF           reduce using rule 18 (BoolLiteral -> BOOLL .)
    LANGLE          reduce using rule 18 (BoolLiteral -> BOOLL .)
    LBRACE          reduce using rule 18 (BoolLiteral -> BOOLL .)
    RPAREN          reduce using rule 18 (BoolLiteral -> BOOLL .)
    COMMA           reduce using rule 18 (BoolLiteral -> BOOLL .)
    RBRACKET        reduce using rule 18 (BoolLiteral -> BOOLL .)
    RANGLE          reduce using rule 18 (BoolLiteral -> BOOLL .)
    ASSIGNMENT      reduce using rule 18 (BoolLiteral -> BOOLL .)
    SEMICOLON       reduce using rule 18 (BoolLiteral -> BOOLL .)
    ID              reduce using rule 18 (BoolLiteral -> BOOLL .)
    ADDRESS         reduce using rule 18 (BoolLiteral -> BOOLL .)
    INTL            reduce using rule 18 (BoolLiteral -> BOOLL .)
    BOOLL           reduce using rule 18 (BoolLiteral -> BOOLL .)


state 30

    (66) StructDefinition -> STRUCT Expression . Block
    (4) BinaryExpression -> Expression . PLUS Expression
    (5) BinaryExpression -> Expression . MINUS Expression
    (6) BinaryExpression -> Expression . TIMES Expression
    (7) BinaryExpression -> Expression . DIVIDE Expression
    (8) BinaryExpression -> Expression . MOD Expression
    (9) BinaryExpression -> Expression . LEQ Expression
    (10) BinaryExpression -> Expression . GEQ Expression
    (11) BinaryExpression -> Expression . LT Expression
    (12) BinaryExpression -> Expression . GT Expression
    (13) BinaryExpression -> Expression . EQ Expression
    (14) BinaryExpression -> Expression . NE Expression
    (48) ParenthesesCallExpression -> Expression . LPAREN ExpressionList RPAREN
    (19) BracketCallExpression -> Expression . LBRACKET Expression RBRACKET
    (28) DotExpression -> Expression . DOT Expression
    (27) DereferenceExpression -> Expression . DEREF
    (2) AngleCallExpression -> Expression . LANGLE ExpressionList RANGLE
    (16) Block -> . LBRACE StatementList RBRACE

    PLUS            shift and go to state 33
    MINUS           shift and go to state 34
    TIMES           shift and go to state 35
    DIVIDE          shift and go to state 36
    MOD             shift and go to state 37
    LEQ             shift and go to state 38
    GEQ             shift and go to state 39
    LT              shift and go to state 40
    GT              shift and go to state 41
    EQ              shift and go to state 42
    NE              shift and go to state 43
    LPAREN          shift and go to state 44
    LBRACKET        shift and go to state 45
    DOT             shift and go to state 46
    DEREF           shift and go to state 47
    LANGLE          shift and go to state 48
    LBRACE          shift and go to state 49

    Block                          shift and go to state 53

state 31

    (38) FunctionDefinition -> FN Expression Block .

    FN              reduce using rule 38 (FunctionDefinition -> FN Expression Block .)
    STRUCT          reduce using rule 38 (FunctionDefinition -> FN Expression Block .)
    $end            reduce using rule 38 (FunctionDefinition -> FN Expression Block .)


state 32

    (39) FunctionDefinition -> FN Expression ARROW . Expression Block
    (29) Expression -> . BinaryExpression
    (30) Expression -> . UnaryExpression
    (31) Expression -> . IdExpression
    (32) Expression -> . IdPairExpression
    (4) BinaryExpression -> . Expression PLUS Expression
    (5) BinaryExpression -> . Expression MINUS Expression
    (6) BinaryExpression -> . Expression TIMES Expression
    (7) BinaryExpression -> . Expression DIVIDE Expression
    (8) BinaryExpression -> . Expression MOD Expression
    (9) BinaryExpression -> . Expression LEQ Expression
    (10) BinaryExpression -> . Expression GEQ Expression
    (11) BinaryExpression -> . Expression LT Expression
    (12) BinaryExpression -> . Expression GT Expression
    (13) BinaryExpression -> . Expression EQ Expression
    (14) BinaryExpression -> . Expression NE Expression
    (68) UnaryExpression -> . LiteralExpression
    (69) UnaryExpression -> . ParenthesesCallExpression
    (70) UnaryExpression -> . BracketCallExpression
    (71) UnaryExpression -> . DotExpression
    (72) UnaryExpression -> . ParenthesesExpression
    (73) UnaryExpression -> . DereferenceExpression
    (74) UnaryExpression -> . AddressExpression
    (75) UnaryExpression -> . AngleCallExpression
    (40) IdExpression -> . ID
    (41) IdPairExpression -> . ID ID
    (46) LiteralExpression -> . IntLiteral
    (47) LiteralExpression -> . BoolLiteral
    (48) ParenthesesCallExpression -> . Expression LPAREN ExpressionList RPAREN
    (19) BracketCallExpression -> . Expression LBRACKET Expression RBRACKET
    (28) DotExpression -> . Expression DOT Expression
    (49) ParenthesesExpression -> . LPAREN Expression RPAREN
    (27) DereferenceExpression -> . Expression DEREF
    (1) AddressExpression -> . ADDRESS Expression
    (2) AngleCallExpression -> . Expression LANGLE ExpressionList RANGLE
    (45) IntLiteral -> . INTL
    (18) BoolLiteral -> . BOOLL

    ID              shift and go to state 23
    LPAREN          shift and go to state 26
    ADDRESS         shift and go to state 27
    INTL            shift and go to state 28
    BOOLL           shift and go to state 29

    Expression                     shift and go to state 54
    BinaryExpression               shift and go to state 11
    UnaryExpression                shift and go to state 12
    IdExpression                   shift and go to state 13
    IdPairExpression               shift and go to state 14
    LiteralExpression              shift and go to state 15
    ParenthesesCallExpression      shift and go to state 16
    BracketCallExpression          shift and go to state 17
    DotExpression                  shift and go to state 18
    ParenthesesExpression          shift and go to state 19
    DereferenceExpression          shift and go to state 20
    AddressExpression              shift and go to state 21
    AngleCallExpression            shift and go to state 22
    IntLiteral                     shift and go to state 24
    BoolLiteral                    shift and go to state 25

state 33

    (4) BinaryExpression -> Expression PLUS . Expression
    (29) Expression -> . BinaryExpression
    (30) Expression -> . UnaryExpression
    (31) Expression -> . IdExpression
    (32) Expression -> . IdPairExpression
    (4) BinaryExpression -> . Expression PLUS Expression
    (5) BinaryExpression -> . Expression MINUS Expression
    (6) BinaryExpression -> . Expression TIMES Expression
    (7) BinaryExpression -> . Expression DIVIDE Expression
    (8) BinaryExpression -> . Expression MOD Expression
    (9) BinaryExpression -> . Expression LEQ Expression
    (10) BinaryExpression -> . Expression GEQ Expression
    (11) BinaryExpression -> . Expression LT Expression
    (12) BinaryExpression -> . Expression GT Expression
    (13) BinaryExpression -> . Expression EQ Expression
    (14) BinaryExpression -> . Expression NE Expression
    (68) UnaryExpression -> . LiteralExpression
    (69) UnaryExpression -> . ParenthesesCallExpression
    (70) UnaryExpression -> . BracketCallExpression
    (71) UnaryExpression -> . DotExpression
    (72) UnaryExpression -> . ParenthesesExpression
    (73) UnaryExpression -> . DereferenceExpression
    (74) UnaryExpression -> . AddressExpression
    (75) UnaryExpression -> . AngleCallExpression
    (40) IdExpression -> . ID
    (41) IdPairExpression -> . ID ID
    (46) LiteralExpression -> . IntLiteral
    (47) LiteralExpression -> . BoolLiteral
    (48) ParenthesesCallExpression -> . Expression LPAREN ExpressionList RPAREN
    (19) BracketCallExpression -> . Expression LBRACKET Expression RBRACKET
    (28) DotExpression -> . Expression DOT Expression
    (49) ParenthesesExpression -> . LPAREN Expression RPAREN
    (27) DereferenceExpression -> . Expression DEREF
    (1) AddressExpression -> . ADDRESS Expression
    (2) AngleCallExpression -> . Expression LANGLE ExpressionList RANGLE
    (45) IntLiteral -> . INTL
    (18) BoolLiteral -> . BOOLL

    ID              shift and go to state 23
    LPAREN          shift and go to state 26
    ADDRESS         shift and go to state 27
    INTL            shift and go to state 28
    BOOLL           shift and go to state 29

    Expression                     shift and go to state 55
    BinaryExpression               shift and go to state 11
    UnaryExpression                shift and go to state 12
    IdExpression                   shift and go to state 13
    IdPairExpression               shift and go to state 14
    LiteralExpression              shift and go to state 15
    ParenthesesCallExpression      shift and go to state 16
    BracketCallExpression          shift and go to state 17
    DotExpression                  shift and go to state 18
    ParenthesesExpression          shift and go to state 19
    DereferenceExpression          shift and go to state 20
    AddressExpression              shift and go to state 21
    AngleCallExpression            shift and go to state 22
    IntLiteral                     shift and go to state 24
    BoolLiteral                    shift and go to state 25

state 34

    (5) BinaryExpression -> Expression MINUS . Expression
    (29) Expression -> . BinaryExpression
    (30) Expression -> . UnaryExpression
    (31) Expression -> . IdExpression
    (32) Expression -> . IdPairExpression
    (4) BinaryExpression -> . Expression PLUS Expression
    (5) BinaryExpression -> . Expression MINUS Expression
    (6) BinaryExpression -> . Expression TIMES Expression
    (7) BinaryExpression -> . Expression DIVIDE Expression
    (8) BinaryExpression -> . Expression MOD Expression
    (9) BinaryExpression -> . Expression LEQ Expression
    (10) BinaryExpression -> . Expression GEQ Expression
    (11) BinaryExpression -> . Expression LT Expression
    (12) BinaryExpression -> . Expression GT Expression
    (13) BinaryExpression -> . Expression EQ Expression
    (14) BinaryExpression -> . Expression NE Expression
    (68) UnaryExpression -> . LiteralExpression
    (69) UnaryExpression -> . ParenthesesCallExpression
    (70) UnaryExpression -> . BracketCallExpression
    (71) UnaryExpression -> . DotExpression
    (72) UnaryExpression -> . ParenthesesExpression
    (73) UnaryExpression -> . DereferenceExpression
    (74) UnaryExpression -> . AddressExpression
    (75) UnaryExpression -> . AngleCallExpression
    (40) IdExpression -> . ID
    (41) IdPairExpression -> . ID ID
    (46) LiteralExpression -> . IntLiteral
    (47) LiteralExpression -> . BoolLiteral
    (48) ParenthesesCallExpression -> . Expression LPAREN ExpressionList RPAREN
    (19) BracketCallExpression -> . Expression LBRACKET Expression RBRACKET
    (28) DotExpression -> . Expression DOT Expression
    (49) ParenthesesExpression -> . LPAREN Expression RPAREN
    (27) DereferenceExpression -> . Expression DEREF
    (1) AddressExpression -> . ADDRESS Expression
    (2) AngleCallExpression -> . Expression LANGLE ExpressionList RANGLE
    (45) IntLiteral -> . INTL
    (18) BoolLiteral -> . BOOLL

    ID              shift and go to state 23
    LPAREN          shift and go to state 26
    ADDRESS         shift and go to state 27
    INTL            shift and go to state 28
    BOOLL           shift and go to state 29

    Expression                     shift and go to state 56
    BinaryExpression               shift and go to state 11
    UnaryExpression                shift and go to state 12
    IdExpression                   shift and go to state 13
    IdPairExpression               shift and go to state 14
    LiteralExpression              shift and go to state 15
    ParenthesesCallExpression      shift and go to state 16
    BracketCallExpression          shift and go to state 17
    DotExpression                  shift and go to state 18
    ParenthesesExpression          shift and go to state 19
    DereferenceExpression          shift and go to state 20
    AddressExpression              shift and go to state 21
    AngleCallExpression            shift and go to state 22
    IntLiteral                     shift and go to state 24
    BoolLiteral                    shift and go to state 25

state 35

    (6) BinaryExpression -> Expression TIMES . Expression
    (29) Expression -> . BinaryExpression
    (30) Expression -> . UnaryExpression
    (31) Expression -> . IdExpression
    (32) Expression -> . IdPairExpression
    (4) BinaryExpression -> . Expression PLUS Expression
    (5) BinaryExpression -> . Expression MINUS Expression
    (6) BinaryExpression -> . Expression TIMES Expression
    (7) BinaryExpression -> . Expression DIVIDE Expression
    (8) BinaryExpression -> . Expression MOD Expression
    (9) BinaryExpression -> . Expression LEQ Expression
    (10) BinaryExpression -> . Expression GEQ Expression
    (11) BinaryExpression -> . Expression LT Expression
    (12) BinaryExpression -> . Expression GT Expression
    (13) BinaryExpression -> . Expression EQ Expression
    (14) BinaryExpression -> . Expression NE Expression
    (68) UnaryExpression -> . LiteralExpression
    (69) UnaryExpression -> . ParenthesesCallExpression
    (70) UnaryExpression -> . BracketCallExpression
    (71) UnaryExpression -> . DotExpression
    (72) UnaryExpression -> . ParenthesesExpression
    (73) UnaryExpression -> . DereferenceExpression
    (74) UnaryExpression -> . AddressExpression
    (75) UnaryExpression -> . AngleCallExpression
    (40) IdExpression -> . ID
    (41) IdPairExpression -> . ID ID
    (46) LiteralExpression -> . IntLiteral
    (47) LiteralExpression -> . BoolLiteral
    (48) ParenthesesCallExpression -> . Expression LPAREN ExpressionList RPAREN
    (19) BracketCallExpression -> . Expression LBRACKET Expression RBRACKET
    (28) DotExpression -> . Expression DOT Expression
    (49) ParenthesesExpression -> . LPAREN Expression RPAREN
    (27) DereferenceExpression -> . Expression DEREF
    (1) AddressExpression -> . ADDRESS Expression
    (2) AngleCallExpression -> . Expression LANGLE ExpressionList RANGLE
    (45) IntLiteral -> . INTL
    (18) BoolLiteral -> . BOOLL

    ID              shift and go to state 23
    LPAREN          shift and go to state 26
    ADDRESS         shift and go to state 27
    INTL            shift and go to state 28
    BOOLL           shift and go to state 29

    Expression                     shift and go to state 57
    BinaryExpression               shift and go to state 11
    UnaryExpression                shift and go to state 12
    IdExpression                   shift and go to state 13
    IdPairExpression               shift and go to state 14
    LiteralExpression              shift and go to state 15
    ParenthesesCallExpression      shift and go to state 16
    BracketCallExpression          shift and go to state 17
    DotExpression                  shift and go to state 18
    ParenthesesExpression          shift and go to state 19
    DereferenceExpression          shift and go to state 20
    AddressExpression              shift and go to state 21
    AngleCallExpression            shift and go to state 22
    IntLiteral                     shift and go to state 24
    BoolLiteral                    shift and go to state 25

state 36

    (7) BinaryExpression -> Expression DIVIDE . Expression
    (29) Expression -> . BinaryExpression
    (30) Expression -> . UnaryExpression
    (31) Expression -> . IdExpression
    (32) Expression -> . IdPairExpression
    (4) BinaryExpression -> . Expression PLUS Expression
    (5) BinaryExpression -> . Expression MINUS Expression
    (6) BinaryExpression -> . Expression TIMES Expression
    (7) BinaryExpression -> . Expression DIVIDE Expression
    (8) BinaryExpression -> . Expression MOD Expression
    (9) BinaryExpression -> . Expression LEQ Expression
    (10) BinaryExpression -> . Expression GEQ Expression
    (11) BinaryExpression -> . Expression LT Expression
    (12) BinaryExpression -> . Expression GT Expression
    (13) BinaryExpression -> . Expression EQ Expression
    (14) BinaryExpression -> . Expression NE Expression
    (68) UnaryExpression -> . LiteralExpression
    (69) UnaryExpression -> . ParenthesesCallExpression
    (70) UnaryExpression -> . BracketCallExpression
    (71) UnaryExpression -> . DotExpression
    (72) UnaryExpression -> . ParenthesesExpression
    (73) UnaryExpression -> . DereferenceExpression
    (74) UnaryExpression -> . AddressExpression
    (75) UnaryExpression -> . AngleCallExpression
    (40) IdExpression -> . ID
    (41) IdPairExpression -> . ID ID
    (46) LiteralExpression -> . IntLiteral
    (47) LiteralExpression -> . BoolLiteral
    (48) ParenthesesCallExpression -> . Expression LPAREN ExpressionList RPAREN
    (19) BracketCallExpression -> . Expression LBRACKET Expression RBRACKET
    (28) DotExpression -> . Expression DOT Expression
    (49) ParenthesesExpression -> . LPAREN Expression RPAREN
    (27) DereferenceExpression -> . Expression DEREF
    (1) AddressExpression -> . ADDRESS Expression
    (2) AngleCallExpression -> . Expression LANGLE ExpressionList RANGLE
    (45) IntLiteral -> . INTL
    (18) BoolLiteral -> . BOOLL

    ID              shift and go to state 23
    LPAREN          shift and go to state 26
    ADDRESS         shift and go to state 27
    INTL            shift and go to state 28
    BOOLL           shift and go to state 29

    Expression                     shift and go to state 58
    BinaryExpression               shift and go to state 11
    UnaryExpression                shift and go to state 12
    IdExpression                   shift and go to state 13
    IdPairExpression               shift and go to state 14
    LiteralExpression              shift and go to state 15
    ParenthesesCallExpression      shift and go to state 16
    BracketCallExpression          shift and go to state 17
    DotExpression                  shift and go to state 18
    ParenthesesExpression          shift and go to state 19
    DereferenceExpression          shift and go to state 20
    AddressExpression              shift and go to state 21
    AngleCallExpression            shift and go to state 22
    IntLiteral                     shift and go to state 24
    BoolLiteral                    shift and go to state 25

state 37

    (8) BinaryExpression -> Expression MOD . Expression
    (29) Expression -> . BinaryExpression
    (30) Expression -> . UnaryExpression
    (31) Expression -> . IdExpression
    (32) Expression -> . IdPairExpression
    (4) BinaryExpression -> . Expression PLUS Expression
    (5) BinaryExpression -> . Expression MINUS Expression
    (6) BinaryExpression -> . Expression TIMES Expression
    (7) BinaryExpression -> . Expression DIVIDE Expression
    (8) BinaryExpression -> . Expression MOD Expression
    (9) BinaryExpression -> . Expression LEQ Expression
    (10) BinaryExpression -> . Expression GEQ Expression
    (11) BinaryExpression -> . Expression LT Expression
    (12) BinaryExpression -> . Expression GT Expression
    (13) BinaryExpression -> . Expression EQ Expression
    (14) BinaryExpression -> . Expression NE Expression
    (68) UnaryExpression -> . LiteralExpression
    (69) UnaryExpression -> . ParenthesesCallExpression
    (70) UnaryExpression -> . BracketCallExpression
    (71) UnaryExpression -> . DotExpression
    (72) UnaryExpression -> . ParenthesesExpression
    (73) UnaryExpression -> . DereferenceExpression
    (74) UnaryExpression -> . AddressExpression
    (75) UnaryExpression -> . AngleCallExpression
    (40) IdExpression -> . ID
    (41) IdPairExpression -> . ID ID
    (46) LiteralExpression -> . IntLiteral
    (47) LiteralExpression -> . BoolLiteral
    (48) ParenthesesCallExpression -> . Expression LPAREN ExpressionList RPAREN
    (19) BracketCallExpression -> . Expression LBRACKET Expression RBRACKET
    (28) DotExpression -> . Expression DOT Expression
    (49) ParenthesesExpression -> . LPAREN Expression RPAREN
    (27) DereferenceExpression -> . Expression DEREF
    (1) AddressExpression -> . ADDRESS Expression
    (2) AngleCallExpression -> . Expression LANGLE ExpressionList RANGLE
    (45) IntLiteral -> . INTL
    (18) BoolLiteral -> . BOOLL

    ID              shift and go to state 23
    LPAREN          shift and go to state 26
    ADDRESS         shift and go to state 27
    INTL            shift and go to state 28
    BOOLL           shift and go to state 29

    Expression                     shift and go to state 59
    BinaryExpression               shift and go to state 11
    UnaryExpression                shift and go to state 12
    IdExpression                   shift and go to state 13
    IdPairExpression               shift and go to state 14
    LiteralExpression              shift and go to state 15
    ParenthesesCallExpression      shift and go to state 16
    BracketCallExpression          shift and go to state 17
    DotExpression                  shift and go to state 18
    ParenthesesExpression          shift and go to state 19
    DereferenceExpression          shift and go to state 20
    AddressExpression              shift and go to state 21
    AngleCallExpression            shift and go to state 22
    IntLiteral                     shift and go to state 24
    BoolLiteral                    shift and go to state 25

state 38

    (9) BinaryExpression -> Expression LEQ . Expression
    (29) Expression -> . BinaryExpression
    (30) Expression -> . UnaryExpression
    (31) Expression -> . IdExpression
    (32) Expression -> . IdPairExpression
    (4) BinaryExpression -> . Expression PLUS Expression
    (5) BinaryExpression -> . Expression MINUS Expression
    (6) BinaryExpression -> . Expression TIMES Expression
    (7) BinaryExpression -> . Expression DIVIDE Expression
    (8) BinaryExpression -> . Expression MOD Expression
    (9) BinaryExpression -> . Expression LEQ Expression
    (10) BinaryExpression -> . Expression GEQ Expression
    (11) BinaryExpression -> . Expression LT Expression
    (12) BinaryExpression -> . Expression GT Expression
    (13) BinaryExpression -> . Expression EQ Expression
    (14) BinaryExpression -> . Expression NE Expression
    (68) UnaryExpression -> . LiteralExpression
    (69) UnaryExpression -> . ParenthesesCallExpression
    (70) UnaryExpression -> . BracketCallExpression
    (71) UnaryExpression -> . DotExpression
    (72) UnaryExpression -> . ParenthesesExpression
    (73) UnaryExpression -> . DereferenceExpression
    (74) UnaryExpression -> . AddressExpression
    (75) UnaryExpression -> . AngleCallExpression
    (40) IdExpression -> . ID
    (41) IdPairExpression -> . ID ID
    (46) LiteralExpression -> . IntLiteral
    (47) LiteralExpression -> . BoolLiteral
    (48) ParenthesesCallExpression -> . Expression LPAREN ExpressionList RPAREN
    (19) BracketCallExpression -> . Expression LBRACKET Expression RBRACKET
    (28) DotExpression -> . Expression DOT Expression
    (49) ParenthesesExpression -> . LPAREN Expression RPAREN
    (27) DereferenceExpression -> . Expression DEREF
    (1) AddressExpression -> . ADDRESS Expression
    (2) AngleCallExpression -> . Expression LANGLE ExpressionList RANGLE
    (45) IntLiteral -> . INTL
    (18) BoolLiteral -> . BOOLL

    ID              shift and go to state 23
    LPAREN          shift and go to state 26
    ADDRESS         shift and go to state 27
    INTL            shift and go to state 28
    BOOLL           shift and go to state 29

    Expression                     shift and go to state 60
    BinaryExpression               shift and go to state 11
    UnaryExpression                shift and go to state 12
    IdExpression                   shift and go to state 13
    IdPairExpression               shift and go to state 14
    LiteralExpression              shift and go to state 15
    ParenthesesCallExpression      shift and go to state 16
    BracketCallExpression          shift and go to state 17
    DotExpression                  shift and go to state 18
    ParenthesesExpression          shift and go to state 19
    DereferenceExpression          shift and go to state 20
    AddressExpression              shift and go to state 21
    AngleCallExpression            shift and go to state 22
    IntLiteral                     shift and go to state 24
    BoolLiteral                    shift and go to state 25

state 39

    (10) BinaryExpression -> Expression GEQ . Expression
    (29) Expression -> . BinaryExpression
    (30) Expression -> . UnaryExpression
    (31) Expression -> . IdExpression
    (32) Expression -> . IdPairExpression
    (4) BinaryExpression -> . Expression PLUS Expression
    (5) BinaryExpression -> . Expression MINUS Expression
    (6) BinaryExpression -> . Expression TIMES Expression
    (7) BinaryExpression -> . Expression DIVIDE Expression
    (8) BinaryExpression -> . Expression MOD Expression
    (9) BinaryExpression -> . Expression LEQ Expression
    (10) BinaryExpression -> . Expression GEQ Expression
    (11) BinaryExpression -> . Expression LT Expression
    (12) BinaryExpression -> . Expression GT Expression
    (13) BinaryExpression -> . Expression EQ Expression
    (14) BinaryExpression -> . Expression NE Expression
    (68) UnaryExpression -> . LiteralExpression
    (69) UnaryExpression -> . ParenthesesCallExpression
    (70) UnaryExpression -> . BracketCallExpression
    (71) UnaryExpression -> . DotExpression
    (72) UnaryExpression -> . ParenthesesExpression
    (73) UnaryExpression -> . DereferenceExpression
    (74) UnaryExpression -> . AddressExpression
    (75) UnaryExpression -> . AngleCallExpression
    (40) IdExpression -> . ID
    (41) IdPairExpression -> . ID ID
    (46) LiteralExpression -> . IntLiteral
    (47) LiteralExpression -> . BoolLiteral
    (48) ParenthesesCallExpression -> . Expression LPAREN ExpressionList RPAREN
    (19) BracketCallExpression -> . Expression LBRACKET Expression RBRACKET
    (28) DotExpression -> . Expression DOT Expression
    (49) ParenthesesExpression -> . LPAREN Expression RPAREN
    (27) DereferenceExpression -> . Expression DEREF
    (1) AddressExpression -> . ADDRESS Expression
    (2) AngleCallExpression -> . Expression LANGLE ExpressionList RANGLE
    (45) IntLiteral -> . INTL
    (18) BoolLiteral -> . BOOLL

    ID              shift and go to state 23
    LPAREN          shift and go to state 26
    ADDRESS         shift and go to state 27
    INTL            shift and go to state 28
    BOOLL           shift and go to state 29

    Expression                     shift and go to state 61
    BinaryExpression               shift and go to state 11
    UnaryExpression                shift and go to state 12
    IdExpression                   shift and go to state 13
    IdPairExpression               shift and go to state 14
    LiteralExpression              shift and go to state 15
    ParenthesesCallExpression      shift and go to state 16
    BracketCallExpression          shift and go to state 17
    DotExpression                  shift and go to state 18
    ParenthesesExpression          shift and go to state 19
    DereferenceExpression          shift and go to state 20
    AddressExpression              shift and go to state 21
    AngleCallExpression            shift and go to state 22
    IntLiteral                     shift and go to state 24
    BoolLiteral                    shift and go to state 25

state 40

    (11) BinaryExpression -> Expression LT . Expression
    (29) Expression -> . BinaryExpression
    (30) Expression -> . UnaryExpression
    (31) Expression -> . IdExpression
    (32) Expression -> . IdPairExpression
    (4) BinaryExpression -> . Expression PLUS Expression
    (5) BinaryExpression -> . Expression MINUS Expression
    (6) BinaryExpression -> . Expression TIMES Expression
    (7) BinaryExpression -> . Expression DIVIDE Expression
    (8) BinaryExpression -> . Expression MOD Expression
    (9) BinaryExpression -> . Expression LEQ Expression
    (10) BinaryExpression -> . Expression GEQ Expression
    (11) BinaryExpression -> . Expression LT Expression
    (12) BinaryExpression -> . Expression GT Expression
    (13) BinaryExpression -> . Expression EQ Expression
    (14) BinaryExpression -> . Expression NE Expression
    (68) UnaryExpression -> . LiteralExpression
    (69) UnaryExpression -> . ParenthesesCallExpression
    (70) UnaryExpression -> . BracketCallExpression
    (71) UnaryExpression -> . DotExpression
    (72) UnaryExpression -> . ParenthesesExpression
    (73) UnaryExpression -> . DereferenceExpression
    (74) UnaryExpression -> . AddressExpression
    (75) UnaryExpression -> . AngleCallExpression
    (40) IdExpression -> . ID
    (41) IdPairExpression -> . ID ID
    (46) LiteralExpression -> . IntLiteral
    (47) LiteralExpression -> . BoolLiteral
    (48) ParenthesesCallExpression -> . Expression LPAREN ExpressionList RPAREN
    (19) BracketCallExpression -> . Expression LBRACKET Expression RBRACKET
    (28) DotExpression -> . Expression DOT Expression
    (49) ParenthesesExpression -> . LPAREN Expression RPAREN
    (27) DereferenceExpression -> . Expression DEREF
    (1) AddressExpression -> . ADDRESS Expression
    (2) AngleCallExpression -> . Expression LANGLE ExpressionList RANGLE
    (45) IntLiteral -> . INTL
    (18) BoolLiteral -> . BOOLL

    ID              shift and go to state 23
    LPAREN          shift and go to state 26
    ADDRESS         shift and go to state 27
    INTL            shift and go to state 28
    BOOLL           shift and go to state 29

    Expression                     shift and go to state 62
    BinaryExpression               shift and go to state 11
    UnaryExpression                shift and go to state 12
    IdExpression                   shift and go to state 13
    IdPairExpression               shift and go to state 14
    LiteralExpression              shift and go to state 15
    ParenthesesCallExpression      shift and go to state 16
    BracketCallExpression          shift and go to state 17
    DotExpression                  shift and go to state 18
    ParenthesesExpression          shift and go to state 19
    DereferenceExpression          shift and go to state 20
    AddressExpression              shift and go to state 21
    AngleCallExpression            shift and go to state 22
    IntLiteral                     shift and go to state 24
    BoolLiteral                    shift and go to state 25

state 41

    (12) BinaryExpression -> Expression GT . Expression
    (29) Expression -> . BinaryExpression
    (30) Expression -> . UnaryExpression
    (31) Expression -> . IdExpression
    (32) Expression -> . IdPairExpression
    (4) BinaryExpression -> . Expression PLUS Expression
    (5) BinaryExpression -> . Expression MINUS Expression
    (6) BinaryExpression -> . Expression TIMES Expression
    (7) BinaryExpression -> . Expression DIVIDE Expression
    (8) BinaryExpression -> . Expression MOD Expression
    (9) BinaryExpression -> . Expression LEQ Expression
    (10) BinaryExpression -> . Expression GEQ Expression
    (11) BinaryExpression -> . Expression LT Expression
    (12) BinaryExpression -> . Expression GT Expression
    (13) BinaryExpression -> . Expression EQ Expression
    (14) BinaryExpression -> . Expression NE Expression
    (68) UnaryExpression -> . LiteralExpression
    (69) UnaryExpression -> . ParenthesesCallExpression
    (70) UnaryExpression -> . BracketCallExpression
    (71) UnaryExpression -> . DotExpression
    (72) UnaryExpression -> . ParenthesesExpression
    (73) UnaryExpression -> . DereferenceExpression
    (74) UnaryExpression -> . AddressExpression
    (75) UnaryExpression -> . AngleCallExpression
    (40) IdExpression -> . ID
    (41) IdPairExpression -> . ID ID
    (46) LiteralExpression -> . IntLiteral
    (47) LiteralExpression -> . BoolLiteral
    (48) ParenthesesCallExpression -> . Expression LPAREN ExpressionList RPAREN
    (19) BracketCallExpression -> . Expression LBRACKET Expression RBRACKET
    (28) DotExpression -> . Expression DOT Expression
    (49) ParenthesesExpression -> . LPAREN Expression RPAREN
    (27) DereferenceExpression -> . Expression DEREF
    (1) AddressExpression -> . ADDRESS Expression
    (2) AngleCallExpression -> . Expression LANGLE ExpressionList RANGLE
    (45) IntLiteral -> . INTL
    (18) BoolLiteral -> . BOOLL

    ID              shift and go to state 23
    LPAREN          shift and go to state 26
    ADDRESS         shift and go to state 27
    INTL            shift and go to state 28
    BOOLL           shift and go to state 29

    Expression                     shift and go to state 63
    BinaryExpression               shift and go to state 11
    UnaryExpression                shift and go to state 12
    IdExpression                   shift and go to state 13
    IdPairExpression               shift and go to state 14
    LiteralExpression              shift and go to state 15
    ParenthesesCallExpression      shift and go to state 16
    BracketCallExpression          shift and go to state 17
    DotExpression                  shift and go to state 18
    ParenthesesExpression          shift and go to state 19
    DereferenceExpression          shift and go to state 20
    AddressExpression              shift and go to state 21
    AngleCallExpression            shift and go to state 22
    IntLiteral                     shift and go to state 24
    BoolLiteral                    shift and go to state 25

state 42

    (13) BinaryExpression -> Expression EQ . Expression
    (29) Expression -> . BinaryExpression
    (30) Expression -> . UnaryExpression
    (31) Expression -> . IdExpression
    (32) Expression -> . IdPairExpression
    (4) BinaryExpression -> . Expression PLUS Expression
    (5) BinaryExpression -> . Expression MINUS Expression
    (6) BinaryExpression -> . Expression TIMES Expression
    (7) BinaryExpression -> . Expression DIVIDE Expression
    (8) BinaryExpression -> . Expression MOD Expression
    (9) BinaryExpression -> . Expression LEQ Expression
    (10) BinaryExpression -> . Expression GEQ Expression
    (11) BinaryExpression -> . Expression LT Expression
    (12) BinaryExpression -> . Expression GT Expression
    (13) BinaryExpression -> . Expression EQ Expression
    (14) BinaryExpression -> . Expression NE Expression
    (68) UnaryExpression -> . LiteralExpression
    (69) UnaryExpression -> . ParenthesesCallExpression
    (70) UnaryExpression -> . BracketCallExpression
    (71) UnaryExpression -> . DotExpression
    (72) UnaryExpression -> . ParenthesesExpression
    (73) UnaryExpression -> . DereferenceExpression
    (74) UnaryExpression -> . AddressExpression
    (75) UnaryExpression -> . AngleCallExpression
    (40) IdExpression -> . ID
    (41) IdPairExpression -> . ID ID
    (46) LiteralExpression -> . IntLiteral
    (47) LiteralExpression -> . BoolLiteral
    (48) ParenthesesCallExpression -> . Expression LPAREN ExpressionList RPAREN
    (19) BracketCallExpression -> . Expression LBRACKET Expression RBRACKET
    (28) DotExpression -> . Expression DOT Expression
    (49) ParenthesesExpression -> . LPAREN Expression RPAREN
    (27) DereferenceExpression -> . Expression DEREF
    (1) AddressExpression -> . ADDRESS Expression
    (2) AngleCallExpression -> . Expression LANGLE ExpressionList RANGLE
    (45) IntLiteral -> . INTL
    (18) BoolLiteral -> . BOOLL

    ID              shift and go to state 23
    LPAREN          shift and go to state 26
    ADDRESS         shift and go to state 27
    INTL            shift and go to state 28
    BOOLL           shift and go to state 29

    Expression                     shift and go to state 64
    BinaryExpression               shift and go to state 11
    UnaryExpression                shift and go to state 12
    IdExpression                   shift and go to state 13
    IdPairExpression               shift and go to state 14
    LiteralExpression              shift and go to state 15
    ParenthesesCallExpression      shift and go to state 16
    BracketCallExpression          shift and go to state 17
    DotExpression                  shift and go to state 18
    ParenthesesExpression          shift and go to state 19
    DereferenceExpression          shift and go to state 20
    AddressExpression              shift and go to state 21
    AngleCallExpression            shift and go to state 22
    IntLiteral                     shift and go to state 24
    BoolLiteral                    shift and go to state 25

state 43

    (14) BinaryExpression -> Expression NE . Expression
    (29) Expression -> . BinaryExpression
    (30) Expression -> . UnaryExpression
    (31) Expression -> . IdExpression
    (32) Expression -> . IdPairExpression
    (4) BinaryExpression -> . Expression PLUS Expression
    (5) BinaryExpression -> . Expression MINUS Expression
    (6) BinaryExpression -> . Expression TIMES Expression
    (7) BinaryExpression -> . Expression DIVIDE Expression
    (8) BinaryExpression -> . Expression MOD Expression
    (9) BinaryExpression -> . Expression LEQ Expression
    (10) BinaryExpression -> . Expression GEQ Expression
    (11) BinaryExpression -> . Expression LT Expression
    (12) BinaryExpression -> . Expression GT Expression
    (13) BinaryExpression -> . Expression EQ Expression
    (14) BinaryExpression -> . Expression NE Expression
    (68) UnaryExpression -> . LiteralExpression
    (69) UnaryExpression -> . ParenthesesCallExpression
    (70) UnaryExpression -> . BracketCallExpression
    (71) UnaryExpression -> . DotExpression
    (72) UnaryExpression -> . ParenthesesExpression
    (73) UnaryExpression -> . DereferenceExpression
    (74) UnaryExpression -> . AddressExpression
    (75) UnaryExpression -> . AngleCallExpression
    (40) IdExpression -> . ID
    (41) IdPairExpression -> . ID ID
    (46) LiteralExpression -> . IntLiteral
    (47) LiteralExpression -> . BoolLiteral
    (48) ParenthesesCallExpression -> . Expression LPAREN ExpressionList RPAREN
    (19) BracketCallExpression -> . Expression LBRACKET Expression RBRACKET
    (28) DotExpression -> . Expression DOT Expression
    (49) ParenthesesExpression -> . LPAREN Expression RPAREN
    (27) DereferenceExpression -> . Expression DEREF
    (1) AddressExpression -> . ADDRESS Expression
    (2) AngleCallExpression -> . Expression LANGLE ExpressionList RANGLE
    (45) IntLiteral -> . INTL
    (18) BoolLiteral -> . BOOLL

    ID              shift and go to state 23
    LPAREN          shift and go to state 26
    ADDRESS         shift and go to state 27
    INTL            shift and go to state 28
    BOOLL           shift and go to state 29

    Expression                     shift and go to state 65
    BinaryExpression               shift and go to state 11
    UnaryExpression                shift and go to state 12
    IdExpression                   shift and go to state 13
    IdPairExpression               shift and go to state 14
    LiteralExpression              shift and go to state 15
    ParenthesesCallExpression      shift and go to state 16
    BracketCallExpression          shift and go to state 17
    DotExpression                  shift and go to state 18
    ParenthesesExpression          shift and go to state 19
    DereferenceExpression          shift and go to state 20
    AddressExpression              shift and go to state 21
    AngleCallExpression            shift and go to state 22
    IntLiteral                     shift and go to state 24
    BoolLiteral                    shift and go to state 25

state 44

    (48) ParenthesesCallExpression -> Expression LPAREN . ExpressionList RPAREN
    (33) ExpressionList -> . Expression COMMA ExpressionList
    (34) ExpressionList -> . Expression
    (35) ExpressionList -> . empty
    (29) Expression -> . BinaryExpression
    (30) Expression -> . UnaryExpression
    (31) Expression -> . IdExpression
    (32) Expression -> . IdPairExpression
    (77) empty -> .
    (4) BinaryExpression -> . Expression PLUS Expression
    (5) BinaryExpression -> . Expression MINUS Expression
    (6) BinaryExpression -> . Expression TIMES Expression
    (7) BinaryExpression -> . Expression DIVIDE Expression
    (8) BinaryExpression -> . Expression MOD Expression
    (9) BinaryExpression -> . Expression LEQ Expression
    (10) BinaryExpression -> . Expression GEQ Expression
    (11) BinaryExpression -> . Expression LT Expression
    (12) BinaryExpression -> . Expression GT Expression
    (13) BinaryExpression -> . Expression EQ Expression
    (14) BinaryExpression -> . Expression NE Expression
    (68) UnaryExpression -> . LiteralExpression
    (69) UnaryExpression -> . ParenthesesCallExpression
    (70) UnaryExpression -> . BracketCallExpression
    (71) UnaryExpression -> . DotExpression
    (72) UnaryExpression -> . ParenthesesExpression
    (73) UnaryExpression -> . DereferenceExpression
    (74) UnaryExpression -> . AddressExpression
    (75) UnaryExpression -> . AngleCallExpression
    (40) IdExpression -> . ID
    (41) IdPairExpression -> . ID ID
    (46) LiteralExpression -> . IntLiteral
    (47) LiteralExpression -> . BoolLiteral
    (48) ParenthesesCallExpression -> . Expression LPAREN ExpressionList RPAREN
    (19) BracketCallExpression -> . Expression LBRACKET Expression RBRACKET
    (28) DotExpression -> . Expression DOT Expression
    (49) ParenthesesExpression -> . LPAREN Expression RPAREN
    (27) DereferenceExpression -> . Expression DEREF
    (1) AddressExpression -> . ADDRESS Expression
    (2) AngleCallExpression -> . Expression LANGLE ExpressionList RANGLE
    (45) IntLiteral -> . INTL
    (18) BoolLiteral -> . BOOLL

    RPAREN          reduce using rule 77 (empty -> .)
    ID              shift and go to state 23
    LPAREN          shift and go to state 26
    ADDRESS         shift and go to state 27
    INTL            shift and go to state 28
    BOOLL           shift and go to state 29

    Expression                     shift and go to state 66
    ExpressionList                 shift and go to state 67
    empty                          shift and go to state 68
    BinaryExpression               shift and go to state 11
    UnaryExpression                shift and go to state 12
    IdExpression                   shift and go to state 13
    IdPairExpression               shift and go to state 14
    LiteralExpression              shift and go to state 15
    ParenthesesCallExpression      shift and go to state 16
    BracketCallExpression          shift and go to state 17
    DotExpression                  shift and go to state 18
    ParenthesesExpression          shift and go to state 19
    DereferenceExpression          shift and go to state 20
    AddressExpression              shift and go to state 21
    AngleCallExpression            shift and go to state 22
    IntLiteral                     shift and go to state 24
    BoolLiteral                    shift and go to state 25

state 45

    (19) BracketCallExpression -> Expression LBRACKET . Expression RBRACKET
    (29) Expression -> . BinaryExpression
    (30) Expression -> . UnaryExpression
    (31) Expression -> . IdExpression
    (32) Expression -> . IdPairExpression
    (4) BinaryExpression -> . Expression PLUS Expression
    (5) BinaryExpression -> . Expression MINUS Expression
    (6) BinaryExpression -> . Expression TIMES Expression
    (7) BinaryExpression -> . Expression DIVIDE Expression
    (8) BinaryExpression -> . Expression MOD Expression
    (9) BinaryExpression -> . Expression LEQ Expression
    (10) BinaryExpression -> . Expression GEQ Expression
    (11) BinaryExpression -> . Expression LT Expression
    (12) BinaryExpression -> . Expression GT Expression
    (13) BinaryExpression -> . Expression EQ Expression
    (14) BinaryExpression -> . Expression NE Expression
    (68) UnaryExpression -> . LiteralExpression
    (69) UnaryExpression -> . ParenthesesCallExpression
    (70) UnaryExpression -> . BracketCallExpression
    (71) UnaryExpression -> . DotExpression
    (72) UnaryExpression -> . ParenthesesExpression
    (73) UnaryExpression -> . DereferenceExpression
    (74) UnaryExpression -> . AddressExpression
    (75) UnaryExpression -> . AngleCallExpression
    (40) IdExpression -> . ID
    (41) IdPairExpression -> . ID ID
    (46) LiteralExpression -> . IntLiteral
    (47) LiteralExpression -> . BoolLiteral
    (48) ParenthesesCallExpression -> . Expression LPAREN ExpressionList RPAREN
    (19) BracketCallExpression -> . Expression LBRACKET Expression RBRACKET
    (28) DotExpression -> . Expression DOT Expression
    (49) ParenthesesExpression -> . LPAREN Expression RPAREN
    (27) DereferenceExpression -> . Expression DEREF
    (1) AddressExpression -> . ADDRESS Expression
    (2) AngleCallExpression -> . Expression LANGLE ExpressionList RANGLE
    (45) IntLiteral -> . INTL
    (18) BoolLiteral -> . BOOLL

    ID              shift and go to state 23
    LPAREN          shift and go to state 26
    ADDRESS         shift and go to state 27
    INTL            shift and go to state 28
    BOOLL           shift and go to state 29

    Expression                     shift and go to state 69
    BinaryExpression               shift and go to state 11
    UnaryExpression                shift and go to state 12
    IdExpression                   shift and go to state 13
    IdPairExpression               shift and go to state 14
    LiteralExpression              shift and go to state 15
    ParenthesesCallExpression      shift and go to state 16
    BracketCallExpression          shift and go to state 17
    DotExpression                  shift and go to state 18
    ParenthesesExpression          shift and go to state 19
    DereferenceExpression          shift and go to state 20
    AddressExpression              shift and go to state 21
    AngleCallExpression            shift and go to state 22
    IntLiteral                     shift and go to state 24
    BoolLiteral                    shift and go to state 25

state 46

    (28) DotExpression -> Expression DOT . Expression
    (29) Expression -> . BinaryExpression
    (30) Expression -> . UnaryExpression
    (31) Expression -> . IdExpression
    (32) Expression -> . IdPairExpression
    (4) BinaryExpression -> . Expression PLUS Expression
    (5) BinaryExpression -> . Expression MINUS Expression
    (6) BinaryExpression -> . Expression TIMES Expression
    (7) BinaryExpression -> . Expression DIVIDE Expression
    (8) BinaryExpression -> . Expression MOD Expression
    (9) BinaryExpression -> . Expression LEQ Expression
    (10) BinaryExpression -> . Expression GEQ Expression
    (11) BinaryExpression -> . Expression LT Expression
    (12) BinaryExpression -> . Expression GT Expression
    (13) BinaryExpression -> . Expression EQ Expression
    (14) BinaryExpression -> . Expression NE Expression
    (68) UnaryExpression -> . LiteralExpression
    (69) UnaryExpression -> . ParenthesesCallExpression
    (70) UnaryExpression -> . BracketCallExpression
    (71) UnaryExpression -> . DotExpression
    (72) UnaryExpression -> . ParenthesesExpression
    (73) UnaryExpression -> . DereferenceExpression
    (74) UnaryExpression -> . AddressExpression
    (75) UnaryExpression -> . AngleCallExpression
    (40) IdExpression -> . ID
    (41) IdPairExpression -> . ID ID
    (46) LiteralExpression -> . IntLiteral
    (47) LiteralExpression -> . BoolLiteral
    (48) ParenthesesCallExpression -> . Expression LPAREN ExpressionList RPAREN
    (19) BracketCallExpression -> . Expression LBRACKET Expression RBRACKET
    (28) DotExpression -> . Expression DOT Expression
    (49) ParenthesesExpression -> . LPAREN Expression RPAREN
    (27) DereferenceExpression -> . Expression DEREF
    (1) AddressExpression -> . ADDRESS Expression
    (2) AngleCallExpression -> . Expression LANGLE ExpressionList RANGLE
    (45) IntLiteral -> . INTL
    (18) BoolLiteral -> . BOOLL

    ID              shift and go to state 23
    LPAREN          shift and go to state 26
    ADDRESS         shift and go to state 27
    INTL            shift and go to state 28
    BOOLL           shift and go to state 29

    Expression                     shift and go to state 70
    BinaryExpression               shift and go to state 11
    UnaryExpression                shift and go to state 12
    IdExpression                   shift and go to state 13
    IdPairExpression               shift and go to state 14
    LiteralExpression              shift and go to state 15
    ParenthesesCallExpression      shift and go to state 16
    BracketCallExpression          shift and go to state 17
    DotExpression                  shift and go to state 18
    ParenthesesExpression          shift and go to state 19
    DereferenceExpression          shift and go to state 20
    AddressExpression              shift and go to state 21
    AngleCallExpression            shift and go to state 22
    IntLiteral                     shift and go to state 24
    BoolLiteral                    shift and go to state 25

state 47

    (27) DereferenceExpression -> Expression DEREF .

    ARROW           reduce using rule 27 (DereferenceExpression -> Expression DEREF .)
    PLUS            reduce using rule 27 (DereferenceExpression -> Expression DEREF .)
    MINUS           reduce using rule 27 (DereferenceExpression -> Expression DEREF .)
    TIMES           reduce using rule 27 (DereferenceExpression -> Expression DEREF .)
    DIVIDE          reduce using rule 27 (DereferenceExpression -> Expression DEREF .)
    MOD             reduce using rule 27 (DereferenceExpression -> Expression DEREF .)
    LEQ             reduce using rule 27 (DereferenceExpression -> Expression DEREF .)
    GEQ             reduce using rule 27 (DereferenceExpression -> Expression DEREF .)
    LT              reduce using rule 27 (DereferenceExpression -> Expression DEREF .)
    GT              reduce using rule 27 (DereferenceExpression -> Expression DEREF .)
    EQ              reduce using rule 27 (DereferenceExpression -> Expression DEREF .)
    NE              reduce using rule 27 (DereferenceExpression -> Expression DEREF .)
    LPAREN          reduce using rule 27 (DereferenceExpression -> Expression DEREF .)
    LBRACKET        reduce using rule 27 (DereferenceExpression -> Expression DEREF .)
    DOT             reduce using rule 27 (DereferenceExpression -> Expression DEREF .)
    DEREF           reduce using rule 27 (DereferenceExpression -> Expression DEREF .)
    LANGLE          reduce using rule 27 (DereferenceExpression -> Expression DEREF .)
    LBRACE          reduce using rule 27 (DereferenceExpression -> Expression DEREF .)
    RPAREN          reduce using rule 27 (DereferenceExpression -> Expression DEREF .)
    COMMA           reduce using rule 27 (DereferenceExpression -> Expression DEREF .)
    RBRACKET        reduce using rule 27 (DereferenceExpression -> Expression DEREF .)
    RANGLE          reduce using rule 27 (DereferenceExpression -> Expression DEREF .)
    ASSIGNMENT      reduce using rule 27 (DereferenceExpression -> Expression DEREF .)
    SEMICOLON       reduce using rule 27 (DereferenceExpression -> Expression DEREF .)
    ID              reduce using rule 27 (DereferenceExpression -> Expression DEREF .)
    ADDRESS         reduce using rule 27 (DereferenceExpression -> Expression DEREF .)
    INTL            reduce using rule 27 (DereferenceExpression -> Expression DEREF .)
    BOOLL           reduce using rule 27 (DereferenceExpression -> Expression DEREF .)


state 48

    (2) AngleCallExpression -> Expression LANGLE . ExpressionList RANGLE
    (33) ExpressionList -> . Expression COMMA ExpressionList
    (34) ExpressionList -> . Expression
    (35) ExpressionList -> . empty
    (29) Expression -> . BinaryExpression
    (30) Expression -> . UnaryExpression
    (31) Expression -> . IdExpression
    (32) Expression -> . IdPairExpression
    (77) empty -> .
    (4) BinaryExpression -> . Expression PLUS Expression
    (5) BinaryExpression -> . Expression MINUS Expression
    (6) BinaryExpression -> . Expression TIMES Expression
    (7) BinaryExpression -> . Expression DIVIDE Expression
    (8) BinaryExpression -> . Expression MOD Expression
    (9) BinaryExpression -> . Expression LEQ Expression
    (10) BinaryExpression -> . Expression GEQ Expression
    (11) BinaryExpression -> . Expression LT Expression
    (12) BinaryExpression -> . Expression GT Expression
    (13) BinaryExpression -> . Expression EQ Expression
    (14) BinaryExpression -> . Expression NE Expression
    (68) UnaryExpression -> . LiteralExpression
    (69) UnaryExpression -> . ParenthesesCallExpression
    (70) UnaryExpression -> . BracketCallExpression
    (71) UnaryExpression -> . DotExpression
    (72) UnaryExpression -> . ParenthesesExpression
    (73) UnaryExpression -> . DereferenceExpression
    (74) UnaryExpression -> . AddressExpression
    (75) UnaryExpression -> . AngleCallExpression
    (40) IdExpression -> . ID
    (41) IdPairExpression -> . ID ID
    (46) LiteralExpression -> . IntLiteral
    (47) LiteralExpression -> . BoolLiteral
    (48) ParenthesesCallExpression -> . Expression LPAREN ExpressionList RPAREN
    (19) BracketCallExpression -> . Expression LBRACKET Expression RBRACKET
    (28) DotExpression -> . Expression DOT Expression
    (49) ParenthesesExpression -> . LPAREN Expression RPAREN
    (27) DereferenceExpression -> . Expression DEREF
    (1) AddressExpression -> . ADDRESS Expression
    (2) AngleCallExpression -> . Expression LANGLE ExpressionList RANGLE
    (45) IntLiteral -> . INTL
    (18) BoolLiteral -> . BOOLL

    RANGLE          reduce using rule 77 (empty -> .)
    ID              shift and go to state 23
    LPAREN          shift and go to state 26
    ADDRESS         shift and go to state 27
    INTL            shift and go to state 28
    BOOLL           shift and go to state 29

    Expression                     shift and go to state 66
    ExpressionList                 shift and go to state 71
    empty                          shift and go to state 68
    BinaryExpression               shift and go to state 11
    UnaryExpression                shift and go to state 12
    IdExpression                   shift and go to state 13
    IdPairExpression               shift and go to state 14
    LiteralExpression              shift and go to state 15
    ParenthesesCallExpression      shift and go to state 16
    BracketCallExpression          shift and go to state 17
    DotExpression                  shift and go to state 18
    ParenthesesExpression          shift and go to state 19
    DereferenceExpression          shift and go to state 20
    AddressExpression              shift and go to state 21
    AngleCallExpression            shift and go to state 22
    IntLiteral                     shift and go to state 24
    BoolLiteral                    shift and go to state 25

state 49

    (16) Block -> LBRACE . StatementList RBRACE
    (64) StatementList -> . Statement StatementList
    (65) StatementList -> . Statement
    (52) Statement -> . AssignmentStatement
    (53) Statement -> . InitStatement
    (54) Statement -> . ExpressionStatement
    (55) Statement -> . IfElseStatement
    (56) Statement -> . ForStatement
    (57) Statement -> . WhileStatement
    (58) Statement -> . BreakStatement
    (59) Statement -> . ReturnStatement
    (60) Statement -> . BlockStatement
    (61) Statement -> . BlankStatement
    (62) Statement -> . TypeStatement
    (63) Statement -> . DeclarationStatement
    (3) AssignmentStatement -> . Expression ASSIGNMENT Expression SEMICOLON
    (44) InitStatement -> . LET Expression ASSIGNMENT Expression SEMICOLON
    (36) ExpressionStatement -> . Expression SEMICOLON
    (42) IfElseStatement -> . IF LPAREN Expression RPAREN Block ELSE Block
    (43) IfElseStatement -> . IF LPAREN Expression RPAREN Block
    (37) ForStatement -> . FOR LPAREN Statement Expression SEMICOLON Statement RPAREN Block
    (76) WhileStatement -> . WHILE LPAREN Expression RPAREN Block
    (20) BreakStatement -> . BREAK IntLiteral SEMICOLON
    (21) BreakStatement -> . BREAK SEMICOLON
    (50) ReturnStatement -> . RETURN Expression SEMICOLON
    (51) ReturnStatement -> . RETURN SEMICOLON
    (17) BlockStatement -> . Block
    (15) BlankStatement -> . SEMICOLON
    (67) TypeStatement -> . TYPE Expression ASSIGNMENT Expression SEMICOLON
    (23) DeclarationStatement -> . Expression Expression SEMICOLON
    (29) Expression -> . BinaryExpression
    (30) Expression -> . UnaryExpression
    (31) Expression -> . IdExpression
    (32) Expression -> . IdPairExpression
    (16) Block -> . LBRACE StatementList RBRACE
    (4) BinaryExpression -> . Expression PLUS Expression
    (5) BinaryExpression -> . Expression MINUS Expression
    (6) BinaryExpression -> . Expression TIMES Expression
    (7) BinaryExpression -> . Expression DIVIDE Expression
    (8) BinaryExpression -> . Expression MOD Expression
    (9) BinaryExpression -> . Expression LEQ Expression
    (10) BinaryExpression -> . Expression GEQ Expression
    (11) BinaryExpression -> . Expression LT Expression
    (12) BinaryExpression -> . Expression GT Expression
    (13) BinaryExpression -> . Expression EQ Expression
    (14) BinaryExpression -> . Expression NE Expression
    (68) UnaryExpression -> . LiteralExpression
    (69) UnaryExpression -> . ParenthesesCallExpression
    (70) UnaryExpression -> . BracketCallExpression
    (71) UnaryExpression -> . DotExpression
    (72) UnaryExpression -> . ParenthesesExpression
    (73) UnaryExpression -> . DereferenceExpression
    (74) UnaryExpression -> . AddressExpression
    (75) UnaryExpression -> . AngleCallExpression
    (40) IdExpression -> . ID
    (41) IdPairExpression -> . ID ID
    (46) LiteralExpression -> . IntLiteral
    (47) LiteralExpression -> . BoolLiteral
    (48) ParenthesesCallExpression -> . Expression LPAREN ExpressionList RPAREN
    (19) BracketCallExpression -> . Expression LBRACKET Expression RBRACKET
    (28) DotExpression -> . Expression DOT Expression
    (49) ParenthesesExpression -> . LPAREN Expression RPAREN
    (27) DereferenceExpression -> . Expression DEREF
    (1) AddressExpression -> . ADDRESS Expression
    (2) AngleCallExpression -> . Expression LANGLE ExpressionList RANGLE
    (45) IntLiteral -> . INTL
    (18) BoolLiteral -> . BOOLL

    LET             shift and go to state 88
    IF              shift and go to state 89
    FOR             shift and go to state 91
    WHILE           shift and go to state 92
    BREAK           shift and go to state 93
    RETURN          shift and go to state 94
    SEMICOLON       shift and go to state 87
    TYPE            shift and go to state 95
    LBRACE          shift and go to state 49
    ID              shift and go to state 23
    LPAREN          shift and go to state 26
    ADDRESS         shift and go to state 27
    INTL            shift and go to state 28
    BOOLL           shift and go to state 29

    StatementList                  shift and go to state 72
    Statement                      shift and go to state 73
    AssignmentStatement            shift and go to state 74
    InitStatement                  shift and go to state 75
    ExpressionStatement            shift and go to state 76
    IfElseStatement                shift and go to state 77
    ForStatement                   shift and go to state 78
    WhileStatement                 shift and go to state 79
    BreakStatement                 shift and go to state 80
    ReturnStatement                shift and go to state 81
    BlockStatement                 shift and go to state 82
    BlankStatement                 shift and go to state 83
    TypeStatement                  shift and go to state 84
    DeclarationStatement           shift and go to state 85
    Expression                     shift and go to state 86
    Block                          shift and go to state 90
    IntLiteral                     shift and go to state 24
    BinaryExpression               shift and go to state 11
    UnaryExpression                shift and go to state 12
    IdExpression                   shift and go to state 13
    IdPairExpression               shift and go to state 14
    LiteralExpression              shift and go to state 15
    ParenthesesCallExpression      shift and go to state 16
    BracketCallExpression          shift and go to state 17
    DotExpression                  shift and go to state 18
    ParenthesesExpression          shift and go to state 19
    DereferenceExpression          shift and go to state 20
    AddressExpression              shift and go to state 21
    AngleCallExpression            shift and go to state 22
    BoolLiteral                    shift and go to state 25

state 50

    (41) IdPairExpression -> ID ID .

    ARROW           reduce using rule 41 (IdPairExpression -> ID ID .)
    PLUS            reduce using rule 41 (IdPairExpression -> ID ID .)
    MINUS           reduce using rule 41 (IdPairExpression -> ID ID .)
    TIMES           reduce using rule 41 (IdPairExpression -> ID ID .)
    DIVIDE          reduce using rule 41 (IdPairExpression -> ID ID .)
    MOD             reduce using rule 41 (IdPairExpression -> ID ID .)
    LEQ             reduce using rule 41 (IdPairExpression -> ID ID .)
    GEQ             reduce using rule 41 (IdPairExpression -> ID ID .)
    LT              reduce using rule 41 (IdPairExpression -> ID ID .)
    GT              reduce using rule 41 (IdPairExpression -> ID ID .)
    EQ              reduce using rule 41 (IdPairExpression -> ID ID .)
    NE              reduce using rule 41 (IdPairExpression -> ID ID .)
    LPAREN          reduce using rule 41 (IdPairExpression -> ID ID .)
    LBRACKET        reduce using rule 41 (IdPairExpression -> ID ID .)
    DOT             reduce using rule 41 (IdPairExpression -> ID ID .)
    DEREF           reduce using rule 41 (IdPairExpression -> ID ID .)
    LANGLE          reduce using rule 41 (IdPairExpression -> ID ID .)
    LBRACE          reduce using rule 41 (IdPairExpression -> ID ID .)
    RPAREN          reduce using rule 41 (IdPairExpression -> ID ID .)
    COMMA           reduce using rule 41 (IdPairExpression -> ID ID .)
    RBRACKET        reduce using rule 41 (IdPairExpression -> ID ID .)
    RANGLE          reduce using rule 41 (IdPairExpression -> ID ID .)
    ASSIGNMENT      reduce using rule 41 (IdPairExpression -> ID ID .)
    SEMICOLON       reduce using rule 41 (IdPairExpression -> ID ID .)
    ID              reduce using rule 41 (IdPairExpression -> ID ID .)
    ADDRESS         reduce using rule 41 (IdPairExpression -> ID ID .)
    INTL            reduce using rule 41 (IdPairExpression -> ID ID .)
    BOOLL           reduce using rule 41 (IdPairExpression -> ID ID .)


state 51

    (49) ParenthesesExpression -> LPAREN Expression . RPAREN
    (4) BinaryExpression -> Expression . PLUS Expression
    (5) BinaryExpression -> Expression . MINUS Expression
    (6) BinaryExpression -> Expression . TIMES Expression
    (7) BinaryExpression -> Expression . DIVIDE Expression
    (8) BinaryExpression -> Expression . MOD Expression
    (9) BinaryExpression -> Expression . LEQ Expression
    (10) BinaryExpression -> Expression . GEQ Expression
    (11) BinaryExpression -> Expression . LT Expression
    (12) BinaryExpression -> Expression . GT Expression
    (13) BinaryExpression -> Expression . EQ Expression
    (14) BinaryExpression -> Expression . NE Expression
    (48) ParenthesesCallExpression -> Expression . LPAREN ExpressionList RPAREN
    (19) BracketCallExpression -> Expression . LBRACKET Expression RBRACKET
    (28) DotExpression -> Expression . DOT Expression
    (27) DereferenceExpression -> Expression . DEREF
    (2) AngleCallExpression -> Expression . LANGLE ExpressionList RANGLE

    RPAREN          shift and go to state 96
    PLUS            shift and go to state 33
    MINUS           shift and go to state 34
    TIMES           shift and go to state 35
    DIVIDE          shift and go to state 36
    MOD             shift and go to state 37
    LEQ             shift and go to state 38
    GEQ             shift and go to state 39
    LT              shift and go to state 40
    GT              shift and go to state 41
    EQ              shift and go to state 42
    NE              shift and go to state 43
    LPAREN          shift and go to state 44
    LBRACKET        shift and go to state 45
    DOT             shift and go to state 46
    DEREF           shift and go to state 47
    LANGLE          shift and go to state 48


state 52

    (1) AddressExpression -> ADDRESS Expression .
    (4) BinaryExpression -> Expression . PLUS Expression
    (5) BinaryExpression -> Expression . MINUS Expression
    (6) BinaryExpression -> Expression . TIMES Expression
    (7) BinaryExpression -> Expression . DIVIDE Expression
    (8) BinaryExpression -> Expression . MOD Expression
    (9) BinaryExpression -> Expression . LEQ Expression
    (10) BinaryExpression -> Expression . GEQ Expression
    (11) BinaryExpression -> Expression . LT Expression
    (12) BinaryExpression -> Expression . GT Expression
    (13) BinaryExpression -> Expression . EQ Expression
    (14) BinaryExpression -> Expression . NE Expression
    (48) ParenthesesCallExpression -> Expression . LPAREN ExpressionList RPAREN
    (19) BracketCallExpression -> Expression . LBRACKET Expression RBRACKET
    (28) DotExpression -> Expression . DOT Expression
    (27) DereferenceExpression -> Expression . DEREF
    (2) AngleCallExpression -> Expression . LANGLE ExpressionList RANGLE

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for LEQ resolved as shift
  ! shift/reduce conflict for GEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for DEREF resolved as shift
  ! shift/reduce conflict for LANGLE resolved as shift
    ARROW           reduce using rule 1 (AddressExpression -> ADDRESS Expression .)
    LBRACE          reduce using rule 1 (AddressExpression -> ADDRESS Expression .)
    RPAREN          reduce using rule 1 (AddressExpression -> ADDRESS Expression .)
    COMMA           reduce using rule 1 (AddressExpression -> ADDRESS Expression .)
    RBRACKET        reduce using rule 1 (AddressExpression -> ADDRESS Expression .)
    RANGLE          reduce using rule 1 (AddressExpression -> ADDRESS Expression .)
    ASSIGNMENT      reduce using rule 1 (AddressExpression -> ADDRESS Expression .)
    SEMICOLON       reduce using rule 1 (AddressExpression -> ADDRESS Expression .)
    ID              reduce using rule 1 (AddressExpression -> ADDRESS Expression .)
    ADDRESS         reduce using rule 1 (AddressExpression -> ADDRESS Expression .)
    INTL            reduce using rule 1 (AddressExpression -> ADDRESS Expression .)
    BOOLL           reduce using rule 1 (AddressExpression -> ADDRESS Expression .)
    PLUS            shift and go to state 33
    MINUS           shift and go to state 34
    TIMES           shift and go to state 35
    DIVIDE          shift and go to state 36
    MOD             shift and go to state 37
    LEQ             shift and go to state 38
    GEQ             shift and go to state 39
    LT              shift and go to state 40
    GT              shift and go to state 41
    EQ              shift and go to state 42
    NE              shift and go to state 43
    LPAREN          shift and go to state 44
    LBRACKET        shift and go to state 45
    DOT             shift and go to state 46
    DEREF           shift and go to state 47
    LANGLE          shift and go to state 48

  ! PLUS            [ reduce using rule 1 (AddressExpression -> ADDRESS Expression .) ]
  ! MINUS           [ reduce using rule 1 (AddressExpression -> ADDRESS Expression .) ]
  ! TIMES           [ reduce using rule 1 (AddressExpression -> ADDRESS Expression .) ]
  ! DIVIDE          [ reduce using rule 1 (AddressExpression -> ADDRESS Expression .) ]
  ! MOD             [ reduce using rule 1 (AddressExpression -> ADDRESS Expression .) ]
  ! LEQ             [ reduce using rule 1 (AddressExpression -> ADDRESS Expression .) ]
  ! GEQ             [ reduce using rule 1 (AddressExpression -> ADDRESS Expression .) ]
  ! LT              [ reduce using rule 1 (AddressExpression -> ADDRESS Expression .) ]
  ! GT              [ reduce using rule 1 (AddressExpression -> ADDRESS Expression .) ]
  ! EQ              [ reduce using rule 1 (AddressExpression -> ADDRESS Expression .) ]
  ! NE              [ reduce using rule 1 (AddressExpression -> ADDRESS Expression .) ]
  ! LPAREN          [ reduce using rule 1 (AddressExpression -> ADDRESS Expression .) ]
  ! LBRACKET        [ reduce using rule 1 (AddressExpression -> ADDRESS Expression .) ]
  ! DOT             [ reduce using rule 1 (AddressExpression -> ADDRESS Expression .) ]
  ! DEREF           [ reduce using rule 1 (AddressExpression -> ADDRESS Expression .) ]
  ! LANGLE          [ reduce using rule 1 (AddressExpression -> ADDRESS Expression .) ]


state 53

    (66) StructDefinition -> STRUCT Expression Block .

    FN              reduce using rule 66 (StructDefinition -> STRUCT Expression Block .)
    STRUCT          reduce using rule 66 (StructDefinition -> STRUCT Expression Block .)
    $end            reduce using rule 66 (StructDefinition -> STRUCT Expression Block .)


state 54

    (39) FunctionDefinition -> FN Expression ARROW Expression . Block
    (4) BinaryExpression -> Expression . PLUS Expression
    (5) BinaryExpression -> Expression . MINUS Expression
    (6) BinaryExpression -> Expression . TIMES Expression
    (7) BinaryExpression -> Expression . DIVIDE Expression
    (8) BinaryExpression -> Expression . MOD Expression
    (9) BinaryExpression -> Expression . LEQ Expression
    (10) BinaryExpression -> Expression . GEQ Expression
    (11) BinaryExpression -> Expression . LT Expression
    (12) BinaryExpression -> Expression . GT Expression
    (13) BinaryExpression -> Expression . EQ Expression
    (14) BinaryExpression -> Expression . NE Expression
    (48) ParenthesesCallExpression -> Expression . LPAREN ExpressionList RPAREN
    (19) BracketCallExpression -> Expression . LBRACKET Expression RBRACKET
    (28) DotExpression -> Expression . DOT Expression
    (27) DereferenceExpression -> Expression . DEREF
    (2) AngleCallExpression -> Expression . LANGLE ExpressionList RANGLE
    (16) Block -> . LBRACE StatementList RBRACE

    PLUS            shift and go to state 33
    MINUS           shift and go to state 34
    TIMES           shift and go to state 35
    DIVIDE          shift and go to state 36
    MOD             shift and go to state 37
    LEQ             shift and go to state 38
    GEQ             shift and go to state 39
    LT              shift and go to state 40
    GT              shift and go to state 41
    EQ              shift and go to state 42
    NE              shift and go to state 43
    LPAREN          shift and go to state 44
    LBRACKET        shift and go to state 45
    DOT             shift and go to state 46
    DEREF           shift and go to state 47
    LANGLE          shift and go to state 48
    LBRACE          shift and go to state 49

    Block                          shift and go to state 97

state 55

    (4) BinaryExpression -> Expression PLUS Expression .
    (4) BinaryExpression -> Expression . PLUS Expression
    (5) BinaryExpression -> Expression . MINUS Expression
    (6) BinaryExpression -> Expression . TIMES Expression
    (7) BinaryExpression -> Expression . DIVIDE Expression
    (8) BinaryExpression -> Expression . MOD Expression
    (9) BinaryExpression -> Expression . LEQ Expression
    (10) BinaryExpression -> Expression . GEQ Expression
    (11) BinaryExpression -> Expression . LT Expression
    (12) BinaryExpression -> Expression . GT Expression
    (13) BinaryExpression -> Expression . EQ Expression
    (14) BinaryExpression -> Expression . NE Expression
    (48) ParenthesesCallExpression -> Expression . LPAREN ExpressionList RPAREN
    (19) BracketCallExpression -> Expression . LBRACKET Expression RBRACKET
    (28) DotExpression -> Expression . DOT Expression
    (27) DereferenceExpression -> Expression . DEREF
    (2) AngleCallExpression -> Expression . LANGLE ExpressionList RANGLE

    ARROW           reduce using rule 4 (BinaryExpression -> Expression PLUS Expression .)
    PLUS            reduce using rule 4 (BinaryExpression -> Expression PLUS Expression .)
    MINUS           reduce using rule 4 (BinaryExpression -> Expression PLUS Expression .)
    LPAREN          reduce using rule 4 (BinaryExpression -> Expression PLUS Expression .)
    LBRACKET        reduce using rule 4 (BinaryExpression -> Expression PLUS Expression .)
    DOT             reduce using rule 4 (BinaryExpression -> Expression PLUS Expression .)
    DEREF           reduce using rule 4 (BinaryExpression -> Expression PLUS Expression .)
    LANGLE          reduce using rule 4 (BinaryExpression -> Expression PLUS Expression .)
    LBRACE          reduce using rule 4 (BinaryExpression -> Expression PLUS Expression .)
    RPAREN          reduce using rule 4 (BinaryExpression -> Expression PLUS Expression .)
    COMMA           reduce using rule 4 (BinaryExpression -> Expression PLUS Expression .)
    RBRACKET        reduce using rule 4 (BinaryExpression -> Expression PLUS Expression .)
    RANGLE          reduce using rule 4 (BinaryExpression -> Expression PLUS Expression .)
    ASSIGNMENT      reduce using rule 4 (BinaryExpression -> Expression PLUS Expression .)
    SEMICOLON       reduce using rule 4 (BinaryExpression -> Expression PLUS Expression .)
    ID              reduce using rule 4 (BinaryExpression -> Expression PLUS Expression .)
    ADDRESS         reduce using rule 4 (BinaryExpression -> Expression PLUS Expression .)
    INTL            reduce using rule 4 (BinaryExpression -> Expression PLUS Expression .)
    BOOLL           reduce using rule 4 (BinaryExpression -> Expression PLUS Expression .)
    TIMES           shift and go to state 35
    DIVIDE          shift and go to state 36
    MOD             shift and go to state 37
    LEQ             shift and go to state 38
    GEQ             shift and go to state 39
    LT              shift and go to state 40
    GT              shift and go to state 41
    EQ              shift and go to state 42
    NE              shift and go to state 43

  ! TIMES           [ reduce using rule 4 (BinaryExpression -> Expression PLUS Expression .) ]
  ! DIVIDE          [ reduce using rule 4 (BinaryExpression -> Expression PLUS Expression .) ]
  ! MOD             [ reduce using rule 4 (BinaryExpression -> Expression PLUS Expression .) ]
  ! LEQ             [ reduce using rule 4 (BinaryExpression -> Expression PLUS Expression .) ]
  ! GEQ             [ reduce using rule 4 (BinaryExpression -> Expression PLUS Expression .) ]
  ! LT              [ reduce using rule 4 (BinaryExpression -> Expression PLUS Expression .) ]
  ! GT              [ reduce using rule 4 (BinaryExpression -> Expression PLUS Expression .) ]
  ! EQ              [ reduce using rule 4 (BinaryExpression -> Expression PLUS Expression .) ]
  ! NE              [ reduce using rule 4 (BinaryExpression -> Expression PLUS Expression .) ]
  ! PLUS            [ shift and go to state 33 ]
  ! MINUS           [ shift and go to state 34 ]
  ! LPAREN          [ shift and go to state 44 ]
  ! LBRACKET        [ shift and go to state 45 ]
  ! DOT             [ shift and go to state 46 ]
  ! DEREF           [ shift and go to state 47 ]
  ! LANGLE          [ shift and go to state 48 ]


state 56

    (5) BinaryExpression -> Expression MINUS Expression .
    (4) BinaryExpression -> Expression . PLUS Expression
    (5) BinaryExpression -> Expression . MINUS Expression
    (6) BinaryExpression -> Expression . TIMES Expression
    (7) BinaryExpression -> Expression . DIVIDE Expression
    (8) BinaryExpression -> Expression . MOD Expression
    (9) BinaryExpression -> Expression . LEQ Expression
    (10) BinaryExpression -> Expression . GEQ Expression
    (11) BinaryExpression -> Expression . LT Expression
    (12) BinaryExpression -> Expression . GT Expression
    (13) BinaryExpression -> Expression . EQ Expression
    (14) BinaryExpression -> Expression . NE Expression
    (48) ParenthesesCallExpression -> Expression . LPAREN ExpressionList RPAREN
    (19) BracketCallExpression -> Expression . LBRACKET Expression RBRACKET
    (28) DotExpression -> Expression . DOT Expression
    (27) DereferenceExpression -> Expression . DEREF
    (2) AngleCallExpression -> Expression . LANGLE ExpressionList RANGLE

    ARROW           reduce using rule 5 (BinaryExpression -> Expression MINUS Expression .)
    PLUS            reduce using rule 5 (BinaryExpression -> Expression MINUS Expression .)
    MINUS           reduce using rule 5 (BinaryExpression -> Expression MINUS Expression .)
    LPAREN          reduce using rule 5 (BinaryExpression -> Expression MINUS Expression .)
    LBRACKET        reduce using rule 5 (BinaryExpression -> Expression MINUS Expression .)
    DOT             reduce using rule 5 (BinaryExpression -> Expression MINUS Expression .)
    DEREF           reduce using rule 5 (BinaryExpression -> Expression MINUS Expression .)
    LANGLE          reduce using rule 5 (BinaryExpression -> Expression MINUS Expression .)
    LBRACE          reduce using rule 5 (BinaryExpression -> Expression MINUS Expression .)
    RPAREN          reduce using rule 5 (BinaryExpression -> Expression MINUS Expression .)
    COMMA           reduce using rule 5 (BinaryExpression -> Expression MINUS Expression .)
    RBRACKET        reduce using rule 5 (BinaryExpression -> Expression MINUS Expression .)
    RANGLE          reduce using rule 5 (BinaryExpression -> Expression MINUS Expression .)
    ASSIGNMENT      reduce using rule 5 (BinaryExpression -> Expression MINUS Expression .)
    SEMICOLON       reduce using rule 5 (BinaryExpression -> Expression MINUS Expression .)
    ID              reduce using rule 5 (BinaryExpression -> Expression MINUS Expression .)
    ADDRESS         reduce using rule 5 (BinaryExpression -> Expression MINUS Expression .)
    INTL            reduce using rule 5 (BinaryExpression -> Expression MINUS Expression .)
    BOOLL           reduce using rule 5 (BinaryExpression -> Expression MINUS Expression .)
    TIMES           shift and go to state 35
    DIVIDE          shift and go to state 36
    MOD             shift and go to state 37
    LEQ             shift and go to state 38
    GEQ             shift and go to state 39
    LT              shift and go to state 40
    GT              shift and go to state 41
    EQ              shift and go to state 42
    NE              shift and go to state 43

  ! TIMES           [ reduce using rule 5 (BinaryExpression -> Expression MINUS Expression .) ]
  ! DIVIDE          [ reduce using rule 5 (BinaryExpression -> Expression MINUS Expression .) ]
  ! MOD             [ reduce using rule 5 (BinaryExpression -> Expression MINUS Expression .) ]
  ! LEQ             [ reduce using rule 5 (BinaryExpression -> Expression MINUS Expression .) ]
  ! GEQ             [ reduce using rule 5 (BinaryExpression -> Expression MINUS Expression .) ]
  ! LT              [ reduce using rule 5 (BinaryExpression -> Expression MINUS Expression .) ]
  ! GT              [ reduce using rule 5 (BinaryExpression -> Expression MINUS Expression .) ]
  ! EQ              [ reduce using rule 5 (BinaryExpression -> Expression MINUS Expression .) ]
  ! NE              [ reduce using rule 5 (BinaryExpression -> Expression MINUS Expression .) ]
  ! PLUS            [ shift and go to state 33 ]
  ! MINUS           [ shift and go to state 34 ]
  ! LPAREN          [ shift and go to state 44 ]
  ! LBRACKET        [ shift and go to state 45 ]
  ! DOT             [ shift and go to state 46 ]
  ! DEREF           [ shift and go to state 47 ]
  ! LANGLE          [ shift and go to state 48 ]


state 57

    (6) BinaryExpression -> Expression TIMES Expression .
    (4) BinaryExpression -> Expression . PLUS Expression
    (5) BinaryExpression -> Expression . MINUS Expression
    (6) BinaryExpression -> Expression . TIMES Expression
    (7) BinaryExpression -> Expression . DIVIDE Expression
    (8) BinaryExpression -> Expression . MOD Expression
    (9) BinaryExpression -> Expression . LEQ Expression
    (10) BinaryExpression -> Expression . GEQ Expression
    (11) BinaryExpression -> Expression . LT Expression
    (12) BinaryExpression -> Expression . GT Expression
    (13) BinaryExpression -> Expression . EQ Expression
    (14) BinaryExpression -> Expression . NE Expression
    (48) ParenthesesCallExpression -> Expression . LPAREN ExpressionList RPAREN
    (19) BracketCallExpression -> Expression . LBRACKET Expression RBRACKET
    (28) DotExpression -> Expression . DOT Expression
    (27) DereferenceExpression -> Expression . DEREF
    (2) AngleCallExpression -> Expression . LANGLE ExpressionList RANGLE

    ARROW           reduce using rule 6 (BinaryExpression -> Expression TIMES Expression .)
    PLUS            reduce using rule 6 (BinaryExpression -> Expression TIMES Expression .)
    MINUS           reduce using rule 6 (BinaryExpression -> Expression TIMES Expression .)
    TIMES           reduce using rule 6 (BinaryExpression -> Expression TIMES Expression .)
    DIVIDE          reduce using rule 6 (BinaryExpression -> Expression TIMES Expression .)
    MOD             reduce using rule 6 (BinaryExpression -> Expression TIMES Expression .)
    LPAREN          reduce using rule 6 (BinaryExpression -> Expression TIMES Expression .)
    LBRACKET        reduce using rule 6 (BinaryExpression -> Expression TIMES Expression .)
    DOT             reduce using rule 6 (BinaryExpression -> Expression TIMES Expression .)
    DEREF           reduce using rule 6 (BinaryExpression -> Expression TIMES Expression .)
    LANGLE          reduce using rule 6 (BinaryExpression -> Expression TIMES Expression .)
    LBRACE          reduce using rule 6 (BinaryExpression -> Expression TIMES Expression .)
    RPAREN          reduce using rule 6 (BinaryExpression -> Expression TIMES Expression .)
    COMMA           reduce using rule 6 (BinaryExpression -> Expression TIMES Expression .)
    RBRACKET        reduce using rule 6 (BinaryExpression -> Expression TIMES Expression .)
    RANGLE          reduce using rule 6 (BinaryExpression -> Expression TIMES Expression .)
    ASSIGNMENT      reduce using rule 6 (BinaryExpression -> Expression TIMES Expression .)
    SEMICOLON       reduce using rule 6 (BinaryExpression -> Expression TIMES Expression .)
    ID              reduce using rule 6 (BinaryExpression -> Expression TIMES Expression .)
    ADDRESS         reduce using rule 6 (BinaryExpression -> Expression TIMES Expression .)
    INTL            reduce using rule 6 (BinaryExpression -> Expression TIMES Expression .)
    BOOLL           reduce using rule 6 (BinaryExpression -> Expression TIMES Expression .)
    LEQ             shift and go to state 38
    GEQ             shift and go to state 39
    LT              shift and go to state 40
    GT              shift and go to state 41
    EQ              shift and go to state 42
    NE              shift and go to state 43

  ! LEQ             [ reduce using rule 6 (BinaryExpression -> Expression TIMES Expression .) ]
  ! GEQ             [ reduce using rule 6 (BinaryExpression -> Expression TIMES Expression .) ]
  ! LT              [ reduce using rule 6 (BinaryExpression -> Expression TIMES Expression .) ]
  ! GT              [ reduce using rule 6 (BinaryExpression -> Expression TIMES Expression .) ]
  ! EQ              [ reduce using rule 6 (BinaryExpression -> Expression TIMES Expression .) ]
  ! NE              [ reduce using rule 6 (BinaryExpression -> Expression TIMES Expression .) ]
  ! PLUS            [ shift and go to state 33 ]
  ! MINUS           [ shift and go to state 34 ]
  ! TIMES           [ shift and go to state 35 ]
  ! DIVIDE          [ shift and go to state 36 ]
  ! MOD             [ shift and go to state 37 ]
  ! LPAREN          [ shift and go to state 44 ]
  ! LBRACKET        [ shift and go to state 45 ]
  ! DOT             [ shift and go to state 46 ]
  ! DEREF           [ shift and go to state 47 ]
  ! LANGLE          [ shift and go to state 48 ]


state 58

    (7) BinaryExpression -> Expression DIVIDE Expression .
    (4) BinaryExpression -> Expression . PLUS Expression
    (5) BinaryExpression -> Expression . MINUS Expression
    (6) BinaryExpression -> Expression . TIMES Expression
    (7) BinaryExpression -> Expression . DIVIDE Expression
    (8) BinaryExpression -> Expression . MOD Expression
    (9) BinaryExpression -> Expression . LEQ Expression
    (10) BinaryExpression -> Expression . GEQ Expression
    (11) BinaryExpression -> Expression . LT Expression
    (12) BinaryExpression -> Expression . GT Expression
    (13) BinaryExpression -> Expression . EQ Expression
    (14) BinaryExpression -> Expression . NE Expression
    (48) ParenthesesCallExpression -> Expression . LPAREN ExpressionList RPAREN
    (19) BracketCallExpression -> Expression . LBRACKET Expression RBRACKET
    (28) DotExpression -> Expression . DOT Expression
    (27) DereferenceExpression -> Expression . DEREF
    (2) AngleCallExpression -> Expression . LANGLE ExpressionList RANGLE

    ARROW           reduce using rule 7 (BinaryExpression -> Expression DIVIDE Expression .)
    PLUS            reduce using rule 7 (BinaryExpression -> Expression DIVIDE Expression .)
    MINUS           reduce using rule 7 (BinaryExpression -> Expression DIVIDE Expression .)
    TIMES           reduce using rule 7 (BinaryExpression -> Expression DIVIDE Expression .)
    DIVIDE          reduce using rule 7 (BinaryExpression -> Expression DIVIDE Expression .)
    MOD             reduce using rule 7 (BinaryExpression -> Expression DIVIDE Expression .)
    LPAREN          reduce using rule 7 (BinaryExpression -> Expression DIVIDE Expression .)
    LBRACKET        reduce using rule 7 (BinaryExpression -> Expression DIVIDE Expression .)
    DOT             reduce using rule 7 (BinaryExpression -> Expression DIVIDE Expression .)
    DEREF           reduce using rule 7 (BinaryExpression -> Expression DIVIDE Expression .)
    LANGLE          reduce using rule 7 (BinaryExpression -> Expression DIVIDE Expression .)
    LBRACE          reduce using rule 7 (BinaryExpression -> Expression DIVIDE Expression .)
    RPAREN          reduce using rule 7 (BinaryExpression -> Expression DIVIDE Expression .)
    COMMA           reduce using rule 7 (BinaryExpression -> Expression DIVIDE Expression .)
    RBRACKET        reduce using rule 7 (BinaryExpression -> Expression DIVIDE Expression .)
    RANGLE          reduce using rule 7 (BinaryExpression -> Expression DIVIDE Expression .)
    ASSIGNMENT      reduce using rule 7 (BinaryExpression -> Expression DIVIDE Expression .)
    SEMICOLON       reduce using rule 7 (BinaryExpression -> Expression DIVIDE Expression .)
    ID              reduce using rule 7 (BinaryExpression -> Expression DIVIDE Expression .)
    ADDRESS         reduce using rule 7 (BinaryExpression -> Expression DIVIDE Expression .)
    INTL            reduce using rule 7 (BinaryExpression -> Expression DIVIDE Expression .)
    BOOLL           reduce using rule 7 (BinaryExpression -> Expression DIVIDE Expression .)
    LEQ             shift and go to state 38
    GEQ             shift and go to state 39
    LT              shift and go to state 40
    GT              shift and go to state 41
    EQ              shift and go to state 42
    NE              shift and go to state 43

  ! LEQ             [ reduce using rule 7 (BinaryExpression -> Expression DIVIDE Expression .) ]
  ! GEQ             [ reduce using rule 7 (BinaryExpression -> Expression DIVIDE Expression .) ]
  ! LT              [ reduce using rule 7 (BinaryExpression -> Expression DIVIDE Expression .) ]
  ! GT              [ reduce using rule 7 (BinaryExpression -> Expression DIVIDE Expression .) ]
  ! EQ              [ reduce using rule 7 (BinaryExpression -> Expression DIVIDE Expression .) ]
  ! NE              [ reduce using rule 7 (BinaryExpression -> Expression DIVIDE Expression .) ]
  ! PLUS            [ shift and go to state 33 ]
  ! MINUS           [ shift and go to state 34 ]
  ! TIMES           [ shift and go to state 35 ]
  ! DIVIDE          [ shift and go to state 36 ]
  ! MOD             [ shift and go to state 37 ]
  ! LPAREN          [ shift and go to state 44 ]
  ! LBRACKET        [ shift and go to state 45 ]
  ! DOT             [ shift and go to state 46 ]
  ! DEREF           [ shift and go to state 47 ]
  ! LANGLE          [ shift and go to state 48 ]


state 59

    (8) BinaryExpression -> Expression MOD Expression .
    (4) BinaryExpression -> Expression . PLUS Expression
    (5) BinaryExpression -> Expression . MINUS Expression
    (6) BinaryExpression -> Expression . TIMES Expression
    (7) BinaryExpression -> Expression . DIVIDE Expression
    (8) BinaryExpression -> Expression . MOD Expression
    (9) BinaryExpression -> Expression . LEQ Expression
    (10) BinaryExpression -> Expression . GEQ Expression
    (11) BinaryExpression -> Expression . LT Expression
    (12) BinaryExpression -> Expression . GT Expression
    (13) BinaryExpression -> Expression . EQ Expression
    (14) BinaryExpression -> Expression . NE Expression
    (48) ParenthesesCallExpression -> Expression . LPAREN ExpressionList RPAREN
    (19) BracketCallExpression -> Expression . LBRACKET Expression RBRACKET
    (28) DotExpression -> Expression . DOT Expression
    (27) DereferenceExpression -> Expression . DEREF
    (2) AngleCallExpression -> Expression . LANGLE ExpressionList RANGLE

    ARROW           reduce using rule 8 (BinaryExpression -> Expression MOD Expression .)
    PLUS            reduce using rule 8 (BinaryExpression -> Expression MOD Expression .)
    MINUS           reduce using rule 8 (BinaryExpression -> Expression MOD Expression .)
    TIMES           reduce using rule 8 (BinaryExpression -> Expression MOD Expression .)
    DIVIDE          reduce using rule 8 (BinaryExpression -> Expression MOD Expression .)
    MOD             reduce using rule 8 (BinaryExpression -> Expression MOD Expression .)
    LPAREN          reduce using rule 8 (BinaryExpression -> Expression MOD Expression .)
    LBRACKET        reduce using rule 8 (BinaryExpression -> Expression MOD Expression .)
    DOT             reduce using rule 8 (BinaryExpression -> Expression MOD Expression .)
    DEREF           reduce using rule 8 (BinaryExpression -> Expression MOD Expression .)
    LANGLE          reduce using rule 8 (BinaryExpression -> Expression MOD Expression .)
    LBRACE          reduce using rule 8 (BinaryExpression -> Expression MOD Expression .)
    RPAREN          reduce using rule 8 (BinaryExpression -> Expression MOD Expression .)
    COMMA           reduce using rule 8 (BinaryExpression -> Expression MOD Expression .)
    RBRACKET        reduce using rule 8 (BinaryExpression -> Expression MOD Expression .)
    RANGLE          reduce using rule 8 (BinaryExpression -> Expression MOD Expression .)
    ASSIGNMENT      reduce using rule 8 (BinaryExpression -> Expression MOD Expression .)
    SEMICOLON       reduce using rule 8 (BinaryExpression -> Expression MOD Expression .)
    ID              reduce using rule 8 (BinaryExpression -> Expression MOD Expression .)
    ADDRESS         reduce using rule 8 (BinaryExpression -> Expression MOD Expression .)
    INTL            reduce using rule 8 (BinaryExpression -> Expression MOD Expression .)
    BOOLL           reduce using rule 8 (BinaryExpression -> Expression MOD Expression .)
    LEQ             shift and go to state 38
    GEQ             shift and go to state 39
    LT              shift and go to state 40
    GT              shift and go to state 41
    EQ              shift and go to state 42
    NE              shift and go to state 43

  ! LEQ             [ reduce using rule 8 (BinaryExpression -> Expression MOD Expression .) ]
  ! GEQ             [ reduce using rule 8 (BinaryExpression -> Expression MOD Expression .) ]
  ! LT              [ reduce using rule 8 (BinaryExpression -> Expression MOD Expression .) ]
  ! GT              [ reduce using rule 8 (BinaryExpression -> Expression MOD Expression .) ]
  ! EQ              [ reduce using rule 8 (BinaryExpression -> Expression MOD Expression .) ]
  ! NE              [ reduce using rule 8 (BinaryExpression -> Expression MOD Expression .) ]
  ! PLUS            [ shift and go to state 33 ]
  ! MINUS           [ shift and go to state 34 ]
  ! TIMES           [ shift and go to state 35 ]
  ! DIVIDE          [ shift and go to state 36 ]
  ! MOD             [ shift and go to state 37 ]
  ! LPAREN          [ shift and go to state 44 ]
  ! LBRACKET        [ shift and go to state 45 ]
  ! DOT             [ shift and go to state 46 ]
  ! DEREF           [ shift and go to state 47 ]
  ! LANGLE          [ shift and go to state 48 ]


state 60

    (9) BinaryExpression -> Expression LEQ Expression .
    (4) BinaryExpression -> Expression . PLUS Expression
    (5) BinaryExpression -> Expression . MINUS Expression
    (6) BinaryExpression -> Expression . TIMES Expression
    (7) BinaryExpression -> Expression . DIVIDE Expression
    (8) BinaryExpression -> Expression . MOD Expression
    (9) BinaryExpression -> Expression . LEQ Expression
    (10) BinaryExpression -> Expression . GEQ Expression
    (11) BinaryExpression -> Expression . LT Expression
    (12) BinaryExpression -> Expression . GT Expression
    (13) BinaryExpression -> Expression . EQ Expression
    (14) BinaryExpression -> Expression . NE Expression
    (48) ParenthesesCallExpression -> Expression . LPAREN ExpressionList RPAREN
    (19) BracketCallExpression -> Expression . LBRACKET Expression RBRACKET
    (28) DotExpression -> Expression . DOT Expression
    (27) DereferenceExpression -> Expression . DEREF
    (2) AngleCallExpression -> Expression . LANGLE ExpressionList RANGLE

    ARROW           reduce using rule 9 (BinaryExpression -> Expression LEQ Expression .)
    PLUS            reduce using rule 9 (BinaryExpression -> Expression LEQ Expression .)
    MINUS           reduce using rule 9 (BinaryExpression -> Expression LEQ Expression .)
    TIMES           reduce using rule 9 (BinaryExpression -> Expression LEQ Expression .)
    DIVIDE          reduce using rule 9 (BinaryExpression -> Expression LEQ Expression .)
    MOD             reduce using rule 9 (BinaryExpression -> Expression LEQ Expression .)
    LEQ             reduce using rule 9 (BinaryExpression -> Expression LEQ Expression .)
    GEQ             reduce using rule 9 (BinaryExpression -> Expression LEQ Expression .)
    LT              reduce using rule 9 (BinaryExpression -> Expression LEQ Expression .)
    GT              reduce using rule 9 (BinaryExpression -> Expression LEQ Expression .)
    EQ              reduce using rule 9 (BinaryExpression -> Expression LEQ Expression .)
    NE              reduce using rule 9 (BinaryExpression -> Expression LEQ Expression .)
    LPAREN          reduce using rule 9 (BinaryExpression -> Expression LEQ Expression .)
    LBRACKET        reduce using rule 9 (BinaryExpression -> Expression LEQ Expression .)
    DOT             reduce using rule 9 (BinaryExpression -> Expression LEQ Expression .)
    DEREF           reduce using rule 9 (BinaryExpression -> Expression LEQ Expression .)
    LANGLE          reduce using rule 9 (BinaryExpression -> Expression LEQ Expression .)
    LBRACE          reduce using rule 9 (BinaryExpression -> Expression LEQ Expression .)
    RPAREN          reduce using rule 9 (BinaryExpression -> Expression LEQ Expression .)
    COMMA           reduce using rule 9 (BinaryExpression -> Expression LEQ Expression .)
    RBRACKET        reduce using rule 9 (BinaryExpression -> Expression LEQ Expression .)
    RANGLE          reduce using rule 9 (BinaryExpression -> Expression LEQ Expression .)
    ASSIGNMENT      reduce using rule 9 (BinaryExpression -> Expression LEQ Expression .)
    SEMICOLON       reduce using rule 9 (BinaryExpression -> Expression LEQ Expression .)
    ID              reduce using rule 9 (BinaryExpression -> Expression LEQ Expression .)
    ADDRESS         reduce using rule 9 (BinaryExpression -> Expression LEQ Expression .)
    INTL            reduce using rule 9 (BinaryExpression -> Expression LEQ Expression .)
    BOOLL           reduce using rule 9 (BinaryExpression -> Expression LEQ Expression .)

  ! PLUS            [ shift and go to state 33 ]
  ! MINUS           [ shift and go to state 34 ]
  ! TIMES           [ shift and go to state 35 ]
  ! DIVIDE          [ shift and go to state 36 ]
  ! MOD             [ shift and go to state 37 ]
  ! LEQ             [ shift and go to state 38 ]
  ! GEQ             [ shift and go to state 39 ]
  ! LT              [ shift and go to state 40 ]
  ! GT              [ shift and go to state 41 ]
  ! EQ              [ shift and go to state 42 ]
  ! NE              [ shift and go to state 43 ]
  ! LPAREN          [ shift and go to state 44 ]
  ! LBRACKET        [ shift and go to state 45 ]
  ! DOT             [ shift and go to state 46 ]
  ! DEREF           [ shift and go to state 47 ]
  ! LANGLE          [ shift and go to state 48 ]


state 61

    (10) BinaryExpression -> Expression GEQ Expression .
    (4) BinaryExpression -> Expression . PLUS Expression
    (5) BinaryExpression -> Expression . MINUS Expression
    (6) BinaryExpression -> Expression . TIMES Expression
    (7) BinaryExpression -> Expression . DIVIDE Expression
    (8) BinaryExpression -> Expression . MOD Expression
    (9) BinaryExpression -> Expression . LEQ Expression
    (10) BinaryExpression -> Expression . GEQ Expression
    (11) BinaryExpression -> Expression . LT Expression
    (12) BinaryExpression -> Expression . GT Expression
    (13) BinaryExpression -> Expression . EQ Expression
    (14) BinaryExpression -> Expression . NE Expression
    (48) ParenthesesCallExpression -> Expression . LPAREN ExpressionList RPAREN
    (19) BracketCallExpression -> Expression . LBRACKET Expression RBRACKET
    (28) DotExpression -> Expression . DOT Expression
    (27) DereferenceExpression -> Expression . DEREF
    (2) AngleCallExpression -> Expression . LANGLE ExpressionList RANGLE

    ARROW           reduce using rule 10 (BinaryExpression -> Expression GEQ Expression .)
    PLUS            reduce using rule 10 (BinaryExpression -> Expression GEQ Expression .)
    MINUS           reduce using rule 10 (BinaryExpression -> Expression GEQ Expression .)
    TIMES           reduce using rule 10 (BinaryExpression -> Expression GEQ Expression .)
    DIVIDE          reduce using rule 10 (BinaryExpression -> Expression GEQ Expression .)
    MOD             reduce using rule 10 (BinaryExpression -> Expression GEQ Expression .)
    LEQ             reduce using rule 10 (BinaryExpression -> Expression GEQ Expression .)
    GEQ             reduce using rule 10 (BinaryExpression -> Expression GEQ Expression .)
    LT              reduce using rule 10 (BinaryExpression -> Expression GEQ Expression .)
    GT              reduce using rule 10 (BinaryExpression -> Expression GEQ Expression .)
    EQ              reduce using rule 10 (BinaryExpression -> Expression GEQ Expression .)
    NE              reduce using rule 10 (BinaryExpression -> Expression GEQ Expression .)
    LPAREN          reduce using rule 10 (BinaryExpression -> Expression GEQ Expression .)
    LBRACKET        reduce using rule 10 (BinaryExpression -> Expression GEQ Expression .)
    DOT             reduce using rule 10 (BinaryExpression -> Expression GEQ Expression .)
    DEREF           reduce using rule 10 (BinaryExpression -> Expression GEQ Expression .)
    LANGLE          reduce using rule 10 (BinaryExpression -> Expression GEQ Expression .)
    LBRACE          reduce using rule 10 (BinaryExpression -> Expression GEQ Expression .)
    RPAREN          reduce using rule 10 (BinaryExpression -> Expression GEQ Expression .)
    COMMA           reduce using rule 10 (BinaryExpression -> Expression GEQ Expression .)
    RBRACKET        reduce using rule 10 (BinaryExpression -> Expression GEQ Expression .)
    RANGLE          reduce using rule 10 (BinaryExpression -> Expression GEQ Expression .)
    ASSIGNMENT      reduce using rule 10 (BinaryExpression -> Expression GEQ Expression .)
    SEMICOLON       reduce using rule 10 (BinaryExpression -> Expression GEQ Expression .)
    ID              reduce using rule 10 (BinaryExpression -> Expression GEQ Expression .)
    ADDRESS         reduce using rule 10 (BinaryExpression -> Expression GEQ Expression .)
    INTL            reduce using rule 10 (BinaryExpression -> Expression GEQ Expression .)
    BOOLL           reduce using rule 10 (BinaryExpression -> Expression GEQ Expression .)

  ! PLUS            [ shift and go to state 33 ]
  ! MINUS           [ shift and go to state 34 ]
  ! TIMES           [ shift and go to state 35 ]
  ! DIVIDE          [ shift and go to state 36 ]
  ! MOD             [ shift and go to state 37 ]
  ! LEQ             [ shift and go to state 38 ]
  ! GEQ             [ shift and go to state 39 ]
  ! LT              [ shift and go to state 40 ]
  ! GT              [ shift and go to state 41 ]
  ! EQ              [ shift and go to state 42 ]
  ! NE              [ shift and go to state 43 ]
  ! LPAREN          [ shift and go to state 44 ]
  ! LBRACKET        [ shift and go to state 45 ]
  ! DOT             [ shift and go to state 46 ]
  ! DEREF           [ shift and go to state 47 ]
  ! LANGLE          [ shift and go to state 48 ]


state 62

    (11) BinaryExpression -> Expression LT Expression .
    (4) BinaryExpression -> Expression . PLUS Expression
    (5) BinaryExpression -> Expression . MINUS Expression
    (6) BinaryExpression -> Expression . TIMES Expression
    (7) BinaryExpression -> Expression . DIVIDE Expression
    (8) BinaryExpression -> Expression . MOD Expression
    (9) BinaryExpression -> Expression . LEQ Expression
    (10) BinaryExpression -> Expression . GEQ Expression
    (11) BinaryExpression -> Expression . LT Expression
    (12) BinaryExpression -> Expression . GT Expression
    (13) BinaryExpression -> Expression . EQ Expression
    (14) BinaryExpression -> Expression . NE Expression
    (48) ParenthesesCallExpression -> Expression . LPAREN ExpressionList RPAREN
    (19) BracketCallExpression -> Expression . LBRACKET Expression RBRACKET
    (28) DotExpression -> Expression . DOT Expression
    (27) DereferenceExpression -> Expression . DEREF
    (2) AngleCallExpression -> Expression . LANGLE ExpressionList RANGLE

    ARROW           reduce using rule 11 (BinaryExpression -> Expression LT Expression .)
    PLUS            reduce using rule 11 (BinaryExpression -> Expression LT Expression .)
    MINUS           reduce using rule 11 (BinaryExpression -> Expression LT Expression .)
    TIMES           reduce using rule 11 (BinaryExpression -> Expression LT Expression .)
    DIVIDE          reduce using rule 11 (BinaryExpression -> Expression LT Expression .)
    MOD             reduce using rule 11 (BinaryExpression -> Expression LT Expression .)
    LEQ             reduce using rule 11 (BinaryExpression -> Expression LT Expression .)
    GEQ             reduce using rule 11 (BinaryExpression -> Expression LT Expression .)
    LT              reduce using rule 11 (BinaryExpression -> Expression LT Expression .)
    GT              reduce using rule 11 (BinaryExpression -> Expression LT Expression .)
    EQ              reduce using rule 11 (BinaryExpression -> Expression LT Expression .)
    NE              reduce using rule 11 (BinaryExpression -> Expression LT Expression .)
    LPAREN          reduce using rule 11 (BinaryExpression -> Expression LT Expression .)
    LBRACKET        reduce using rule 11 (BinaryExpression -> Expression LT Expression .)
    DOT             reduce using rule 11 (BinaryExpression -> Expression LT Expression .)
    DEREF           reduce using rule 11 (BinaryExpression -> Expression LT Expression .)
    LANGLE          reduce using rule 11 (BinaryExpression -> Expression LT Expression .)
    LBRACE          reduce using rule 11 (BinaryExpression -> Expression LT Expression .)
    RPAREN          reduce using rule 11 (BinaryExpression -> Expression LT Expression .)
    COMMA           reduce using rule 11 (BinaryExpression -> Expression LT Expression .)
    RBRACKET        reduce using rule 11 (BinaryExpression -> Expression LT Expression .)
    RANGLE          reduce using rule 11 (BinaryExpression -> Expression LT Expression .)
    ASSIGNMENT      reduce using rule 11 (BinaryExpression -> Expression LT Expression .)
    SEMICOLON       reduce using rule 11 (BinaryExpression -> Expression LT Expression .)
    ID              reduce using rule 11 (BinaryExpression -> Expression LT Expression .)
    ADDRESS         reduce using rule 11 (BinaryExpression -> Expression LT Expression .)
    INTL            reduce using rule 11 (BinaryExpression -> Expression LT Expression .)
    BOOLL           reduce using rule 11 (BinaryExpression -> Expression LT Expression .)

  ! PLUS            [ shift and go to state 33 ]
  ! MINUS           [ shift and go to state 34 ]
  ! TIMES           [ shift and go to state 35 ]
  ! DIVIDE          [ shift and go to state 36 ]
  ! MOD             [ shift and go to state 37 ]
  ! LEQ             [ shift and go to state 38 ]
  ! GEQ             [ shift and go to state 39 ]
  ! LT              [ shift and go to state 40 ]
  ! GT              [ shift and go to state 41 ]
  ! EQ              [ shift and go to state 42 ]
  ! NE              [ shift and go to state 43 ]
  ! LPAREN          [ shift and go to state 44 ]
  ! LBRACKET        [ shift and go to state 45 ]
  ! DOT             [ shift and go to state 46 ]
  ! DEREF           [ shift and go to state 47 ]
  ! LANGLE          [ shift and go to state 48 ]


state 63

    (12) BinaryExpression -> Expression GT Expression .
    (4) BinaryExpression -> Expression . PLUS Expression
    (5) BinaryExpression -> Expression . MINUS Expression
    (6) BinaryExpression -> Expression . TIMES Expression
    (7) BinaryExpression -> Expression . DIVIDE Expression
    (8) BinaryExpression -> Expression . MOD Expression
    (9) BinaryExpression -> Expression . LEQ Expression
    (10) BinaryExpression -> Expression . GEQ Expression
    (11) BinaryExpression -> Expression . LT Expression
    (12) BinaryExpression -> Expression . GT Expression
    (13) BinaryExpression -> Expression . EQ Expression
    (14) BinaryExpression -> Expression . NE Expression
    (48) ParenthesesCallExpression -> Expression . LPAREN ExpressionList RPAREN
    (19) BracketCallExpression -> Expression . LBRACKET Expression RBRACKET
    (28) DotExpression -> Expression . DOT Expression
    (27) DereferenceExpression -> Expression . DEREF
    (2) AngleCallExpression -> Expression . LANGLE ExpressionList RANGLE

    ARROW           reduce using rule 12 (BinaryExpression -> Expression GT Expression .)
    PLUS            reduce using rule 12 (BinaryExpression -> Expression GT Expression .)
    MINUS           reduce using rule 12 (BinaryExpression -> Expression GT Expression .)
    TIMES           reduce using rule 12 (BinaryExpression -> Expression GT Expression .)
    DIVIDE          reduce using rule 12 (BinaryExpression -> Expression GT Expression .)
    MOD             reduce using rule 12 (BinaryExpression -> Expression GT Expression .)
    LEQ             reduce using rule 12 (BinaryExpression -> Expression GT Expression .)
    GEQ             reduce using rule 12 (BinaryExpression -> Expression GT Expression .)
    LT              reduce using rule 12 (BinaryExpression -> Expression GT Expression .)
    GT              reduce using rule 12 (BinaryExpression -> Expression GT Expression .)
    EQ              reduce using rule 12 (BinaryExpression -> Expression GT Expression .)
    NE              reduce using rule 12 (BinaryExpression -> Expression GT Expression .)
    LPAREN          reduce using rule 12 (BinaryExpression -> Expression GT Expression .)
    LBRACKET        reduce using rule 12 (BinaryExpression -> Expression GT Expression .)
    DOT             reduce using rule 12 (BinaryExpression -> Expression GT Expression .)
    DEREF           reduce using rule 12 (BinaryExpression -> Expression GT Expression .)
    LANGLE          reduce using rule 12 (BinaryExpression -> Expression GT Expression .)
    LBRACE          reduce using rule 12 (BinaryExpression -> Expression GT Expression .)
    RPAREN          reduce using rule 12 (BinaryExpression -> Expression GT Expression .)
    COMMA           reduce using rule 12 (BinaryExpression -> Expression GT Expression .)
    RBRACKET        reduce using rule 12 (BinaryExpression -> Expression GT Expression .)
    RANGLE          reduce using rule 12 (BinaryExpression -> Expression GT Expression .)
    ASSIGNMENT      reduce using rule 12 (BinaryExpression -> Expression GT Expression .)
    SEMICOLON       reduce using rule 12 (BinaryExpression -> Expression GT Expression .)
    ID              reduce using rule 12 (BinaryExpression -> Expression GT Expression .)
    ADDRESS         reduce using rule 12 (BinaryExpression -> Expression GT Expression .)
    INTL            reduce using rule 12 (BinaryExpression -> Expression GT Expression .)
    BOOLL           reduce using rule 12 (BinaryExpression -> Expression GT Expression .)

  ! PLUS            [ shift and go to state 33 ]
  ! MINUS           [ shift and go to state 34 ]
  ! TIMES           [ shift and go to state 35 ]
  ! DIVIDE          [ shift and go to state 36 ]
  ! MOD             [ shift and go to state 37 ]
  ! LEQ             [ shift and go to state 38 ]
  ! GEQ             [ shift and go to state 39 ]
  ! LT              [ shift and go to state 40 ]
  ! GT              [ shift and go to state 41 ]
  ! EQ              [ shift and go to state 42 ]
  ! NE              [ shift and go to state 43 ]
  ! LPAREN          [ shift and go to state 44 ]
  ! LBRACKET        [ shift and go to state 45 ]
  ! DOT             [ shift and go to state 46 ]
  ! DEREF           [ shift and go to state 47 ]
  ! LANGLE          [ shift and go to state 48 ]


state 64

    (13) BinaryExpression -> Expression EQ Expression .
    (4) BinaryExpression -> Expression . PLUS Expression
    (5) BinaryExpression -> Expression . MINUS Expression
    (6) BinaryExpression -> Expression . TIMES Expression
    (7) BinaryExpression -> Expression . DIVIDE Expression
    (8) BinaryExpression -> Expression . MOD Expression
    (9) BinaryExpression -> Expression . LEQ Expression
    (10) BinaryExpression -> Expression . GEQ Expression
    (11) BinaryExpression -> Expression . LT Expression
    (12) BinaryExpression -> Expression . GT Expression
    (13) BinaryExpression -> Expression . EQ Expression
    (14) BinaryExpression -> Expression . NE Expression
    (48) ParenthesesCallExpression -> Expression . LPAREN ExpressionList RPAREN
    (19) BracketCallExpression -> Expression . LBRACKET Expression RBRACKET
    (28) DotExpression -> Expression . DOT Expression
    (27) DereferenceExpression -> Expression . DEREF
    (2) AngleCallExpression -> Expression . LANGLE ExpressionList RANGLE

    ARROW           reduce using rule 13 (BinaryExpression -> Expression EQ Expression .)
    PLUS            reduce using rule 13 (BinaryExpression -> Expression EQ Expression .)
    MINUS           reduce using rule 13 (BinaryExpression -> Expression EQ Expression .)
    TIMES           reduce using rule 13 (BinaryExpression -> Expression EQ Expression .)
    DIVIDE          reduce using rule 13 (BinaryExpression -> Expression EQ Expression .)
    MOD             reduce using rule 13 (BinaryExpression -> Expression EQ Expression .)
    LEQ             reduce using rule 13 (BinaryExpression -> Expression EQ Expression .)
    GEQ             reduce using rule 13 (BinaryExpression -> Expression EQ Expression .)
    LT              reduce using rule 13 (BinaryExpression -> Expression EQ Expression .)
    GT              reduce using rule 13 (BinaryExpression -> Expression EQ Expression .)
    EQ              reduce using rule 13 (BinaryExpression -> Expression EQ Expression .)
    NE              reduce using rule 13 (BinaryExpression -> Expression EQ Expression .)
    LPAREN          reduce using rule 13 (BinaryExpression -> Expression EQ Expression .)
    LBRACKET        reduce using rule 13 (BinaryExpression -> Expression EQ Expression .)
    DOT             reduce using rule 13 (BinaryExpression -> Expression EQ Expression .)
    DEREF           reduce using rule 13 (BinaryExpression -> Expression EQ Expression .)
    LANGLE          reduce using rule 13 (BinaryExpression -> Expression EQ Expression .)
    LBRACE          reduce using rule 13 (BinaryExpression -> Expression EQ Expression .)
    RPAREN          reduce using rule 13 (BinaryExpression -> Expression EQ Expression .)
    COMMA           reduce using rule 13 (BinaryExpression -> Expression EQ Expression .)
    RBRACKET        reduce using rule 13 (BinaryExpression -> Expression EQ Expression .)
    RANGLE          reduce using rule 13 (BinaryExpression -> Expression EQ Expression .)
    ASSIGNMENT      reduce using rule 13 (BinaryExpression -> Expression EQ Expression .)
    SEMICOLON       reduce using rule 13 (BinaryExpression -> Expression EQ Expression .)
    ID              reduce using rule 13 (BinaryExpression -> Expression EQ Expression .)
    ADDRESS         reduce using rule 13 (BinaryExpression -> Expression EQ Expression .)
    INTL            reduce using rule 13 (BinaryExpression -> Expression EQ Expression .)
    BOOLL           reduce using rule 13 (BinaryExpression -> Expression EQ Expression .)

  ! PLUS            [ shift and go to state 33 ]
  ! MINUS           [ shift and go to state 34 ]
  ! TIMES           [ shift and go to state 35 ]
  ! DIVIDE          [ shift and go to state 36 ]
  ! MOD             [ shift and go to state 37 ]
  ! LEQ             [ shift and go to state 38 ]
  ! GEQ             [ shift and go to state 39 ]
  ! LT              [ shift and go to state 40 ]
  ! GT              [ shift and go to state 41 ]
  ! EQ              [ shift and go to state 42 ]
  ! NE              [ shift and go to state 43 ]
  ! LPAREN          [ shift and go to state 44 ]
  ! LBRACKET        [ shift and go to state 45 ]
  ! DOT             [ shift and go to state 46 ]
  ! DEREF           [ shift and go to state 47 ]
  ! LANGLE          [ shift and go to state 48 ]


state 65

    (14) BinaryExpression -> Expression NE Expression .
    (4) BinaryExpression -> Expression . PLUS Expression
    (5) BinaryExpression -> Expression . MINUS Expression
    (6) BinaryExpression -> Expression . TIMES Expression
    (7) BinaryExpression -> Expression . DIVIDE Expression
    (8) BinaryExpression -> Expression . MOD Expression
    (9) BinaryExpression -> Expression . LEQ Expression
    (10) BinaryExpression -> Expression . GEQ Expression
    (11) BinaryExpression -> Expression . LT Expression
    (12) BinaryExpression -> Expression . GT Expression
    (13) BinaryExpression -> Expression . EQ Expression
    (14) BinaryExpression -> Expression . NE Expression
    (48) ParenthesesCallExpression -> Expression . LPAREN ExpressionList RPAREN
    (19) BracketCallExpression -> Expression . LBRACKET Expression RBRACKET
    (28) DotExpression -> Expression . DOT Expression
    (27) DereferenceExpression -> Expression . DEREF
    (2) AngleCallExpression -> Expression . LANGLE ExpressionList RANGLE

    ARROW           reduce using rule 14 (BinaryExpression -> Expression NE Expression .)
    PLUS            reduce using rule 14 (BinaryExpression -> Expression NE Expression .)
    MINUS           reduce using rule 14 (BinaryExpression -> Expression NE Expression .)
    TIMES           reduce using rule 14 (BinaryExpression -> Expression NE Expression .)
    DIVIDE          reduce using rule 14 (BinaryExpression -> Expression NE Expression .)
    MOD             reduce using rule 14 (BinaryExpression -> Expression NE Expression .)
    LEQ             reduce using rule 14 (BinaryExpression -> Expression NE Expression .)
    GEQ             reduce using rule 14 (BinaryExpression -> Expression NE Expression .)
    LT              reduce using rule 14 (BinaryExpression -> Expression NE Expression .)
    GT              reduce using rule 14 (BinaryExpression -> Expression NE Expression .)
    EQ              reduce using rule 14 (BinaryExpression -> Expression NE Expression .)
    NE              reduce using rule 14 (BinaryExpression -> Expression NE Expression .)
    LPAREN          reduce using rule 14 (BinaryExpression -> Expression NE Expression .)
    LBRACKET        reduce using rule 14 (BinaryExpression -> Expression NE Expression .)
    DOT             reduce using rule 14 (BinaryExpression -> Expression NE Expression .)
    DEREF           reduce using rule 14 (BinaryExpression -> Expression NE Expression .)
    LANGLE          reduce using rule 14 (BinaryExpression -> Expression NE Expression .)
    LBRACE          reduce using rule 14 (BinaryExpression -> Expression NE Expression .)
    RPAREN          reduce using rule 14 (BinaryExpression -> Expression NE Expression .)
    COMMA           reduce using rule 14 (BinaryExpression -> Expression NE Expression .)
    RBRACKET        reduce using rule 14 (BinaryExpression -> Expression NE Expression .)
    RANGLE          reduce using rule 14 (BinaryExpression -> Expression NE Expression .)
    ASSIGNMENT      reduce using rule 14 (BinaryExpression -> Expression NE Expression .)
    SEMICOLON       reduce using rule 14 (BinaryExpression -> Expression NE Expression .)
    ID              reduce using rule 14 (BinaryExpression -> Expression NE Expression .)
    ADDRESS         reduce using rule 14 (BinaryExpression -> Expression NE Expression .)
    INTL            reduce using rule 14 (BinaryExpression -> Expression NE Expression .)
    BOOLL           reduce using rule 14 (BinaryExpression -> Expression NE Expression .)

  ! PLUS            [ shift and go to state 33 ]
  ! MINUS           [ shift and go to state 34 ]
  ! TIMES           [ shift and go to state 35 ]
  ! DIVIDE          [ shift and go to state 36 ]
  ! MOD             [ shift and go to state 37 ]
  ! LEQ             [ shift and go to state 38 ]
  ! GEQ             [ shift and go to state 39 ]
  ! LT              [ shift and go to state 40 ]
  ! GT              [ shift and go to state 41 ]
  ! EQ              [ shift and go to state 42 ]
  ! NE              [ shift and go to state 43 ]
  ! LPAREN          [ shift and go to state 44 ]
  ! LBRACKET        [ shift and go to state 45 ]
  ! DOT             [ shift and go to state 46 ]
  ! DEREF           [ shift and go to state 47 ]
  ! LANGLE          [ shift and go to state 48 ]


state 66

    (33) ExpressionList -> Expression . COMMA ExpressionList
    (34) ExpressionList -> Expression .
    (4) BinaryExpression -> Expression . PLUS Expression
    (5) BinaryExpression -> Expression . MINUS Expression
    (6) BinaryExpression -> Expression . TIMES Expression
    (7) BinaryExpression -> Expression . DIVIDE Expression
    (8) BinaryExpression -> Expression . MOD Expression
    (9) BinaryExpression -> Expression . LEQ Expression
    (10) BinaryExpression -> Expression . GEQ Expression
    (11) BinaryExpression -> Expression . LT Expression
    (12) BinaryExpression -> Expression . GT Expression
    (13) BinaryExpression -> Expression . EQ Expression
    (14) BinaryExpression -> Expression . NE Expression
    (48) ParenthesesCallExpression -> Expression . LPAREN ExpressionList RPAREN
    (19) BracketCallExpression -> Expression . LBRACKET Expression RBRACKET
    (28) DotExpression -> Expression . DOT Expression
    (27) DereferenceExpression -> Expression . DEREF
    (2) AngleCallExpression -> Expression . LANGLE ExpressionList RANGLE

    COMMA           shift and go to state 98
    RPAREN          reduce using rule 34 (ExpressionList -> Expression .)
    RANGLE          reduce using rule 34 (ExpressionList -> Expression .)
    PLUS            shift and go to state 33
    MINUS           shift and go to state 34
    TIMES           shift and go to state 35
    DIVIDE          shift and go to state 36
    MOD             shift and go to state 37
    LEQ             shift and go to state 38
    GEQ             shift and go to state 39
    LT              shift and go to state 40
    GT              shift and go to state 41
    EQ              shift and go to state 42
    NE              shift and go to state 43
    LPAREN          shift and go to state 44
    LBRACKET        shift and go to state 45
    DOT             shift and go to state 46
    DEREF           shift and go to state 47
    LANGLE          shift and go to state 48


state 67

    (48) ParenthesesCallExpression -> Expression LPAREN ExpressionList . RPAREN

    RPAREN          shift and go to state 99


state 68

    (35) ExpressionList -> empty .

    RPAREN          reduce using rule 35 (ExpressionList -> empty .)
    RANGLE          reduce using rule 35 (ExpressionList -> empty .)


state 69

    (19) BracketCallExpression -> Expression LBRACKET Expression . RBRACKET
    (4) BinaryExpression -> Expression . PLUS Expression
    (5) BinaryExpression -> Expression . MINUS Expression
    (6) BinaryExpression -> Expression . TIMES Expression
    (7) BinaryExpression -> Expression . DIVIDE Expression
    (8) BinaryExpression -> Expression . MOD Expression
    (9) BinaryExpression -> Expression . LEQ Expression
    (10) BinaryExpression -> Expression . GEQ Expression
    (11) BinaryExpression -> Expression . LT Expression
    (12) BinaryExpression -> Expression . GT Expression
    (13) BinaryExpression -> Expression . EQ Expression
    (14) BinaryExpression -> Expression . NE Expression
    (48) ParenthesesCallExpression -> Expression . LPAREN ExpressionList RPAREN
    (19) BracketCallExpression -> Expression . LBRACKET Expression RBRACKET
    (28) DotExpression -> Expression . DOT Expression
    (27) DereferenceExpression -> Expression . DEREF
    (2) AngleCallExpression -> Expression . LANGLE ExpressionList RANGLE

    RBRACKET        shift and go to state 100
    PLUS            shift and go to state 33
    MINUS           shift and go to state 34
    TIMES           shift and go to state 35
    DIVIDE          shift and go to state 36
    MOD             shift and go to state 37
    LEQ             shift and go to state 38
    GEQ             shift and go to state 39
    LT              shift and go to state 40
    GT              shift and go to state 41
    EQ              shift and go to state 42
    NE              shift and go to state 43
    LPAREN          shift and go to state 44
    LBRACKET        shift and go to state 45
    DOT             shift and go to state 46
    DEREF           shift and go to state 47
    LANGLE          shift and go to state 48


state 70

    (28) DotExpression -> Expression DOT Expression .
    (4) BinaryExpression -> Expression . PLUS Expression
    (5) BinaryExpression -> Expression . MINUS Expression
    (6) BinaryExpression -> Expression . TIMES Expression
    (7) BinaryExpression -> Expression . DIVIDE Expression
    (8) BinaryExpression -> Expression . MOD Expression
    (9) BinaryExpression -> Expression . LEQ Expression
    (10) BinaryExpression -> Expression . GEQ Expression
    (11) BinaryExpression -> Expression . LT Expression
    (12) BinaryExpression -> Expression . GT Expression
    (13) BinaryExpression -> Expression . EQ Expression
    (14) BinaryExpression -> Expression . NE Expression
    (48) ParenthesesCallExpression -> Expression . LPAREN ExpressionList RPAREN
    (19) BracketCallExpression -> Expression . LBRACKET Expression RBRACKET
    (28) DotExpression -> Expression . DOT Expression
    (27) DereferenceExpression -> Expression . DEREF
    (2) AngleCallExpression -> Expression . LANGLE ExpressionList RANGLE

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for LEQ resolved as shift
  ! shift/reduce conflict for GEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for DEREF resolved as shift
  ! shift/reduce conflict for LANGLE resolved as shift
    ARROW           reduce using rule 28 (DotExpression -> Expression DOT Expression .)
    LBRACE          reduce using rule 28 (DotExpression -> Expression DOT Expression .)
    RPAREN          reduce using rule 28 (DotExpression -> Expression DOT Expression .)
    COMMA           reduce using rule 28 (DotExpression -> Expression DOT Expression .)
    RBRACKET        reduce using rule 28 (DotExpression -> Expression DOT Expression .)
    RANGLE          reduce using rule 28 (DotExpression -> Expression DOT Expression .)
    ASSIGNMENT      reduce using rule 28 (DotExpression -> Expression DOT Expression .)
    SEMICOLON       reduce using rule 28 (DotExpression -> Expression DOT Expression .)
    ID              reduce using rule 28 (DotExpression -> Expression DOT Expression .)
    ADDRESS         reduce using rule 28 (DotExpression -> Expression DOT Expression .)
    INTL            reduce using rule 28 (DotExpression -> Expression DOT Expression .)
    BOOLL           reduce using rule 28 (DotExpression -> Expression DOT Expression .)
    PLUS            shift and go to state 33
    MINUS           shift and go to state 34
    TIMES           shift and go to state 35
    DIVIDE          shift and go to state 36
    MOD             shift and go to state 37
    LEQ             shift and go to state 38
    GEQ             shift and go to state 39
    LT              shift and go to state 40
    GT              shift and go to state 41
    EQ              shift and go to state 42
    NE              shift and go to state 43
    LPAREN          shift and go to state 44
    LBRACKET        shift and go to state 45
    DOT             shift and go to state 46
    DEREF           shift and go to state 47
    LANGLE          shift and go to state 48

  ! PLUS            [ reduce using rule 28 (DotExpression -> Expression DOT Expression .) ]
  ! MINUS           [ reduce using rule 28 (DotExpression -> Expression DOT Expression .) ]
  ! TIMES           [ reduce using rule 28 (DotExpression -> Expression DOT Expression .) ]
  ! DIVIDE          [ reduce using rule 28 (DotExpression -> Expression DOT Expression .) ]
  ! MOD             [ reduce using rule 28 (DotExpression -> Expression DOT Expression .) ]
  ! LEQ             [ reduce using rule 28 (DotExpression -> Expression DOT Expression .) ]
  ! GEQ             [ reduce using rule 28 (DotExpression -> Expression DOT Expression .) ]
  ! LT              [ reduce using rule 28 (DotExpression -> Expression DOT Expression .) ]
  ! GT              [ reduce using rule 28 (DotExpression -> Expression DOT Expression .) ]
  ! EQ              [ reduce using rule 28 (DotExpression -> Expression DOT Expression .) ]
  ! NE              [ reduce using rule 28 (DotExpression -> Expression DOT Expression .) ]
  ! LPAREN          [ reduce using rule 28 (DotExpression -> Expression DOT Expression .) ]
  ! LBRACKET        [ reduce using rule 28 (DotExpression -> Expression DOT Expression .) ]
  ! DOT             [ reduce using rule 28 (DotExpression -> Expression DOT Expression .) ]
  ! DEREF           [ reduce using rule 28 (DotExpression -> Expression DOT Expression .) ]
  ! LANGLE          [ reduce using rule 28 (DotExpression -> Expression DOT Expression .) ]


state 71

    (2) AngleCallExpression -> Expression LANGLE ExpressionList . RANGLE

    RANGLE          shift and go to state 101


state 72

    (16) Block -> LBRACE StatementList . RBRACE

    RBRACE          shift and go to state 102


state 73

    (64) StatementList -> Statement . StatementList
    (65) StatementList -> Statement .
    (64) StatementList -> . Statement StatementList
    (65) StatementList -> . Statement
    (52) Statement -> . AssignmentStatement
    (53) Statement -> . InitStatement
    (54) Statement -> . ExpressionStatement
    (55) Statement -> . IfElseStatement
    (56) Statement -> . ForStatement
    (57) Statement -> . WhileStatement
    (58) Statement -> . BreakStatement
    (59) Statement -> . ReturnStatement
    (60) Statement -> . BlockStatement
    (61) Statement -> . BlankStatement
    (62) Statement -> . TypeStatement
    (63) Statement -> . DeclarationStatement
    (3) AssignmentStatement -> . Expression ASSIGNMENT Expression SEMICOLON
    (44) InitStatement -> . LET Expression ASSIGNMENT Expression SEMICOLON
    (36) ExpressionStatement -> . Expression SEMICOLON
    (42) IfElseStatement -> . IF LPAREN Expression RPAREN Block ELSE Block
    (43) IfElseStatement -> . IF LPAREN Expression RPAREN Block
    (37) ForStatement -> . FOR LPAREN Statement Expression SEMICOLON Statement RPAREN Block
    (76) WhileStatement -> . WHILE LPAREN Expression RPAREN Block
    (20) BreakStatement -> . BREAK IntLiteral SEMICOLON
    (21) BreakStatement -> . BREAK SEMICOLON
    (50) ReturnStatement -> . RETURN Expression SEMICOLON
    (51) ReturnStatement -> . RETURN SEMICOLON
    (17) BlockStatement -> . Block
    (15) BlankStatement -> . SEMICOLON
    (67) TypeStatement -> . TYPE Expression ASSIGNMENT Expression SEMICOLON
    (23) DeclarationStatement -> . Expression Expression SEMICOLON
    (29) Expression -> . BinaryExpression
    (30) Expression -> . UnaryExpression
    (31) Expression -> . IdExpression
    (32) Expression -> . IdPairExpression
    (16) Block -> . LBRACE StatementList RBRACE
    (4) BinaryExpression -> . Expression PLUS Expression
    (5) BinaryExpression -> . Expression MINUS Expression
    (6) BinaryExpression -> . Expression TIMES Expression
    (7) BinaryExpression -> . Expression DIVIDE Expression
    (8) BinaryExpression -> . Expression MOD Expression
    (9) BinaryExpression -> . Expression LEQ Expression
    (10) BinaryExpression -> . Expression GEQ Expression
    (11) BinaryExpression -> . Expression LT Expression
    (12) BinaryExpression -> . Expression GT Expression
    (13) BinaryExpression -> . Expression EQ Expression
    (14) BinaryExpression -> . Expression NE Expression
    (68) UnaryExpression -> . LiteralExpression
    (69) UnaryExpression -> . ParenthesesCallExpression
    (70) UnaryExpression -> . BracketCallExpression
    (71) UnaryExpression -> . DotExpression
    (72) UnaryExpression -> . ParenthesesExpression
    (73) UnaryExpression -> . DereferenceExpression
    (74) UnaryExpression -> . AddressExpression
    (75) UnaryExpression -> . AngleCallExpression
    (40) IdExpression -> . ID
    (41) IdPairExpression -> . ID ID
    (46) LiteralExpression -> . IntLiteral
    (47) LiteralExpression -> . BoolLiteral
    (48) ParenthesesCallExpression -> . Expression LPAREN ExpressionList RPAREN
    (19) BracketCallExpression -> . Expression LBRACKET Expression RBRACKET
    (28) DotExpression -> . Expression DOT Expression
    (49) ParenthesesExpression -> . LPAREN Expression RPAREN
    (27) DereferenceExpression -> . Expression DEREF
    (1) AddressExpression -> . ADDRESS Expression
    (2) AngleCallExpression -> . Expression LANGLE ExpressionList RANGLE
    (45) IntLiteral -> . INTL
    (18) BoolLiteral -> . BOOLL

    RBRACE          reduce using rule 65 (StatementList -> Statement .)
    LET             shift and go to state 88
    IF              shift and go to state 89
    FOR             shift and go to state 91
    WHILE           shift and go to state 92
    BREAK           shift and go to state 93
    RETURN          shift and go to state 94
    SEMICOLON       shift and go to state 87
    TYPE            shift and go to state 95
    LBRACE          shift and go to state 49
    ID              shift and go to state 23
    LPAREN          shift and go to state 26
    ADDRESS         shift and go to state 27
    INTL            shift and go to state 28
    BOOLL           shift and go to state 29

    Statement                      shift and go to state 73
    StatementList                  shift and go to state 103
    AssignmentStatement            shift and go to state 74
    InitStatement                  shift and go to state 75
    ExpressionStatement            shift and go to state 76
    IfElseStatement                shift and go to state 77
    ForStatement                   shift and go to state 78
    WhileStatement                 shift and go to state 79
    BreakStatement                 shift and go to state 80
    ReturnStatement                shift and go to state 81
    BlockStatement                 shift and go to state 82
    BlankStatement                 shift and go to state 83
    TypeStatement                  shift and go to state 84
    DeclarationStatement           shift and go to state 85
    Expression                     shift and go to state 86
    Block                          shift and go to state 90
    IntLiteral                     shift and go to state 24
    BinaryExpression               shift and go to state 11
    UnaryExpression                shift and go to state 12
    IdExpression                   shift and go to state 13
    IdPairExpression               shift and go to state 14
    LiteralExpression              shift and go to state 15
    ParenthesesCallExpression      shift and go to state 16
    BracketCallExpression          shift and go to state 17
    DotExpression                  shift and go to state 18
    ParenthesesExpression          shift and go to state 19
    DereferenceExpression          shift and go to state 20
    AddressExpression              shift and go to state 21
    AngleCallExpression            shift and go to state 22
    BoolLiteral                    shift and go to state 25

state 74

    (52) Statement -> AssignmentStatement .

    LET             reduce using rule 52 (Statement -> AssignmentStatement .)
    IF              reduce using rule 52 (Statement -> AssignmentStatement .)
    FOR             reduce using rule 52 (Statement -> AssignmentStatement .)
    WHILE           reduce using rule 52 (Statement -> AssignmentStatement .)
    BREAK           reduce using rule 52 (Statement -> AssignmentStatement .)
    RETURN          reduce using rule 52 (Statement -> AssignmentStatement .)
    SEMICOLON       reduce using rule 52 (Statement -> AssignmentStatement .)
    TYPE            reduce using rule 52 (Statement -> AssignmentStatement .)
    LBRACE          reduce using rule 52 (Statement -> AssignmentStatement .)
    ID              reduce using rule 52 (Statement -> AssignmentStatement .)
    LPAREN          reduce using rule 52 (Statement -> AssignmentStatement .)
    ADDRESS         reduce using rule 52 (Statement -> AssignmentStatement .)
    INTL            reduce using rule 52 (Statement -> AssignmentStatement .)
    BOOLL           reduce using rule 52 (Statement -> AssignmentStatement .)
    RBRACE          reduce using rule 52 (Statement -> AssignmentStatement .)
    RPAREN          reduce using rule 52 (Statement -> AssignmentStatement .)


state 75

    (53) Statement -> InitStatement .

    LET             reduce using rule 53 (Statement -> InitStatement .)
    IF              reduce using rule 53 (Statement -> InitStatement .)
    FOR             reduce using rule 53 (Statement -> InitStatement .)
    WHILE           reduce using rule 53 (Statement -> InitStatement .)
    BREAK           reduce using rule 53 (Statement -> InitStatement .)
    RETURN          reduce using rule 53 (Statement -> InitStatement .)
    SEMICOLON       reduce using rule 53 (Statement -> InitStatement .)
    TYPE            reduce using rule 53 (Statement -> InitStatement .)
    LBRACE          reduce using rule 53 (Statement -> InitStatement .)
    ID              reduce using rule 53 (Statement -> InitStatement .)
    LPAREN          reduce using rule 53 (Statement -> InitStatement .)
    ADDRESS         reduce using rule 53 (Statement -> InitStatement .)
    INTL            reduce using rule 53 (Statement -> InitStatement .)
    BOOLL           reduce using rule 53 (Statement -> InitStatement .)
    RBRACE          reduce using rule 53 (Statement -> InitStatement .)
    RPAREN          reduce using rule 53 (Statement -> InitStatement .)


state 76

    (54) Statement -> ExpressionStatement .

    LET             reduce using rule 54 (Statement -> ExpressionStatement .)
    IF              reduce using rule 54 (Statement -> ExpressionStatement .)
    FOR             reduce using rule 54 (Statement -> ExpressionStatement .)
    WHILE           reduce using rule 54 (Statement -> ExpressionStatement .)
    BREAK           reduce using rule 54 (Statement -> ExpressionStatement .)
    RETURN          reduce using rule 54 (Statement -> ExpressionStatement .)
    SEMICOLON       reduce using rule 54 (Statement -> ExpressionStatement .)
    TYPE            reduce using rule 54 (Statement -> ExpressionStatement .)
    LBRACE          reduce using rule 54 (Statement -> ExpressionStatement .)
    ID              reduce using rule 54 (Statement -> ExpressionStatement .)
    LPAREN          reduce using rule 54 (Statement -> ExpressionStatement .)
    ADDRESS         reduce using rule 54 (Statement -> ExpressionStatement .)
    INTL            reduce using rule 54 (Statement -> ExpressionStatement .)
    BOOLL           reduce using rule 54 (Statement -> ExpressionStatement .)
    RBRACE          reduce using rule 54 (Statement -> ExpressionStatement .)
    RPAREN          reduce using rule 54 (Statement -> ExpressionStatement .)


state 77

    (55) Statement -> IfElseStatement .

    LET             reduce using rule 55 (Statement -> IfElseStatement .)
    IF              reduce using rule 55 (Statement -> IfElseStatement .)
    FOR             reduce using rule 55 (Statement -> IfElseStatement .)
    WHILE           reduce using rule 55 (Statement -> IfElseStatement .)
    BREAK           reduce using rule 55 (Statement -> IfElseStatement .)
    RETURN          reduce using rule 55 (Statement -> IfElseStatement .)
    SEMICOLON       reduce using rule 55 (Statement -> IfElseStatement .)
    TYPE            reduce using rule 55 (Statement -> IfElseStatement .)
    LBRACE          reduce using rule 55 (Statement -> IfElseStatement .)
    ID              reduce using rule 55 (Statement -> IfElseStatement .)
    LPAREN          reduce using rule 55 (Statement -> IfElseStatement .)
    ADDRESS         reduce using rule 55 (Statement -> IfElseStatement .)
    INTL            reduce using rule 55 (Statement -> IfElseStatement .)
    BOOLL           reduce using rule 55 (Statement -> IfElseStatement .)
    RBRACE          reduce using rule 55 (Statement -> IfElseStatement .)
    RPAREN          reduce using rule 55 (Statement -> IfElseStatement .)


state 78

    (56) Statement -> ForStatement .

    LET             reduce using rule 56 (Statement -> ForStatement .)
    IF              reduce using rule 56 (Statement -> ForStatement .)
    FOR             reduce using rule 56 (Statement -> ForStatement .)
    WHILE           reduce using rule 56 (Statement -> ForStatement .)
    BREAK           reduce using rule 56 (Statement -> ForStatement .)
    RETURN          reduce using rule 56 (Statement -> ForStatement .)
    SEMICOLON       reduce using rule 56 (Statement -> ForStatement .)
    TYPE            reduce using rule 56 (Statement -> ForStatement .)
    LBRACE          reduce using rule 56 (Statement -> ForStatement .)
    ID              reduce using rule 56 (Statement -> ForStatement .)
    LPAREN          reduce using rule 56 (Statement -> ForStatement .)
    ADDRESS         reduce using rule 56 (Statement -> ForStatement .)
    INTL            reduce using rule 56 (Statement -> ForStatement .)
    BOOLL           reduce using rule 56 (Statement -> ForStatement .)
    RBRACE          reduce using rule 56 (Statement -> ForStatement .)
    RPAREN          reduce using rule 56 (Statement -> ForStatement .)


state 79

    (57) Statement -> WhileStatement .

    LET             reduce using rule 57 (Statement -> WhileStatement .)
    IF              reduce using rule 57 (Statement -> WhileStatement .)
    FOR             reduce using rule 57 (Statement -> WhileStatement .)
    WHILE           reduce using rule 57 (Statement -> WhileStatement .)
    BREAK           reduce using rule 57 (Statement -> WhileStatement .)
    RETURN          reduce using rule 57 (Statement -> WhileStatement .)
    SEMICOLON       reduce using rule 57 (Statement -> WhileStatement .)
    TYPE            reduce using rule 57 (Statement -> WhileStatement .)
    LBRACE          reduce using rule 57 (Statement -> WhileStatement .)
    ID              reduce using rule 57 (Statement -> WhileStatement .)
    LPAREN          reduce using rule 57 (Statement -> WhileStatement .)
    ADDRESS         reduce using rule 57 (Statement -> WhileStatement .)
    INTL            reduce using rule 57 (Statement -> WhileStatement .)
    BOOLL           reduce using rule 57 (Statement -> WhileStatement .)
    RBRACE          reduce using rule 57 (Statement -> WhileStatement .)
    RPAREN          reduce using rule 57 (Statement -> WhileStatement .)


state 80

    (58) Statement -> BreakStatement .

    LET             reduce using rule 58 (Statement -> BreakStatement .)
    IF              reduce using rule 58 (Statement -> BreakStatement .)
    FOR             reduce using rule 58 (Statement -> BreakStatement .)
    WHILE           reduce using rule 58 (Statement -> BreakStatement .)
    BREAK           reduce using rule 58 (Statement -> BreakStatement .)
    RETURN          reduce using rule 58 (Statement -> BreakStatement .)
    SEMICOLON       reduce using rule 58 (Statement -> BreakStatement .)
    TYPE            reduce using rule 58 (Statement -> BreakStatement .)
    LBRACE          reduce using rule 58 (Statement -> BreakStatement .)
    ID              reduce using rule 58 (Statement -> BreakStatement .)
    LPAREN          reduce using rule 58 (Statement -> BreakStatement .)
    ADDRESS         reduce using rule 58 (Statement -> BreakStatement .)
    INTL            reduce using rule 58 (Statement -> BreakStatement .)
    BOOLL           reduce using rule 58 (Statement -> BreakStatement .)
    RBRACE          reduce using rule 58 (Statement -> BreakStatement .)
    RPAREN          reduce using rule 58 (Statement -> BreakStatement .)


state 81

    (59) Statement -> ReturnStatement .

    LET             reduce using rule 59 (Statement -> ReturnStatement .)
    IF              reduce using rule 59 (Statement -> ReturnStatement .)
    FOR             reduce using rule 59 (Statement -> ReturnStatement .)
    WHILE           reduce using rule 59 (Statement -> ReturnStatement .)
    BREAK           reduce using rule 59 (Statement -> ReturnStatement .)
    RETURN          reduce using rule 59 (Statement -> ReturnStatement .)
    SEMICOLON       reduce using rule 59 (Statement -> ReturnStatement .)
    TYPE            reduce using rule 59 (Statement -> ReturnStatement .)
    LBRACE          reduce using rule 59 (Statement -> ReturnStatement .)
    ID              reduce using rule 59 (Statement -> ReturnStatement .)
    LPAREN          reduce using rule 59 (Statement -> ReturnStatement .)
    ADDRESS         reduce using rule 59 (Statement -> ReturnStatement .)
    INTL            reduce using rule 59 (Statement -> ReturnStatement .)
    BOOLL           reduce using rule 59 (Statement -> ReturnStatement .)
    RBRACE          reduce using rule 59 (Statement -> ReturnStatement .)
    RPAREN          reduce using rule 59 (Statement -> ReturnStatement .)


state 82

    (60) Statement -> BlockStatement .

    LET             reduce using rule 60 (Statement -> BlockStatement .)
    IF              reduce using rule 60 (Statement -> BlockStatement .)
    FOR             reduce using rule 60 (Statement -> BlockStatement .)
    WHILE           reduce using rule 60 (Statement -> BlockStatement .)
    BREAK           reduce using rule 60 (Statement -> BlockStatement .)
    RETURN          reduce using rule 60 (Statement -> BlockStatement .)
    SEMICOLON       reduce using rule 60 (Statement -> BlockStatement .)
    TYPE            reduce using rule 60 (Statement -> BlockStatement .)
    LBRACE          reduce using rule 60 (Statement -> BlockStatement .)
    ID              reduce using rule 60 (Statement -> BlockStatement .)
    LPAREN          reduce using rule 60 (Statement -> BlockStatement .)
    ADDRESS         reduce using rule 60 (Statement -> BlockStatement .)
    INTL            reduce using rule 60 (Statement -> BlockStatement .)
    BOOLL           reduce using rule 60 (Statement -> BlockStatement .)
    RBRACE          reduce using rule 60 (Statement -> BlockStatement .)
    RPAREN          reduce using rule 60 (Statement -> BlockStatement .)


state 83

    (61) Statement -> BlankStatement .

    LET             reduce using rule 61 (Statement -> BlankStatement .)
    IF              reduce using rule 61 (Statement -> BlankStatement .)
    FOR             reduce using rule 61 (Statement -> BlankStatement .)
    WHILE           reduce using rule 61 (Statement -> BlankStatement .)
    BREAK           reduce using rule 61 (Statement -> BlankStatement .)
    RETURN          reduce using rule 61 (Statement -> BlankStatement .)
    SEMICOLON       reduce using rule 61 (Statement -> BlankStatement .)
    TYPE            reduce using rule 61 (Statement -> BlankStatement .)
    LBRACE          reduce using rule 61 (Statement -> BlankStatement .)
    ID              reduce using rule 61 (Statement -> BlankStatement .)
    LPAREN          reduce using rule 61 (Statement -> BlankStatement .)
    ADDRESS         reduce using rule 61 (Statement -> BlankStatement .)
    INTL            reduce using rule 61 (Statement -> BlankStatement .)
    BOOLL           reduce using rule 61 (Statement -> BlankStatement .)
    RBRACE          reduce using rule 61 (Statement -> BlankStatement .)
    RPAREN          reduce using rule 61 (Statement -> BlankStatement .)


state 84

    (62) Statement -> TypeStatement .

    LET             reduce using rule 62 (Statement -> TypeStatement .)
    IF              reduce using rule 62 (Statement -> TypeStatement .)
    FOR             reduce using rule 62 (Statement -> TypeStatement .)
    WHILE           reduce using rule 62 (Statement -> TypeStatement .)
    BREAK           reduce using rule 62 (Statement -> TypeStatement .)
    RETURN          reduce using rule 62 (Statement -> TypeStatement .)
    SEMICOLON       reduce using rule 62 (Statement -> TypeStatement .)
    TYPE            reduce using rule 62 (Statement -> TypeStatement .)
    LBRACE          reduce using rule 62 (Statement -> TypeStatement .)
    ID              reduce using rule 62 (Statement -> TypeStatement .)
    LPAREN          reduce using rule 62 (Statement -> TypeStatement .)
    ADDRESS         reduce using rule 62 (Statement -> TypeStatement .)
    INTL            reduce using rule 62 (Statement -> TypeStatement .)
    BOOLL           reduce using rule 62 (Statement -> TypeStatement .)
    RBRACE          reduce using rule 62 (Statement -> TypeStatement .)
    RPAREN          reduce using rule 62 (Statement -> TypeStatement .)


state 85

    (63) Statement -> DeclarationStatement .

    LET             reduce using rule 63 (Statement -> DeclarationStatement .)
    IF              reduce using rule 63 (Statement -> DeclarationStatement .)
    FOR             reduce using rule 63 (Statement -> DeclarationStatement .)
    WHILE           reduce using rule 63 (Statement -> DeclarationStatement .)
    BREAK           reduce using rule 63 (Statement -> DeclarationStatement .)
    RETURN          reduce using rule 63 (Statement -> DeclarationStatement .)
    SEMICOLON       reduce using rule 63 (Statement -> DeclarationStatement .)
    TYPE            reduce using rule 63 (Statement -> DeclarationStatement .)
    LBRACE          reduce using rule 63 (Statement -> DeclarationStatement .)
    ID              reduce using rule 63 (Statement -> DeclarationStatement .)
    LPAREN          reduce using rule 63 (Statement -> DeclarationStatement .)
    ADDRESS         reduce using rule 63 (Statement -> DeclarationStatement .)
    INTL            reduce using rule 63 (Statement -> DeclarationStatement .)
    BOOLL           reduce using rule 63 (Statement -> DeclarationStatement .)
    RBRACE          reduce using rule 63 (Statement -> DeclarationStatement .)
    RPAREN          reduce using rule 63 (Statement -> DeclarationStatement .)


state 86

    (3) AssignmentStatement -> Expression . ASSIGNMENT Expression SEMICOLON
    (36) ExpressionStatement -> Expression . SEMICOLON
    (23) DeclarationStatement -> Expression . Expression SEMICOLON
    (4) BinaryExpression -> Expression . PLUS Expression
    (5) BinaryExpression -> Expression . MINUS Expression
    (6) BinaryExpression -> Expression . TIMES Expression
    (7) BinaryExpression -> Expression . DIVIDE Expression
    (8) BinaryExpression -> Expression . MOD Expression
    (9) BinaryExpression -> Expression . LEQ Expression
    (10) BinaryExpression -> Expression . GEQ Expression
    (11) BinaryExpression -> Expression . LT Expression
    (12) BinaryExpression -> Expression . GT Expression
    (13) BinaryExpression -> Expression . EQ Expression
    (14) BinaryExpression -> Expression . NE Expression
    (48) ParenthesesCallExpression -> Expression . LPAREN ExpressionList RPAREN
    (19) BracketCallExpression -> Expression . LBRACKET Expression RBRACKET
    (28) DotExpression -> Expression . DOT Expression
    (27) DereferenceExpression -> Expression . DEREF
    (2) AngleCallExpression -> Expression . LANGLE ExpressionList RANGLE
    (29) Expression -> . BinaryExpression
    (30) Expression -> . UnaryExpression
    (31) Expression -> . IdExpression
    (32) Expression -> . IdPairExpression
    (4) BinaryExpression -> . Expression PLUS Expression
    (5) BinaryExpression -> . Expression MINUS Expression
    (6) BinaryExpression -> . Expression TIMES Expression
    (7) BinaryExpression -> . Expression DIVIDE Expression
    (8) BinaryExpression -> . Expression MOD Expression
    (9) BinaryExpression -> . Expression LEQ Expression
    (10) BinaryExpression -> . Expression GEQ Expression
    (11) BinaryExpression -> . Expression LT Expression
    (12) BinaryExpression -> . Expression GT Expression
    (13) BinaryExpression -> . Expression EQ Expression
    (14) BinaryExpression -> . Expression NE Expression
    (68) UnaryExpression -> . LiteralExpression
    (69) UnaryExpression -> . ParenthesesCallExpression
    (70) UnaryExpression -> . BracketCallExpression
    (71) UnaryExpression -> . DotExpression
    (72) UnaryExpression -> . ParenthesesExpression
    (73) UnaryExpression -> . DereferenceExpression
    (74) UnaryExpression -> . AddressExpression
    (75) UnaryExpression -> . AngleCallExpression
    (40) IdExpression -> . ID
    (41) IdPairExpression -> . ID ID
    (46) LiteralExpression -> . IntLiteral
    (47) LiteralExpression -> . BoolLiteral
    (48) ParenthesesCallExpression -> . Expression LPAREN ExpressionList RPAREN
    (19) BracketCallExpression -> . Expression LBRACKET Expression RBRACKET
    (28) DotExpression -> . Expression DOT Expression
    (49) ParenthesesExpression -> . LPAREN Expression RPAREN
    (27) DereferenceExpression -> . Expression DEREF
    (1) AddressExpression -> . ADDRESS Expression
    (2) AngleCallExpression -> . Expression LANGLE ExpressionList RANGLE
    (45) IntLiteral -> . INTL
    (18) BoolLiteral -> . BOOLL

    ASSIGNMENT      shift and go to state 105
    SEMICOLON       shift and go to state 106
    PLUS            shift and go to state 33
    MINUS           shift and go to state 34
    TIMES           shift and go to state 35
    DIVIDE          shift and go to state 36
    MOD             shift and go to state 37
    LEQ             shift and go to state 38
    GEQ             shift and go to state 39
    LT              shift and go to state 40
    GT              shift and go to state 41
    EQ              shift and go to state 42
    NE              shift and go to state 43
    LPAREN          shift and go to state 107
    LBRACKET        shift and go to state 45
    DOT             shift and go to state 46
    DEREF           shift and go to state 47
    LANGLE          shift and go to state 48
    ID              shift and go to state 23
    ADDRESS         shift and go to state 27
    INTL            shift and go to state 28
    BOOLL           shift and go to state 29

    Expression                     shift and go to state 104
    BinaryExpression               shift and go to state 11
    UnaryExpression                shift and go to state 12
    IdExpression                   shift and go to state 13
    IdPairExpression               shift and go to state 14
    LiteralExpression              shift and go to state 15
    ParenthesesCallExpression      shift and go to state 16
    BracketCallExpression          shift and go to state 17
    DotExpression                  shift and go to state 18
    ParenthesesExpression          shift and go to state 19
    DereferenceExpression          shift and go to state 20
    AddressExpression              shift and go to state 21
    AngleCallExpression            shift and go to state 22
    IntLiteral                     shift and go to state 24
    BoolLiteral                    shift and go to state 25

state 87

    (15) BlankStatement -> SEMICOLON .

    LET             reduce using rule 15 (BlankStatement -> SEMICOLON .)
    IF              reduce using rule 15 (BlankStatement -> SEMICOLON .)
    FOR             reduce using rule 15 (BlankStatement -> SEMICOLON .)
    WHILE           reduce using rule 15 (BlankStatement -> SEMICOLON .)
    BREAK           reduce using rule 15 (BlankStatement -> SEMICOLON .)
    RETURN          reduce using rule 15 (BlankStatement -> SEMICOLON .)
    SEMICOLON       reduce using rule 15 (BlankStatement -> SEMICOLON .)
    TYPE            reduce using rule 15 (BlankStatement -> SEMICOLON .)
    LBRACE          reduce using rule 15 (BlankStatement -> SEMICOLON .)
    ID              reduce using rule 15 (BlankStatement -> SEMICOLON .)
    LPAREN          reduce using rule 15 (BlankStatement -> SEMICOLON .)
    ADDRESS         reduce using rule 15 (BlankStatement -> SEMICOLON .)
    INTL            reduce using rule 15 (BlankStatement -> SEMICOLON .)
    BOOLL           reduce using rule 15 (BlankStatement -> SEMICOLON .)
    RBRACE          reduce using rule 15 (BlankStatement -> SEMICOLON .)
    RPAREN          reduce using rule 15 (BlankStatement -> SEMICOLON .)


state 88

    (44) InitStatement -> LET . Expression ASSIGNMENT Expression SEMICOLON
    (29) Expression -> . BinaryExpression
    (30) Expression -> . UnaryExpression
    (31) Expression -> . IdExpression
    (32) Expression -> . IdPairExpression
    (4) BinaryExpression -> . Expression PLUS Expression
    (5) BinaryExpression -> . Expression MINUS Expression
    (6) BinaryExpression -> . Expression TIMES Expression
    (7) BinaryExpression -> . Expression DIVIDE Expression
    (8) BinaryExpression -> . Expression MOD Expression
    (9) BinaryExpression -> . Expression LEQ Expression
    (10) BinaryExpression -> . Expression GEQ Expression
    (11) BinaryExpression -> . Expression LT Expression
    (12) BinaryExpression -> . Expression GT Expression
    (13) BinaryExpression -> . Expression EQ Expression
    (14) BinaryExpression -> . Expression NE Expression
    (68) UnaryExpression -> . LiteralExpression
    (69) UnaryExpression -> . ParenthesesCallExpression
    (70) UnaryExpression -> . BracketCallExpression
    (71) UnaryExpression -> . DotExpression
    (72) UnaryExpression -> . ParenthesesExpression
    (73) UnaryExpression -> . DereferenceExpression
    (74) UnaryExpression -> . AddressExpression
    (75) UnaryExpression -> . AngleCallExpression
    (40) IdExpression -> . ID
    (41) IdPairExpression -> . ID ID
    (46) LiteralExpression -> . IntLiteral
    (47) LiteralExpression -> . BoolLiteral
    (48) ParenthesesCallExpression -> . Expression LPAREN ExpressionList RPAREN
    (19) BracketCallExpression -> . Expression LBRACKET Expression RBRACKET
    (28) DotExpression -> . Expression DOT Expression
    (49) ParenthesesExpression -> . LPAREN Expression RPAREN
    (27) DereferenceExpression -> . Expression DEREF
    (1) AddressExpression -> . ADDRESS Expression
    (2) AngleCallExpression -> . Expression LANGLE ExpressionList RANGLE
    (45) IntLiteral -> . INTL
    (18) BoolLiteral -> . BOOLL

    ID              shift and go to state 23
    LPAREN          shift and go to state 26
    ADDRESS         shift and go to state 27
    INTL            shift and go to state 28
    BOOLL           shift and go to state 29

    Expression                     shift and go to state 108
    BinaryExpression               shift and go to state 11
    UnaryExpression                shift and go to state 12
    IdExpression                   shift and go to state 13
    IdPairExpression               shift and go to state 14
    LiteralExpression              shift and go to state 15
    ParenthesesCallExpression      shift and go to state 16
    BracketCallExpression          shift and go to state 17
    DotExpression                  shift and go to state 18
    ParenthesesExpression          shift and go to state 19
    DereferenceExpression          shift and go to state 20
    AddressExpression              shift and go to state 21
    AngleCallExpression            shift and go to state 22
    IntLiteral                     shift and go to state 24
    BoolLiteral                    shift and go to state 25

state 89

    (42) IfElseStatement -> IF . LPAREN Expression RPAREN Block ELSE Block
    (43) IfElseStatement -> IF . LPAREN Expression RPAREN Block

    LPAREN          shift and go to state 109


state 90

    (17) BlockStatement -> Block .

    LET             reduce using rule 17 (BlockStatement -> Block .)
    IF              reduce using rule 17 (BlockStatement -> Block .)
    FOR             reduce using rule 17 (BlockStatement -> Block .)
    WHILE           reduce using rule 17 (BlockStatement -> Block .)
    BREAK           reduce using rule 17 (BlockStatement -> Block .)
    RETURN          reduce using rule 17 (BlockStatement -> Block .)
    SEMICOLON       reduce using rule 17 (BlockStatement -> Block .)
    TYPE            reduce using rule 17 (BlockStatement -> Block .)
    LBRACE          reduce using rule 17 (BlockStatement -> Block .)
    ID              reduce using rule 17 (BlockStatement -> Block .)
    LPAREN          reduce using rule 17 (BlockStatement -> Block .)
    ADDRESS         reduce using rule 17 (BlockStatement -> Block .)
    INTL            reduce using rule 17 (BlockStatement -> Block .)
    BOOLL           reduce using rule 17 (BlockStatement -> Block .)
    RBRACE          reduce using rule 17 (BlockStatement -> Block .)
    RPAREN          reduce using rule 17 (BlockStatement -> Block .)


state 91

    (37) ForStatement -> FOR . LPAREN Statement Expression SEMICOLON Statement RPAREN Block

    LPAREN          shift and go to state 110


state 92

    (76) WhileStatement -> WHILE . LPAREN Expression RPAREN Block

    LPAREN          shift and go to state 111


state 93

    (20) BreakStatement -> BREAK . IntLiteral SEMICOLON
    (21) BreakStatement -> BREAK . SEMICOLON
    (45) IntLiteral -> . INTL

    SEMICOLON       shift and go to state 113
    INTL            shift and go to state 28

    IntLiteral                     shift and go to state 112

state 94

    (50) ReturnStatement -> RETURN . Expression SEMICOLON
    (51) ReturnStatement -> RETURN . SEMICOLON
    (29) Expression -> . BinaryExpression
    (30) Expression -> . UnaryExpression
    (31) Expression -> . IdExpression
    (32) Expression -> . IdPairExpression
    (4) BinaryExpression -> . Expression PLUS Expression
    (5) BinaryExpression -> . Expression MINUS Expression
    (6) BinaryExpression -> . Expression TIMES Expression
    (7) BinaryExpression -> . Expression DIVIDE Expression
    (8) BinaryExpression -> . Expression MOD Expression
    (9) BinaryExpression -> . Expression LEQ Expression
    (10) BinaryExpression -> . Expression GEQ Expression
    (11) BinaryExpression -> . Expression LT Expression
    (12) BinaryExpression -> . Expression GT Expression
    (13) BinaryExpression -> . Expression EQ Expression
    (14) BinaryExpression -> . Expression NE Expression
    (68) UnaryExpression -> . LiteralExpression
    (69) UnaryExpression -> . ParenthesesCallExpression
    (70) UnaryExpression -> . BracketCallExpression
    (71) UnaryExpression -> . DotExpression
    (72) UnaryExpression -> . ParenthesesExpression
    (73) UnaryExpression -> . DereferenceExpression
    (74) UnaryExpression -> . AddressExpression
    (75) UnaryExpression -> . AngleCallExpression
    (40) IdExpression -> . ID
    (41) IdPairExpression -> . ID ID
    (46) LiteralExpression -> . IntLiteral
    (47) LiteralExpression -> . BoolLiteral
    (48) ParenthesesCallExpression -> . Expression LPAREN ExpressionList RPAREN
    (19) BracketCallExpression -> . Expression LBRACKET Expression RBRACKET
    (28) DotExpression -> . Expression DOT Expression
    (49) ParenthesesExpression -> . LPAREN Expression RPAREN
    (27) DereferenceExpression -> . Expression DEREF
    (1) AddressExpression -> . ADDRESS Expression
    (2) AngleCallExpression -> . Expression LANGLE ExpressionList RANGLE
    (45) IntLiteral -> . INTL
    (18) BoolLiteral -> . BOOLL

    SEMICOLON       shift and go to state 115
    ID              shift and go to state 23
    LPAREN          shift and go to state 26
    ADDRESS         shift and go to state 27
    INTL            shift and go to state 28
    BOOLL           shift and go to state 29

    Expression                     shift and go to state 114
    BinaryExpression               shift and go to state 11
    UnaryExpression                shift and go to state 12
    IdExpression                   shift and go to state 13
    IdPairExpression               shift and go to state 14
    LiteralExpression              shift and go to state 15
    ParenthesesCallExpression      shift and go to state 16
    BracketCallExpression          shift and go to state 17
    DotExpression                  shift and go to state 18
    ParenthesesExpression          shift and go to state 19
    DereferenceExpression          shift and go to state 20
    AddressExpression              shift and go to state 21
    AngleCallExpression            shift and go to state 22
    IntLiteral                     shift and go to state 24
    BoolLiteral                    shift and go to state 25

state 95

    (67) TypeStatement -> TYPE . Expression ASSIGNMENT Expression SEMICOLON
    (29) Expression -> . BinaryExpression
    (30) Expression -> . UnaryExpression
    (31) Expression -> . IdExpression
    (32) Expression -> . IdPairExpression
    (4) BinaryExpression -> . Expression PLUS Expression
    (5) BinaryExpression -> . Expression MINUS Expression
    (6) BinaryExpression -> . Expression TIMES Expression
    (7) BinaryExpression -> . Expression DIVIDE Expression
    (8) BinaryExpression -> . Expression MOD Expression
    (9) BinaryExpression -> . Expression LEQ Expression
    (10) BinaryExpression -> . Expression GEQ Expression
    (11) BinaryExpression -> . Expression LT Expression
    (12) BinaryExpression -> . Expression GT Expression
    (13) BinaryExpression -> . Expression EQ Expression
    (14) BinaryExpression -> . Expression NE Expression
    (68) UnaryExpression -> . LiteralExpression
    (69) UnaryExpression -> . ParenthesesCallExpression
    (70) UnaryExpression -> . BracketCallExpression
    (71) UnaryExpression -> . DotExpression
    (72) UnaryExpression -> . ParenthesesExpression
    (73) UnaryExpression -> . DereferenceExpression
    (74) UnaryExpression -> . AddressExpression
    (75) UnaryExpression -> . AngleCallExpression
    (40) IdExpression -> . ID
    (41) IdPairExpression -> . ID ID
    (46) LiteralExpression -> . IntLiteral
    (47) LiteralExpression -> . BoolLiteral
    (48) ParenthesesCallExpression -> . Expression LPAREN ExpressionList RPAREN
    (19) BracketCallExpression -> . Expression LBRACKET Expression RBRACKET
    (28) DotExpression -> . Expression DOT Expression
    (49) ParenthesesExpression -> . LPAREN Expression RPAREN
    (27) DereferenceExpression -> . Expression DEREF
    (1) AddressExpression -> . ADDRESS Expression
    (2) AngleCallExpression -> . Expression LANGLE ExpressionList RANGLE
    (45) IntLiteral -> . INTL
    (18) BoolLiteral -> . BOOLL

    ID              shift and go to state 23
    LPAREN          shift and go to state 26
    ADDRESS         shift and go to state 27
    INTL            shift and go to state 28
    BOOLL           shift and go to state 29

    Expression                     shift and go to state 116
    BinaryExpression               shift and go to state 11
    UnaryExpression                shift and go to state 12
    IdExpression                   shift and go to state 13
    IdPairExpression               shift and go to state 14
    LiteralExpression              shift and go to state 15
    ParenthesesCallExpression      shift and go to state 16
    BracketCallExpression          shift and go to state 17
    DotExpression                  shift and go to state 18
    ParenthesesExpression          shift and go to state 19
    DereferenceExpression          shift and go to state 20
    AddressExpression              shift and go to state 21
    AngleCallExpression            shift and go to state 22
    IntLiteral                     shift and go to state 24
    BoolLiteral                    shift and go to state 25

state 96

    (49) ParenthesesExpression -> LPAREN Expression RPAREN .

    ARROW           reduce using rule 49 (ParenthesesExpression -> LPAREN Expression RPAREN .)
    PLUS            reduce using rule 49 (ParenthesesExpression -> LPAREN Expression RPAREN .)
    MINUS           reduce using rule 49 (ParenthesesExpression -> LPAREN Expression RPAREN .)
    TIMES           reduce using rule 49 (ParenthesesExpression -> LPAREN Expression RPAREN .)
    DIVIDE          reduce using rule 49 (ParenthesesExpression -> LPAREN Expression RPAREN .)
    MOD             reduce using rule 49 (ParenthesesExpression -> LPAREN Expression RPAREN .)
    LEQ             reduce using rule 49 (ParenthesesExpression -> LPAREN Expression RPAREN .)
    GEQ             reduce using rule 49 (ParenthesesExpression -> LPAREN Expression RPAREN .)
    LT              reduce using rule 49 (ParenthesesExpression -> LPAREN Expression RPAREN .)
    GT              reduce using rule 49 (ParenthesesExpression -> LPAREN Expression RPAREN .)
    EQ              reduce using rule 49 (ParenthesesExpression -> LPAREN Expression RPAREN .)
    NE              reduce using rule 49 (ParenthesesExpression -> LPAREN Expression RPAREN .)
    LPAREN          reduce using rule 49 (ParenthesesExpression -> LPAREN Expression RPAREN .)
    LBRACKET        reduce using rule 49 (ParenthesesExpression -> LPAREN Expression RPAREN .)
    DOT             reduce using rule 49 (ParenthesesExpression -> LPAREN Expression RPAREN .)
    DEREF           reduce using rule 49 (ParenthesesExpression -> LPAREN Expression RPAREN .)
    LANGLE          reduce using rule 49 (ParenthesesExpression -> LPAREN Expression RPAREN .)
    LBRACE          reduce using rule 49 (ParenthesesExpression -> LPAREN Expression RPAREN .)
    RPAREN          reduce using rule 49 (ParenthesesExpression -> LPAREN Expression RPAREN .)
    COMMA           reduce using rule 49 (ParenthesesExpression -> LPAREN Expression RPAREN .)
    RBRACKET        reduce using rule 49 (ParenthesesExpression -> LPAREN Expression RPAREN .)
    RANGLE          reduce using rule 49 (ParenthesesExpression -> LPAREN Expression RPAREN .)
    ASSIGNMENT      reduce using rule 49 (ParenthesesExpression -> LPAREN Expression RPAREN .)
    SEMICOLON       reduce using rule 49 (ParenthesesExpression -> LPAREN Expression RPAREN .)
    ID              reduce using rule 49 (ParenthesesExpression -> LPAREN Expression RPAREN .)
    ADDRESS         reduce using rule 49 (ParenthesesExpression -> LPAREN Expression RPAREN .)
    INTL            reduce using rule 49 (ParenthesesExpression -> LPAREN Expression RPAREN .)
    BOOLL           reduce using rule 49 (ParenthesesExpression -> LPAREN Expression RPAREN .)


state 97

    (39) FunctionDefinition -> FN Expression ARROW Expression Block .

    FN              reduce using rule 39 (FunctionDefinition -> FN Expression ARROW Expression Block .)
    STRUCT          reduce using rule 39 (FunctionDefinition -> FN Expression ARROW Expression Block .)
    $end            reduce using rule 39 (FunctionDefinition -> FN Expression ARROW Expression Block .)


state 98

    (33) ExpressionList -> Expression COMMA . ExpressionList
    (33) ExpressionList -> . Expression COMMA ExpressionList
    (34) ExpressionList -> . Expression
    (35) ExpressionList -> . empty
    (29) Expression -> . BinaryExpression
    (30) Expression -> . UnaryExpression
    (31) Expression -> . IdExpression
    (32) Expression -> . IdPairExpression
    (77) empty -> .
    (4) BinaryExpression -> . Expression PLUS Expression
    (5) BinaryExpression -> . Expression MINUS Expression
    (6) BinaryExpression -> . Expression TIMES Expression
    (7) BinaryExpression -> . Expression DIVIDE Expression
    (8) BinaryExpression -> . Expression MOD Expression
    (9) BinaryExpression -> . Expression LEQ Expression
    (10) BinaryExpression -> . Expression GEQ Expression
    (11) BinaryExpression -> . Expression LT Expression
    (12) BinaryExpression -> . Expression GT Expression
    (13) BinaryExpression -> . Expression EQ Expression
    (14) BinaryExpression -> . Expression NE Expression
    (68) UnaryExpression -> . LiteralExpression
    (69) UnaryExpression -> . ParenthesesCallExpression
    (70) UnaryExpression -> . BracketCallExpression
    (71) UnaryExpression -> . DotExpression
    (72) UnaryExpression -> . ParenthesesExpression
    (73) UnaryExpression -> . DereferenceExpression
    (74) UnaryExpression -> . AddressExpression
    (75) UnaryExpression -> . AngleCallExpression
    (40) IdExpression -> . ID
    (41) IdPairExpression -> . ID ID
    (46) LiteralExpression -> . IntLiteral
    (47) LiteralExpression -> . BoolLiteral
    (48) ParenthesesCallExpression -> . Expression LPAREN ExpressionList RPAREN
    (19) BracketCallExpression -> . Expression LBRACKET Expression RBRACKET
    (28) DotExpression -> . Expression DOT Expression
    (49) ParenthesesExpression -> . LPAREN Expression RPAREN
    (27) DereferenceExpression -> . Expression DEREF
    (1) AddressExpression -> . ADDRESS Expression
    (2) AngleCallExpression -> . Expression LANGLE ExpressionList RANGLE
    (45) IntLiteral -> . INTL
    (18) BoolLiteral -> . BOOLL

    RPAREN          reduce using rule 77 (empty -> .)
    RANGLE          reduce using rule 77 (empty -> .)
    ID              shift and go to state 23
    LPAREN          shift and go to state 26
    ADDRESS         shift and go to state 27
    INTL            shift and go to state 28
    BOOLL           shift and go to state 29

    Expression                     shift and go to state 66
    ExpressionList                 shift and go to state 117
    empty                          shift and go to state 68
    BinaryExpression               shift and go to state 11
    UnaryExpression                shift and go to state 12
    IdExpression                   shift and go to state 13
    IdPairExpression               shift and go to state 14
    LiteralExpression              shift and go to state 15
    ParenthesesCallExpression      shift and go to state 16
    BracketCallExpression          shift and go to state 17
    DotExpression                  shift and go to state 18
    ParenthesesExpression          shift and go to state 19
    DereferenceExpression          shift and go to state 20
    AddressExpression              shift and go to state 21
    AngleCallExpression            shift and go to state 22
    IntLiteral                     shift and go to state 24
    BoolLiteral                    shift and go to state 25

state 99

    (48) ParenthesesCallExpression -> Expression LPAREN ExpressionList RPAREN .

    ARROW           reduce using rule 48 (ParenthesesCallExpression -> Expression LPAREN ExpressionList RPAREN .)
    PLUS            reduce using rule 48 (ParenthesesCallExpression -> Expression LPAREN ExpressionList RPAREN .)
    MINUS           reduce using rule 48 (ParenthesesCallExpression -> Expression LPAREN ExpressionList RPAREN .)
    TIMES           reduce using rule 48 (ParenthesesCallExpression -> Expression LPAREN ExpressionList RPAREN .)
    DIVIDE          reduce using rule 48 (ParenthesesCallExpression -> Expression LPAREN ExpressionList RPAREN .)
    MOD             reduce using rule 48 (ParenthesesCallExpression -> Expression LPAREN ExpressionList RPAREN .)
    LEQ             reduce using rule 48 (ParenthesesCallExpression -> Expression LPAREN ExpressionList RPAREN .)
    GEQ             reduce using rule 48 (ParenthesesCallExpression -> Expression LPAREN ExpressionList RPAREN .)
    LT              reduce using rule 48 (ParenthesesCallExpression -> Expression LPAREN ExpressionList RPAREN .)
    GT              reduce using rule 48 (ParenthesesCallExpression -> Expression LPAREN ExpressionList RPAREN .)
    EQ              reduce using rule 48 (ParenthesesCallExpression -> Expression LPAREN ExpressionList RPAREN .)
    NE              reduce using rule 48 (ParenthesesCallExpression -> Expression LPAREN ExpressionList RPAREN .)
    LPAREN          reduce using rule 48 (ParenthesesCallExpression -> Expression LPAREN ExpressionList RPAREN .)
    LBRACKET        reduce using rule 48 (ParenthesesCallExpression -> Expression LPAREN ExpressionList RPAREN .)
    DOT             reduce using rule 48 (ParenthesesCallExpression -> Expression LPAREN ExpressionList RPAREN .)
    DEREF           reduce using rule 48 (ParenthesesCallExpression -> Expression LPAREN ExpressionList RPAREN .)
    LANGLE          reduce using rule 48 (ParenthesesCallExpression -> Expression LPAREN ExpressionList RPAREN .)
    LBRACE          reduce using rule 48 (ParenthesesCallExpression -> Expression LPAREN ExpressionList RPAREN .)
    RPAREN          reduce using rule 48 (ParenthesesCallExpression -> Expression LPAREN ExpressionList RPAREN .)
    COMMA           reduce using rule 48 (ParenthesesCallExpression -> Expression LPAREN ExpressionList RPAREN .)
    RBRACKET        reduce using rule 48 (ParenthesesCallExpression -> Expression LPAREN ExpressionList RPAREN .)
    RANGLE          reduce using rule 48 (ParenthesesCallExpression -> Expression LPAREN ExpressionList RPAREN .)
    ASSIGNMENT      reduce using rule 48 (ParenthesesCallExpression -> Expression LPAREN ExpressionList RPAREN .)
    SEMICOLON       reduce using rule 48 (ParenthesesCallExpression -> Expression LPAREN ExpressionList RPAREN .)
    ID              reduce using rule 48 (ParenthesesCallExpression -> Expression LPAREN ExpressionList RPAREN .)
    ADDRESS         reduce using rule 48 (ParenthesesCallExpression -> Expression LPAREN ExpressionList RPAREN .)
    INTL            reduce using rule 48 (ParenthesesCallExpression -> Expression LPAREN ExpressionList RPAREN .)
    BOOLL           reduce using rule 48 (ParenthesesCallExpression -> Expression LPAREN ExpressionList RPAREN .)


state 100

    (19) BracketCallExpression -> Expression LBRACKET Expression RBRACKET .

    ARROW           reduce using rule 19 (BracketCallExpression -> Expression LBRACKET Expression RBRACKET .)
    PLUS            reduce using rule 19 (BracketCallExpression -> Expression LBRACKET Expression RBRACKET .)
    MINUS           reduce using rule 19 (BracketCallExpression -> Expression LBRACKET Expression RBRACKET .)
    TIMES           reduce using rule 19 (BracketCallExpression -> Expression LBRACKET Expression RBRACKET .)
    DIVIDE          reduce using rule 19 (BracketCallExpression -> Expression LBRACKET Expression RBRACKET .)
    MOD             reduce using rule 19 (BracketCallExpression -> Expression LBRACKET Expression RBRACKET .)
    LEQ             reduce using rule 19 (BracketCallExpression -> Expression LBRACKET Expression RBRACKET .)
    GEQ             reduce using rule 19 (BracketCallExpression -> Expression LBRACKET Expression RBRACKET .)
    LT              reduce using rule 19 (BracketCallExpression -> Expression LBRACKET Expression RBRACKET .)
    GT              reduce using rule 19 (BracketCallExpression -> Expression LBRACKET Expression RBRACKET .)
    EQ              reduce using rule 19 (BracketCallExpression -> Expression LBRACKET Expression RBRACKET .)
    NE              reduce using rule 19 (BracketCallExpression -> Expression LBRACKET Expression RBRACKET .)
    LPAREN          reduce using rule 19 (BracketCallExpression -> Expression LBRACKET Expression RBRACKET .)
    LBRACKET        reduce using rule 19 (BracketCallExpression -> Expression LBRACKET Expression RBRACKET .)
    DOT             reduce using rule 19 (BracketCallExpression -> Expression LBRACKET Expression RBRACKET .)
    DEREF           reduce using rule 19 (BracketCallExpression -> Expression LBRACKET Expression RBRACKET .)
    LANGLE          reduce using rule 19 (BracketCallExpression -> Expression LBRACKET Expression RBRACKET .)
    LBRACE          reduce using rule 19 (BracketCallExpression -> Expression LBRACKET Expression RBRACKET .)
    RPAREN          reduce using rule 19 (BracketCallExpression -> Expression LBRACKET Expression RBRACKET .)
    COMMA           reduce using rule 19 (BracketCallExpression -> Expression LBRACKET Expression RBRACKET .)
    RBRACKET        reduce using rule 19 (BracketCallExpression -> Expression LBRACKET Expression RBRACKET .)
    RANGLE          reduce using rule 19 (BracketCallExpression -> Expression LBRACKET Expression RBRACKET .)
    ASSIGNMENT      reduce using rule 19 (BracketCallExpression -> Expression LBRACKET Expression RBRACKET .)
    SEMICOLON       reduce using rule 19 (BracketCallExpression -> Expression LBRACKET Expression RBRACKET .)
    ID              reduce using rule 19 (BracketCallExpression -> Expression LBRACKET Expression RBRACKET .)
    ADDRESS         reduce using rule 19 (BracketCallExpression -> Expression LBRACKET Expression RBRACKET .)
    INTL            reduce using rule 19 (BracketCallExpression -> Expression LBRACKET Expression RBRACKET .)
    BOOLL           reduce using rule 19 (BracketCallExpression -> Expression LBRACKET Expression RBRACKET .)


state 101

    (2) AngleCallExpression -> Expression LANGLE ExpressionList RANGLE .

    ARROW           reduce using rule 2 (AngleCallExpression -> Expression LANGLE ExpressionList RANGLE .)
    PLUS            reduce using rule 2 (AngleCallExpression -> Expression LANGLE ExpressionList RANGLE .)
    MINUS           reduce using rule 2 (AngleCallExpression -> Expression LANGLE ExpressionList RANGLE .)
    TIMES           reduce using rule 2 (AngleCallExpression -> Expression LANGLE ExpressionList RANGLE .)
    DIVIDE          reduce using rule 2 (AngleCallExpression -> Expression LANGLE ExpressionList RANGLE .)
    MOD             reduce using rule 2 (AngleCallExpression -> Expression LANGLE ExpressionList RANGLE .)
    LEQ             reduce using rule 2 (AngleCallExpression -> Expression LANGLE ExpressionList RANGLE .)
    GEQ             reduce using rule 2 (AngleCallExpression -> Expression LANGLE ExpressionList RANGLE .)
    LT              reduce using rule 2 (AngleCallExpression -> Expression LANGLE ExpressionList RANGLE .)
    GT              reduce using rule 2 (AngleCallExpression -> Expression LANGLE ExpressionList RANGLE .)
    EQ              reduce using rule 2 (AngleCallExpression -> Expression LANGLE ExpressionList RANGLE .)
    NE              reduce using rule 2 (AngleCallExpression -> Expression LANGLE ExpressionList RANGLE .)
    LPAREN          reduce using rule 2 (AngleCallExpression -> Expression LANGLE ExpressionList RANGLE .)
    LBRACKET        reduce using rule 2 (AngleCallExpression -> Expression LANGLE ExpressionList RANGLE .)
    DOT             reduce using rule 2 (AngleCallExpression -> Expression LANGLE ExpressionList RANGLE .)
    DEREF           reduce using rule 2 (AngleCallExpression -> Expression LANGLE ExpressionList RANGLE .)
    LANGLE          reduce using rule 2 (AngleCallExpression -> Expression LANGLE ExpressionList RANGLE .)
    LBRACE          reduce using rule 2 (AngleCallExpression -> Expression LANGLE ExpressionList RANGLE .)
    RPAREN          reduce using rule 2 (AngleCallExpression -> Expression LANGLE ExpressionList RANGLE .)
    COMMA           reduce using rule 2 (AngleCallExpression -> Expression LANGLE ExpressionList RANGLE .)
    RBRACKET        reduce using rule 2 (AngleCallExpression -> Expression LANGLE ExpressionList RANGLE .)
    RANGLE          reduce using rule 2 (AngleCallExpression -> Expression LANGLE ExpressionList RANGLE .)
    ASSIGNMENT      reduce using rule 2 (AngleCallExpression -> Expression LANGLE ExpressionList RANGLE .)
    SEMICOLON       reduce using rule 2 (AngleCallExpression -> Expression LANGLE ExpressionList RANGLE .)
    ID              reduce using rule 2 (AngleCallExpression -> Expression LANGLE ExpressionList RANGLE .)
    ADDRESS         reduce using rule 2 (AngleCallExpression -> Expression LANGLE ExpressionList RANGLE .)
    INTL            reduce using rule 2 (AngleCallExpression -> Expression LANGLE ExpressionList RANGLE .)
    BOOLL           reduce using rule 2 (AngleCallExpression -> Expression LANGLE ExpressionList RANGLE .)


state 102

    (16) Block -> LBRACE StatementList RBRACE .

    FN              reduce using rule 16 (Block -> LBRACE StatementList RBRACE .)
    STRUCT          reduce using rule 16 (Block -> LBRACE StatementList RBRACE .)
    $end            reduce using rule 16 (Block -> LBRACE StatementList RBRACE .)
    LET             reduce using rule 16 (Block -> LBRACE StatementList RBRACE .)
    IF              reduce using rule 16 (Block -> LBRACE StatementList RBRACE .)
    FOR             reduce using rule 16 (Block -> LBRACE StatementList RBRACE .)
    WHILE           reduce using rule 16 (Block -> LBRACE StatementList RBRACE .)
    BREAK           reduce using rule 16 (Block -> LBRACE StatementList RBRACE .)
    RETURN          reduce using rule 16 (Block -> LBRACE StatementList RBRACE .)
    SEMICOLON       reduce using rule 16 (Block -> LBRACE StatementList RBRACE .)
    TYPE            reduce using rule 16 (Block -> LBRACE StatementList RBRACE .)
    LBRACE          reduce using rule 16 (Block -> LBRACE StatementList RBRACE .)
    ID              reduce using rule 16 (Block -> LBRACE StatementList RBRACE .)
    LPAREN          reduce using rule 16 (Block -> LBRACE StatementList RBRACE .)
    ADDRESS         reduce using rule 16 (Block -> LBRACE StatementList RBRACE .)
    INTL            reduce using rule 16 (Block -> LBRACE StatementList RBRACE .)
    BOOLL           reduce using rule 16 (Block -> LBRACE StatementList RBRACE .)
    RBRACE          reduce using rule 16 (Block -> LBRACE StatementList RBRACE .)
    ELSE            reduce using rule 16 (Block -> LBRACE StatementList RBRACE .)
    RPAREN          reduce using rule 16 (Block -> LBRACE StatementList RBRACE .)


state 103

    (64) StatementList -> Statement StatementList .

    RBRACE          reduce using rule 64 (StatementList -> Statement StatementList .)


state 104

    (23) DeclarationStatement -> Expression Expression . SEMICOLON
    (4) BinaryExpression -> Expression . PLUS Expression
    (5) BinaryExpression -> Expression . MINUS Expression
    (6) BinaryExpression -> Expression . TIMES Expression
    (7) BinaryExpression -> Expression . DIVIDE Expression
    (8) BinaryExpression -> Expression . MOD Expression
    (9) BinaryExpression -> Expression . LEQ Expression
    (10) BinaryExpression -> Expression . GEQ Expression
    (11) BinaryExpression -> Expression . LT Expression
    (12) BinaryExpression -> Expression . GT Expression
    (13) BinaryExpression -> Expression . EQ Expression
    (14) BinaryExpression -> Expression . NE Expression
    (48) ParenthesesCallExpression -> Expression . LPAREN ExpressionList RPAREN
    (19) BracketCallExpression -> Expression . LBRACKET Expression RBRACKET
    (28) DotExpression -> Expression . DOT Expression
    (27) DereferenceExpression -> Expression . DEREF
    (2) AngleCallExpression -> Expression . LANGLE ExpressionList RANGLE

    SEMICOLON       shift and go to state 118
    PLUS            shift and go to state 33
    MINUS           shift and go to state 34
    TIMES           shift and go to state 35
    DIVIDE          shift and go to state 36
    MOD             shift and go to state 37
    LEQ             shift and go to state 38
    GEQ             shift and go to state 39
    LT              shift and go to state 40
    GT              shift and go to state 41
    EQ              shift and go to state 42
    NE              shift and go to state 43
    LPAREN          shift and go to state 44
    LBRACKET        shift and go to state 45
    DOT             shift and go to state 46
    DEREF           shift and go to state 47
    LANGLE          shift and go to state 48


state 105

    (3) AssignmentStatement -> Expression ASSIGNMENT . Expression SEMICOLON
    (29) Expression -> . BinaryExpression
    (30) Expression -> . UnaryExpression
    (31) Expression -> . IdExpression
    (32) Expression -> . IdPairExpression
    (4) BinaryExpression -> . Expression PLUS Expression
    (5) BinaryExpression -> . Expression MINUS Expression
    (6) BinaryExpression -> . Expression TIMES Expression
    (7) BinaryExpression -> . Expression DIVIDE Expression
    (8) BinaryExpression -> . Expression MOD Expression
    (9) BinaryExpression -> . Expression LEQ Expression
    (10) BinaryExpression -> . Expression GEQ Expression
    (11) BinaryExpression -> . Expression LT Expression
    (12) BinaryExpression -> . Expression GT Expression
    (13) BinaryExpression -> . Expression EQ Expression
    (14) BinaryExpression -> . Expression NE Expression
    (68) UnaryExpression -> . LiteralExpression
    (69) UnaryExpression -> . ParenthesesCallExpression
    (70) UnaryExpression -> . BracketCallExpression
    (71) UnaryExpression -> . DotExpression
    (72) UnaryExpression -> . ParenthesesExpression
    (73) UnaryExpression -> . DereferenceExpression
    (74) UnaryExpression -> . AddressExpression
    (75) UnaryExpression -> . AngleCallExpression
    (40) IdExpression -> . ID
    (41) IdPairExpression -> . ID ID
    (46) LiteralExpression -> . IntLiteral
    (47) LiteralExpression -> . BoolLiteral
    (48) ParenthesesCallExpression -> . Expression LPAREN ExpressionList RPAREN
    (19) BracketCallExpression -> . Expression LBRACKET Expression RBRACKET
    (28) DotExpression -> . Expression DOT Expression
    (49) ParenthesesExpression -> . LPAREN Expression RPAREN
    (27) DereferenceExpression -> . Expression DEREF
    (1) AddressExpression -> . ADDRESS Expression
    (2) AngleCallExpression -> . Expression LANGLE ExpressionList RANGLE
    (45) IntLiteral -> . INTL
    (18) BoolLiteral -> . BOOLL

    ID              shift and go to state 23
    LPAREN          shift and go to state 26
    ADDRESS         shift and go to state 27
    INTL            shift and go to state 28
    BOOLL           shift and go to state 29

    Expression                     shift and go to state 119
    BinaryExpression               shift and go to state 11
    UnaryExpression                shift and go to state 12
    IdExpression                   shift and go to state 13
    IdPairExpression               shift and go to state 14
    LiteralExpression              shift and go to state 15
    ParenthesesCallExpression      shift and go to state 16
    BracketCallExpression          shift and go to state 17
    DotExpression                  shift and go to state 18
    ParenthesesExpression          shift and go to state 19
    DereferenceExpression          shift and go to state 20
    AddressExpression              shift and go to state 21
    AngleCallExpression            shift and go to state 22
    IntLiteral                     shift and go to state 24
    BoolLiteral                    shift and go to state 25

state 106

    (36) ExpressionStatement -> Expression SEMICOLON .

    LET             reduce using rule 36 (ExpressionStatement -> Expression SEMICOLON .)
    IF              reduce using rule 36 (ExpressionStatement -> Expression SEMICOLON .)
    FOR             reduce using rule 36 (ExpressionStatement -> Expression SEMICOLON .)
    WHILE           reduce using rule 36 (ExpressionStatement -> Expression SEMICOLON .)
    BREAK           reduce using rule 36 (ExpressionStatement -> Expression SEMICOLON .)
    RETURN          reduce using rule 36 (ExpressionStatement -> Expression SEMICOLON .)
    SEMICOLON       reduce using rule 36 (ExpressionStatement -> Expression SEMICOLON .)
    TYPE            reduce using rule 36 (ExpressionStatement -> Expression SEMICOLON .)
    LBRACE          reduce using rule 36 (ExpressionStatement -> Expression SEMICOLON .)
    ID              reduce using rule 36 (ExpressionStatement -> Expression SEMICOLON .)
    LPAREN          reduce using rule 36 (ExpressionStatement -> Expression SEMICOLON .)
    ADDRESS         reduce using rule 36 (ExpressionStatement -> Expression SEMICOLON .)
    INTL            reduce using rule 36 (ExpressionStatement -> Expression SEMICOLON .)
    BOOLL           reduce using rule 36 (ExpressionStatement -> Expression SEMICOLON .)
    RBRACE          reduce using rule 36 (ExpressionStatement -> Expression SEMICOLON .)
    RPAREN          reduce using rule 36 (ExpressionStatement -> Expression SEMICOLON .)


state 107

    (48) ParenthesesCallExpression -> Expression LPAREN . ExpressionList RPAREN
    (49) ParenthesesExpression -> LPAREN . Expression RPAREN
    (33) ExpressionList -> . Expression COMMA ExpressionList
    (34) ExpressionList -> . Expression
    (35) ExpressionList -> . empty
    (29) Expression -> . BinaryExpression
    (30) Expression -> . UnaryExpression
    (31) Expression -> . IdExpression
    (32) Expression -> . IdPairExpression
    (77) empty -> .
    (4) BinaryExpression -> . Expression PLUS Expression
    (5) BinaryExpression -> . Expression MINUS Expression
    (6) BinaryExpression -> . Expression TIMES Expression
    (7) BinaryExpression -> . Expression DIVIDE Expression
    (8) BinaryExpression -> . Expression MOD Expression
    (9) BinaryExpression -> . Expression LEQ Expression
    (10) BinaryExpression -> . Expression GEQ Expression
    (11) BinaryExpression -> . Expression LT Expression
    (12) BinaryExpression -> . Expression GT Expression
    (13) BinaryExpression -> . Expression EQ Expression
    (14) BinaryExpression -> . Expression NE Expression
    (68) UnaryExpression -> . LiteralExpression
    (69) UnaryExpression -> . ParenthesesCallExpression
    (70) UnaryExpression -> . BracketCallExpression
    (71) UnaryExpression -> . DotExpression
    (72) UnaryExpression -> . ParenthesesExpression
    (73) UnaryExpression -> . DereferenceExpression
    (74) UnaryExpression -> . AddressExpression
    (75) UnaryExpression -> . AngleCallExpression
    (40) IdExpression -> . ID
    (41) IdPairExpression -> . ID ID
    (46) LiteralExpression -> . IntLiteral
    (47) LiteralExpression -> . BoolLiteral
    (48) ParenthesesCallExpression -> . Expression LPAREN ExpressionList RPAREN
    (19) BracketCallExpression -> . Expression LBRACKET Expression RBRACKET
    (28) DotExpression -> . Expression DOT Expression
    (49) ParenthesesExpression -> . LPAREN Expression RPAREN
    (27) DereferenceExpression -> . Expression DEREF
    (1) AddressExpression -> . ADDRESS Expression
    (2) AngleCallExpression -> . Expression LANGLE ExpressionList RANGLE
    (45) IntLiteral -> . INTL
    (18) BoolLiteral -> . BOOLL

    RPAREN          reduce using rule 77 (empty -> .)
    ID              shift and go to state 23
    LPAREN          shift and go to state 26
    ADDRESS         shift and go to state 27
    INTL            shift and go to state 28
    BOOLL           shift and go to state 29

    Expression                     shift and go to state 120
    ExpressionList                 shift and go to state 67
    empty                          shift and go to state 68
    BinaryExpression               shift and go to state 11
    UnaryExpression                shift and go to state 12
    IdExpression                   shift and go to state 13
    IdPairExpression               shift and go to state 14
    LiteralExpression              shift and go to state 15
    ParenthesesCallExpression      shift and go to state 16
    BracketCallExpression          shift and go to state 17
    DotExpression                  shift and go to state 18
    ParenthesesExpression          shift and go to state 19
    DereferenceExpression          shift and go to state 20
    AddressExpression              shift and go to state 21
    AngleCallExpression            shift and go to state 22
    IntLiteral                     shift and go to state 24
    BoolLiteral                    shift and go to state 25

state 108

    (44) InitStatement -> LET Expression . ASSIGNMENT Expression SEMICOLON
    (4) BinaryExpression -> Expression . PLUS Expression
    (5) BinaryExpression -> Expression . MINUS Expression
    (6) BinaryExpression -> Expression . TIMES Expression
    (7) BinaryExpression -> Expression . DIVIDE Expression
    (8) BinaryExpression -> Expression . MOD Expression
    (9) BinaryExpression -> Expression . LEQ Expression
    (10) BinaryExpression -> Expression . GEQ Expression
    (11) BinaryExpression -> Expression . LT Expression
    (12) BinaryExpression -> Expression . GT Expression
    (13) BinaryExpression -> Expression . EQ Expression
    (14) BinaryExpression -> Expression . NE Expression
    (48) ParenthesesCallExpression -> Expression . LPAREN ExpressionList RPAREN
    (19) BracketCallExpression -> Expression . LBRACKET Expression RBRACKET
    (28) DotExpression -> Expression . DOT Expression
    (27) DereferenceExpression -> Expression . DEREF
    (2) AngleCallExpression -> Expression . LANGLE ExpressionList RANGLE

    ASSIGNMENT      shift and go to state 121
    PLUS            shift and go to state 33
    MINUS           shift and go to state 34
    TIMES           shift and go to state 35
    DIVIDE          shift and go to state 36
    MOD             shift and go to state 37
    LEQ             shift and go to state 38
    GEQ             shift and go to state 39
    LT              shift and go to state 40
    GT              shift and go to state 41
    EQ              shift and go to state 42
    NE              shift and go to state 43
    LPAREN          shift and go to state 44
    LBRACKET        shift and go to state 45
    DOT             shift and go to state 46
    DEREF           shift and go to state 47
    LANGLE          shift and go to state 48


state 109

    (42) IfElseStatement -> IF LPAREN . Expression RPAREN Block ELSE Block
    (43) IfElseStatement -> IF LPAREN . Expression RPAREN Block
    (29) Expression -> . BinaryExpression
    (30) Expression -> . UnaryExpression
    (31) Expression -> . IdExpression
    (32) Expression -> . IdPairExpression
    (4) BinaryExpression -> . Expression PLUS Expression
    (5) BinaryExpression -> . Expression MINUS Expression
    (6) BinaryExpression -> . Expression TIMES Expression
    (7) BinaryExpression -> . Expression DIVIDE Expression
    (8) BinaryExpression -> . Expression MOD Expression
    (9) BinaryExpression -> . Expression LEQ Expression
    (10) BinaryExpression -> . Expression GEQ Expression
    (11) BinaryExpression -> . Expression LT Expression
    (12) BinaryExpression -> . Expression GT Expression
    (13) BinaryExpression -> . Expression EQ Expression
    (14) BinaryExpression -> . Expression NE Expression
    (68) UnaryExpression -> . LiteralExpression
    (69) UnaryExpression -> . ParenthesesCallExpression
    (70) UnaryExpression -> . BracketCallExpression
    (71) UnaryExpression -> . DotExpression
    (72) UnaryExpression -> . ParenthesesExpression
    (73) UnaryExpression -> . DereferenceExpression
    (74) UnaryExpression -> . AddressExpression
    (75) UnaryExpression -> . AngleCallExpression
    (40) IdExpression -> . ID
    (41) IdPairExpression -> . ID ID
    (46) LiteralExpression -> . IntLiteral
    (47) LiteralExpression -> . BoolLiteral
    (48) ParenthesesCallExpression -> . Expression LPAREN ExpressionList RPAREN
    (19) BracketCallExpression -> . Expression LBRACKET Expression RBRACKET
    (28) DotExpression -> . Expression DOT Expression
    (49) ParenthesesExpression -> . LPAREN Expression RPAREN
    (27) DereferenceExpression -> . Expression DEREF
    (1) AddressExpression -> . ADDRESS Expression
    (2) AngleCallExpression -> . Expression LANGLE ExpressionList RANGLE
    (45) IntLiteral -> . INTL
    (18) BoolLiteral -> . BOOLL

    ID              shift and go to state 23
    LPAREN          shift and go to state 26
    ADDRESS         shift and go to state 27
    INTL            shift and go to state 28
    BOOLL           shift and go to state 29

    Expression                     shift and go to state 122
    BinaryExpression               shift and go to state 11
    UnaryExpression                shift and go to state 12
    IdExpression                   shift and go to state 13
    IdPairExpression               shift and go to state 14
    LiteralExpression              shift and go to state 15
    ParenthesesCallExpression      shift and go to state 16
    BracketCallExpression          shift and go to state 17
    DotExpression                  shift and go to state 18
    ParenthesesExpression          shift and go to state 19
    DereferenceExpression          shift and go to state 20
    AddressExpression              shift and go to state 21
    AngleCallExpression            shift and go to state 22
    IntLiteral                     shift and go to state 24
    BoolLiteral                    shift and go to state 25

state 110

    (37) ForStatement -> FOR LPAREN . Statement Expression SEMICOLON Statement RPAREN Block
    (52) Statement -> . AssignmentStatement
    (53) Statement -> . InitStatement
    (54) Statement -> . ExpressionStatement
    (55) Statement -> . IfElseStatement
    (56) Statement -> . ForStatement
    (57) Statement -> . WhileStatement
    (58) Statement -> . BreakStatement
    (59) Statement -> . ReturnStatement
    (60) Statement -> . BlockStatement
    (61) Statement -> . BlankStatement
    (62) Statement -> . TypeStatement
    (63) Statement -> . DeclarationStatement
    (3) AssignmentStatement -> . Expression ASSIGNMENT Expression SEMICOLON
    (44) InitStatement -> . LET Expression ASSIGNMENT Expression SEMICOLON
    (36) ExpressionStatement -> . Expression SEMICOLON
    (42) IfElseStatement -> . IF LPAREN Expression RPAREN Block ELSE Block
    (43) IfElseStatement -> . IF LPAREN Expression RPAREN Block
    (37) ForStatement -> . FOR LPAREN Statement Expression SEMICOLON Statement RPAREN Block
    (76) WhileStatement -> . WHILE LPAREN Expression RPAREN Block
    (20) BreakStatement -> . BREAK IntLiteral SEMICOLON
    (21) BreakStatement -> . BREAK SEMICOLON
    (50) ReturnStatement -> . RETURN Expression SEMICOLON
    (51) ReturnStatement -> . RETURN SEMICOLON
    (17) BlockStatement -> . Block
    (15) BlankStatement -> . SEMICOLON
    (67) TypeStatement -> . TYPE Expression ASSIGNMENT Expression SEMICOLON
    (23) DeclarationStatement -> . Expression Expression SEMICOLON
    (29) Expression -> . BinaryExpression
    (30) Expression -> . UnaryExpression
    (31) Expression -> . IdExpression
    (32) Expression -> . IdPairExpression
    (16) Block -> . LBRACE StatementList RBRACE
    (4) BinaryExpression -> . Expression PLUS Expression
    (5) BinaryExpression -> . Expression MINUS Expression
    (6) BinaryExpression -> . Expression TIMES Expression
    (7) BinaryExpression -> . Expression DIVIDE Expression
    (8) BinaryExpression -> . Expression MOD Expression
    (9) BinaryExpression -> . Expression LEQ Expression
    (10) BinaryExpression -> . Expression GEQ Expression
    (11) BinaryExpression -> . Expression LT Expression
    (12) BinaryExpression -> . Expression GT Expression
    (13) BinaryExpression -> . Expression EQ Expression
    (14) BinaryExpression -> . Expression NE Expression
    (68) UnaryExpression -> . LiteralExpression
    (69) UnaryExpression -> . ParenthesesCallExpression
    (70) UnaryExpression -> . BracketCallExpression
    (71) UnaryExpression -> . DotExpression
    (72) UnaryExpression -> . ParenthesesExpression
    (73) UnaryExpression -> . DereferenceExpression
    (74) UnaryExpression -> . AddressExpression
    (75) UnaryExpression -> . AngleCallExpression
    (40) IdExpression -> . ID
    (41) IdPairExpression -> . ID ID
    (46) LiteralExpression -> . IntLiteral
    (47) LiteralExpression -> . BoolLiteral
    (48) ParenthesesCallExpression -> . Expression LPAREN ExpressionList RPAREN
    (19) BracketCallExpression -> . Expression LBRACKET Expression RBRACKET
    (28) DotExpression -> . Expression DOT Expression
    (49) ParenthesesExpression -> . LPAREN Expression RPAREN
    (27) DereferenceExpression -> . Expression DEREF
    (1) AddressExpression -> . ADDRESS Expression
    (2) AngleCallExpression -> . Expression LANGLE ExpressionList RANGLE
    (45) IntLiteral -> . INTL
    (18) BoolLiteral -> . BOOLL

    LET             shift and go to state 88
    IF              shift and go to state 89
    FOR             shift and go to state 91
    WHILE           shift and go to state 92
    BREAK           shift and go to state 93
    RETURN          shift and go to state 94
    SEMICOLON       shift and go to state 87
    TYPE            shift and go to state 95
    LBRACE          shift and go to state 49
    ID              shift and go to state 23
    LPAREN          shift and go to state 26
    ADDRESS         shift and go to state 27
    INTL            shift and go to state 28
    BOOLL           shift and go to state 29

    Statement                      shift and go to state 123
    Expression                     shift and go to state 86
    Block                          shift and go to state 90
    AssignmentStatement            shift and go to state 74
    InitStatement                  shift and go to state 75
    ExpressionStatement            shift and go to state 76
    IfElseStatement                shift and go to state 77
    ForStatement                   shift and go to state 78
    WhileStatement                 shift and go to state 79
    BreakStatement                 shift and go to state 80
    ReturnStatement                shift and go to state 81
    BlockStatement                 shift and go to state 82
    BlankStatement                 shift and go to state 83
    TypeStatement                  shift and go to state 84
    DeclarationStatement           shift and go to state 85
    IntLiteral                     shift and go to state 24
    BinaryExpression               shift and go to state 11
    UnaryExpression                shift and go to state 12
    IdExpression                   shift and go to state 13
    IdPairExpression               shift and go to state 14
    LiteralExpression              shift and go to state 15
    ParenthesesCallExpression      shift and go to state 16
    BracketCallExpression          shift and go to state 17
    DotExpression                  shift and go to state 18
    ParenthesesExpression          shift and go to state 19
    DereferenceExpression          shift and go to state 20
    AddressExpression              shift and go to state 21
    AngleCallExpression            shift and go to state 22
    BoolLiteral                    shift and go to state 25

state 111

    (76) WhileStatement -> WHILE LPAREN . Expression RPAREN Block
    (29) Expression -> . BinaryExpression
    (30) Expression -> . UnaryExpression
    (31) Expression -> . IdExpression
    (32) Expression -> . IdPairExpression
    (4) BinaryExpression -> . Expression PLUS Expression
    (5) BinaryExpression -> . Expression MINUS Expression
    (6) BinaryExpression -> . Expression TIMES Expression
    (7) BinaryExpression -> . Expression DIVIDE Expression
    (8) BinaryExpression -> . Expression MOD Expression
    (9) BinaryExpression -> . Expression LEQ Expression
    (10) BinaryExpression -> . Expression GEQ Expression
    (11) BinaryExpression -> . Expression LT Expression
    (12) BinaryExpression -> . Expression GT Expression
    (13) BinaryExpression -> . Expression EQ Expression
    (14) BinaryExpression -> . Expression NE Expression
    (68) UnaryExpression -> . LiteralExpression
    (69) UnaryExpression -> . ParenthesesCallExpression
    (70) UnaryExpression -> . BracketCallExpression
    (71) UnaryExpression -> . DotExpression
    (72) UnaryExpression -> . ParenthesesExpression
    (73) UnaryExpression -> . DereferenceExpression
    (74) UnaryExpression -> . AddressExpression
    (75) UnaryExpression -> . AngleCallExpression
    (40) IdExpression -> . ID
    (41) IdPairExpression -> . ID ID
    (46) LiteralExpression -> . IntLiteral
    (47) LiteralExpression -> . BoolLiteral
    (48) ParenthesesCallExpression -> . Expression LPAREN ExpressionList RPAREN
    (19) BracketCallExpression -> . Expression LBRACKET Expression RBRACKET
    (28) DotExpression -> . Expression DOT Expression
    (49) ParenthesesExpression -> . LPAREN Expression RPAREN
    (27) DereferenceExpression -> . Expression DEREF
    (1) AddressExpression -> . ADDRESS Expression
    (2) AngleCallExpression -> . Expression LANGLE ExpressionList RANGLE
    (45) IntLiteral -> . INTL
    (18) BoolLiteral -> . BOOLL

    ID              shift and go to state 23
    LPAREN          shift and go to state 26
    ADDRESS         shift and go to state 27
    INTL            shift and go to state 28
    BOOLL           shift and go to state 29

    Expression                     shift and go to state 124
    BinaryExpression               shift and go to state 11
    UnaryExpression                shift and go to state 12
    IdExpression                   shift and go to state 13
    IdPairExpression               shift and go to state 14
    LiteralExpression              shift and go to state 15
    ParenthesesCallExpression      shift and go to state 16
    BracketCallExpression          shift and go to state 17
    DotExpression                  shift and go to state 18
    ParenthesesExpression          shift and go to state 19
    DereferenceExpression          shift and go to state 20
    AddressExpression              shift and go to state 21
    AngleCallExpression            shift and go to state 22
    IntLiteral                     shift and go to state 24
    BoolLiteral                    shift and go to state 25

state 112

    (20) BreakStatement -> BREAK IntLiteral . SEMICOLON

    SEMICOLON       shift and go to state 125


state 113

    (21) BreakStatement -> BREAK SEMICOLON .

    LET             reduce using rule 21 (BreakStatement -> BREAK SEMICOLON .)
    IF              reduce using rule 21 (BreakStatement -> BREAK SEMICOLON .)
    FOR             reduce using rule 21 (BreakStatement -> BREAK SEMICOLON .)
    WHILE           reduce using rule 21 (BreakStatement -> BREAK SEMICOLON .)
    BREAK           reduce using rule 21 (BreakStatement -> BREAK SEMICOLON .)
    RETURN          reduce using rule 21 (BreakStatement -> BREAK SEMICOLON .)
    SEMICOLON       reduce using rule 21 (BreakStatement -> BREAK SEMICOLON .)
    TYPE            reduce using rule 21 (BreakStatement -> BREAK SEMICOLON .)
    LBRACE          reduce using rule 21 (BreakStatement -> BREAK SEMICOLON .)
    ID              reduce using rule 21 (BreakStatement -> BREAK SEMICOLON .)
    LPAREN          reduce using rule 21 (BreakStatement -> BREAK SEMICOLON .)
    ADDRESS         reduce using rule 21 (BreakStatement -> BREAK SEMICOLON .)
    INTL            reduce using rule 21 (BreakStatement -> BREAK SEMICOLON .)
    BOOLL           reduce using rule 21 (BreakStatement -> BREAK SEMICOLON .)
    RBRACE          reduce using rule 21 (BreakStatement -> BREAK SEMICOLON .)
    RPAREN          reduce using rule 21 (BreakStatement -> BREAK SEMICOLON .)


state 114

    (50) ReturnStatement -> RETURN Expression . SEMICOLON
    (4) BinaryExpression -> Expression . PLUS Expression
    (5) BinaryExpression -> Expression . MINUS Expression
    (6) BinaryExpression -> Expression . TIMES Expression
    (7) BinaryExpression -> Expression . DIVIDE Expression
    (8) BinaryExpression -> Expression . MOD Expression
    (9) BinaryExpression -> Expression . LEQ Expression
    (10) BinaryExpression -> Expression . GEQ Expression
    (11) BinaryExpression -> Expression . LT Expression
    (12) BinaryExpression -> Expression . GT Expression
    (13) BinaryExpression -> Expression . EQ Expression
    (14) BinaryExpression -> Expression . NE Expression
    (48) ParenthesesCallExpression -> Expression . LPAREN ExpressionList RPAREN
    (19) BracketCallExpression -> Expression . LBRACKET Expression RBRACKET
    (28) DotExpression -> Expression . DOT Expression
    (27) DereferenceExpression -> Expression . DEREF
    (2) AngleCallExpression -> Expression . LANGLE ExpressionList RANGLE

    SEMICOLON       shift and go to state 126
    PLUS            shift and go to state 33
    MINUS           shift and go to state 34
    TIMES           shift and go to state 35
    DIVIDE          shift and go to state 36
    MOD             shift and go to state 37
    LEQ             shift and go to state 38
    GEQ             shift and go to state 39
    LT              shift and go to state 40
    GT              shift and go to state 41
    EQ              shift and go to state 42
    NE              shift and go to state 43
    LPAREN          shift and go to state 44
    LBRACKET        shift and go to state 45
    DOT             shift and go to state 46
    DEREF           shift and go to state 47
    LANGLE          shift and go to state 48


state 115

    (51) ReturnStatement -> RETURN SEMICOLON .

    LET             reduce using rule 51 (ReturnStatement -> RETURN SEMICOLON .)
    IF              reduce using rule 51 (ReturnStatement -> RETURN SEMICOLON .)
    FOR             reduce using rule 51 (ReturnStatement -> RETURN SEMICOLON .)
    WHILE           reduce using rule 51 (ReturnStatement -> RETURN SEMICOLON .)
    BREAK           reduce using rule 51 (ReturnStatement -> RETURN SEMICOLON .)
    RETURN          reduce using rule 51 (ReturnStatement -> RETURN SEMICOLON .)
    SEMICOLON       reduce using rule 51 (ReturnStatement -> RETURN SEMICOLON .)
    TYPE            reduce using rule 51 (ReturnStatement -> RETURN SEMICOLON .)
    LBRACE          reduce using rule 51 (ReturnStatement -> RETURN SEMICOLON .)
    ID              reduce using rule 51 (ReturnStatement -> RETURN SEMICOLON .)
    LPAREN          reduce using rule 51 (ReturnStatement -> RETURN SEMICOLON .)
    ADDRESS         reduce using rule 51 (ReturnStatement -> RETURN SEMICOLON .)
    INTL            reduce using rule 51 (ReturnStatement -> RETURN SEMICOLON .)
    BOOLL           reduce using rule 51 (ReturnStatement -> RETURN SEMICOLON .)
    RBRACE          reduce using rule 51 (ReturnStatement -> RETURN SEMICOLON .)
    RPAREN          reduce using rule 51 (ReturnStatement -> RETURN SEMICOLON .)


state 116

    (67) TypeStatement -> TYPE Expression . ASSIGNMENT Expression SEMICOLON
    (4) BinaryExpression -> Expression . PLUS Expression
    (5) BinaryExpression -> Expression . MINUS Expression
    (6) BinaryExpression -> Expression . TIMES Expression
    (7) BinaryExpression -> Expression . DIVIDE Expression
    (8) BinaryExpression -> Expression . MOD Expression
    (9) BinaryExpression -> Expression . LEQ Expression
    (10) BinaryExpression -> Expression . GEQ Expression
    (11) BinaryExpression -> Expression . LT Expression
    (12) BinaryExpression -> Expression . GT Expression
    (13) BinaryExpression -> Expression . EQ Expression
    (14) BinaryExpression -> Expression . NE Expression
    (48) ParenthesesCallExpression -> Expression . LPAREN ExpressionList RPAREN
    (19) BracketCallExpression -> Expression . LBRACKET Expression RBRACKET
    (28) DotExpression -> Expression . DOT Expression
    (27) DereferenceExpression -> Expression . DEREF
    (2) AngleCallExpression -> Expression . LANGLE ExpressionList RANGLE

    ASSIGNMENT      shift and go to state 127
    PLUS            shift and go to state 33
    MINUS           shift and go to state 34
    TIMES           shift and go to state 35
    DIVIDE          shift and go to state 36
    MOD             shift and go to state 37
    LEQ             shift and go to state 38
    GEQ             shift and go to state 39
    LT              shift and go to state 40
    GT              shift and go to state 41
    EQ              shift and go to state 42
    NE              shift and go to state 43
    LPAREN          shift and go to state 44
    LBRACKET        shift and go to state 45
    DOT             shift and go to state 46
    DEREF           shift and go to state 47
    LANGLE          shift and go to state 48


state 117

    (33) ExpressionList -> Expression COMMA ExpressionList .

    RPAREN          reduce using rule 33 (ExpressionList -> Expression COMMA ExpressionList .)
    RANGLE          reduce using rule 33 (ExpressionList -> Expression COMMA ExpressionList .)


state 118

    (23) DeclarationStatement -> Expression Expression SEMICOLON .

    LET             reduce using rule 23 (DeclarationStatement -> Expression Expression SEMICOLON .)
    IF              reduce using rule 23 (DeclarationStatement -> Expression Expression SEMICOLON .)
    FOR             reduce using rule 23 (DeclarationStatement -> Expression Expression SEMICOLON .)
    WHILE           reduce using rule 23 (DeclarationStatement -> Expression Expression SEMICOLON .)
    BREAK           reduce using rule 23 (DeclarationStatement -> Expression Expression SEMICOLON .)
    RETURN          reduce using rule 23 (DeclarationStatement -> Expression Expression SEMICOLON .)
    SEMICOLON       reduce using rule 23 (DeclarationStatement -> Expression Expression SEMICOLON .)
    TYPE            reduce using rule 23 (DeclarationStatement -> Expression Expression SEMICOLON .)
    LBRACE          reduce using rule 23 (DeclarationStatement -> Expression Expression SEMICOLON .)
    ID              reduce using rule 23 (DeclarationStatement -> Expression Expression SEMICOLON .)
    LPAREN          reduce using rule 23 (DeclarationStatement -> Expression Expression SEMICOLON .)
    ADDRESS         reduce using rule 23 (DeclarationStatement -> Expression Expression SEMICOLON .)
    INTL            reduce using rule 23 (DeclarationStatement -> Expression Expression SEMICOLON .)
    BOOLL           reduce using rule 23 (DeclarationStatement -> Expression Expression SEMICOLON .)
    RBRACE          reduce using rule 23 (DeclarationStatement -> Expression Expression SEMICOLON .)
    RPAREN          reduce using rule 23 (DeclarationStatement -> Expression Expression SEMICOLON .)


state 119

    (3) AssignmentStatement -> Expression ASSIGNMENT Expression . SEMICOLON
    (4) BinaryExpression -> Expression . PLUS Expression
    (5) BinaryExpression -> Expression . MINUS Expression
    (6) BinaryExpression -> Expression . TIMES Expression
    (7) BinaryExpression -> Expression . DIVIDE Expression
    (8) BinaryExpression -> Expression . MOD Expression
    (9) BinaryExpression -> Expression . LEQ Expression
    (10) BinaryExpression -> Expression . GEQ Expression
    (11) BinaryExpression -> Expression . LT Expression
    (12) BinaryExpression -> Expression . GT Expression
    (13) BinaryExpression -> Expression . EQ Expression
    (14) BinaryExpression -> Expression . NE Expression
    (48) ParenthesesCallExpression -> Expression . LPAREN ExpressionList RPAREN
    (19) BracketCallExpression -> Expression . LBRACKET Expression RBRACKET
    (28) DotExpression -> Expression . DOT Expression
    (27) DereferenceExpression -> Expression . DEREF
    (2) AngleCallExpression -> Expression . LANGLE ExpressionList RANGLE

    SEMICOLON       shift and go to state 128
    PLUS            shift and go to state 33
    MINUS           shift and go to state 34
    TIMES           shift and go to state 35
    DIVIDE          shift and go to state 36
    MOD             shift and go to state 37
    LEQ             shift and go to state 38
    GEQ             shift and go to state 39
    LT              shift and go to state 40
    GT              shift and go to state 41
    EQ              shift and go to state 42
    NE              shift and go to state 43
    LPAREN          shift and go to state 44
    LBRACKET        shift and go to state 45
    DOT             shift and go to state 46
    DEREF           shift and go to state 47
    LANGLE          shift and go to state 48


state 120

    (49) ParenthesesExpression -> LPAREN Expression . RPAREN
    (33) ExpressionList -> Expression . COMMA ExpressionList
    (34) ExpressionList -> Expression .
    (4) BinaryExpression -> Expression . PLUS Expression
    (5) BinaryExpression -> Expression . MINUS Expression
    (6) BinaryExpression -> Expression . TIMES Expression
    (7) BinaryExpression -> Expression . DIVIDE Expression
    (8) BinaryExpression -> Expression . MOD Expression
    (9) BinaryExpression -> Expression . LEQ Expression
    (10) BinaryExpression -> Expression . GEQ Expression
    (11) BinaryExpression -> Expression . LT Expression
    (12) BinaryExpression -> Expression . GT Expression
    (13) BinaryExpression -> Expression . EQ Expression
    (14) BinaryExpression -> Expression . NE Expression
    (48) ParenthesesCallExpression -> Expression . LPAREN ExpressionList RPAREN
    (19) BracketCallExpression -> Expression . LBRACKET Expression RBRACKET
    (28) DotExpression -> Expression . DOT Expression
    (27) DereferenceExpression -> Expression . DEREF
    (2) AngleCallExpression -> Expression . LANGLE ExpressionList RANGLE

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 96
    COMMA           shift and go to state 98
    PLUS            shift and go to state 33
    MINUS           shift and go to state 34
    TIMES           shift and go to state 35
    DIVIDE          shift and go to state 36
    MOD             shift and go to state 37
    LEQ             shift and go to state 38
    GEQ             shift and go to state 39
    LT              shift and go to state 40
    GT              shift and go to state 41
    EQ              shift and go to state 42
    NE              shift and go to state 43
    LPAREN          shift and go to state 44
    LBRACKET        shift and go to state 45
    DOT             shift and go to state 46
    DEREF           shift and go to state 47
    LANGLE          shift and go to state 48

  ! RPAREN          [ reduce using rule 34 (ExpressionList -> Expression .) ]


state 121

    (44) InitStatement -> LET Expression ASSIGNMENT . Expression SEMICOLON
    (29) Expression -> . BinaryExpression
    (30) Expression -> . UnaryExpression
    (31) Expression -> . IdExpression
    (32) Expression -> . IdPairExpression
    (4) BinaryExpression -> . Expression PLUS Expression
    (5) BinaryExpression -> . Expression MINUS Expression
    (6) BinaryExpression -> . Expression TIMES Expression
    (7) BinaryExpression -> . Expression DIVIDE Expression
    (8) BinaryExpression -> . Expression MOD Expression
    (9) BinaryExpression -> . Expression LEQ Expression
    (10) BinaryExpression -> . Expression GEQ Expression
    (11) BinaryExpression -> . Expression LT Expression
    (12) BinaryExpression -> . Expression GT Expression
    (13) BinaryExpression -> . Expression EQ Expression
    (14) BinaryExpression -> . Expression NE Expression
    (68) UnaryExpression -> . LiteralExpression
    (69) UnaryExpression -> . ParenthesesCallExpression
    (70) UnaryExpression -> . BracketCallExpression
    (71) UnaryExpression -> . DotExpression
    (72) UnaryExpression -> . ParenthesesExpression
    (73) UnaryExpression -> . DereferenceExpression
    (74) UnaryExpression -> . AddressExpression
    (75) UnaryExpression -> . AngleCallExpression
    (40) IdExpression -> . ID
    (41) IdPairExpression -> . ID ID
    (46) LiteralExpression -> . IntLiteral
    (47) LiteralExpression -> . BoolLiteral
    (48) ParenthesesCallExpression -> . Expression LPAREN ExpressionList RPAREN
    (19) BracketCallExpression -> . Expression LBRACKET Expression RBRACKET
    (28) DotExpression -> . Expression DOT Expression
    (49) ParenthesesExpression -> . LPAREN Expression RPAREN
    (27) DereferenceExpression -> . Expression DEREF
    (1) AddressExpression -> . ADDRESS Expression
    (2) AngleCallExpression -> . Expression LANGLE ExpressionList RANGLE
    (45) IntLiteral -> . INTL
    (18) BoolLiteral -> . BOOLL

    ID              shift and go to state 23
    LPAREN          shift and go to state 26
    ADDRESS         shift and go to state 27
    INTL            shift and go to state 28
    BOOLL           shift and go to state 29

    Expression                     shift and go to state 129
    BinaryExpression               shift and go to state 11
    UnaryExpression                shift and go to state 12
    IdExpression                   shift and go to state 13
    IdPairExpression               shift and go to state 14
    LiteralExpression              shift and go to state 15
    ParenthesesCallExpression      shift and go to state 16
    BracketCallExpression          shift and go to state 17
    DotExpression                  shift and go to state 18
    ParenthesesExpression          shift and go to state 19
    DereferenceExpression          shift and go to state 20
    AddressExpression              shift and go to state 21
    AngleCallExpression            shift and go to state 22
    IntLiteral                     shift and go to state 24
    BoolLiteral                    shift and go to state 25

state 122

    (42) IfElseStatement -> IF LPAREN Expression . RPAREN Block ELSE Block
    (43) IfElseStatement -> IF LPAREN Expression . RPAREN Block
    (4) BinaryExpression -> Expression . PLUS Expression
    (5) BinaryExpression -> Expression . MINUS Expression
    (6) BinaryExpression -> Expression . TIMES Expression
    (7) BinaryExpression -> Expression . DIVIDE Expression
    (8) BinaryExpression -> Expression . MOD Expression
    (9) BinaryExpression -> Expression . LEQ Expression
    (10) BinaryExpression -> Expression . GEQ Expression
    (11) BinaryExpression -> Expression . LT Expression
    (12) BinaryExpression -> Expression . GT Expression
    (13) BinaryExpression -> Expression . EQ Expression
    (14) BinaryExpression -> Expression . NE Expression
    (48) ParenthesesCallExpression -> Expression . LPAREN ExpressionList RPAREN
    (19) BracketCallExpression -> Expression . LBRACKET Expression RBRACKET
    (28) DotExpression -> Expression . DOT Expression
    (27) DereferenceExpression -> Expression . DEREF
    (2) AngleCallExpression -> Expression . LANGLE ExpressionList RANGLE

    RPAREN          shift and go to state 130
    PLUS            shift and go to state 33
    MINUS           shift and go to state 34
    TIMES           shift and go to state 35
    DIVIDE          shift and go to state 36
    MOD             shift and go to state 37
    LEQ             shift and go to state 38
    GEQ             shift and go to state 39
    LT              shift and go to state 40
    GT              shift and go to state 41
    EQ              shift and go to state 42
    NE              shift and go to state 43
    LPAREN          shift and go to state 44
    LBRACKET        shift and go to state 45
    DOT             shift and go to state 46
    DEREF           shift and go to state 47
    LANGLE          shift and go to state 48


state 123

    (37) ForStatement -> FOR LPAREN Statement . Expression SEMICOLON Statement RPAREN Block
    (29) Expression -> . BinaryExpression
    (30) Expression -> . UnaryExpression
    (31) Expression -> . IdExpression
    (32) Expression -> . IdPairExpression
    (4) BinaryExpression -> . Expression PLUS Expression
    (5) BinaryExpression -> . Expression MINUS Expression
    (6) BinaryExpression -> . Expression TIMES Expression
    (7) BinaryExpression -> . Expression DIVIDE Expression
    (8) BinaryExpression -> . Expression MOD Expression
    (9) BinaryExpression -> . Expression LEQ Expression
    (10) BinaryExpression -> . Expression GEQ Expression
    (11) BinaryExpression -> . Expression LT Expression
    (12) BinaryExpression -> . Expression GT Expression
    (13) BinaryExpression -> . Expression EQ Expression
    (14) BinaryExpression -> . Expression NE Expression
    (68) UnaryExpression -> . LiteralExpression
    (69) UnaryExpression -> . ParenthesesCallExpression
    (70) UnaryExpression -> . BracketCallExpression
    (71) UnaryExpression -> . DotExpression
    (72) UnaryExpression -> . ParenthesesExpression
    (73) UnaryExpression -> . DereferenceExpression
    (74) UnaryExpression -> . AddressExpression
    (75) UnaryExpression -> . AngleCallExpression
    (40) IdExpression -> . ID
    (41) IdPairExpression -> . ID ID
    (46) LiteralExpression -> . IntLiteral
    (47) LiteralExpression -> . BoolLiteral
    (48) ParenthesesCallExpression -> . Expression LPAREN ExpressionList RPAREN
    (19) BracketCallExpression -> . Expression LBRACKET Expression RBRACKET
    (28) DotExpression -> . Expression DOT Expression
    (49) ParenthesesExpression -> . LPAREN Expression RPAREN
    (27) DereferenceExpression -> . Expression DEREF
    (1) AddressExpression -> . ADDRESS Expression
    (2) AngleCallExpression -> . Expression LANGLE ExpressionList RANGLE
    (45) IntLiteral -> . INTL
    (18) BoolLiteral -> . BOOLL

    ID              shift and go to state 23
    LPAREN          shift and go to state 26
    ADDRESS         shift and go to state 27
    INTL            shift and go to state 28
    BOOLL           shift and go to state 29

    Expression                     shift and go to state 131
    BinaryExpression               shift and go to state 11
    UnaryExpression                shift and go to state 12
    IdExpression                   shift and go to state 13
    IdPairExpression               shift and go to state 14
    LiteralExpression              shift and go to state 15
    ParenthesesCallExpression      shift and go to state 16
    BracketCallExpression          shift and go to state 17
    DotExpression                  shift and go to state 18
    ParenthesesExpression          shift and go to state 19
    DereferenceExpression          shift and go to state 20
    AddressExpression              shift and go to state 21
    AngleCallExpression            shift and go to state 22
    IntLiteral                     shift and go to state 24
    BoolLiteral                    shift and go to state 25

state 124

    (76) WhileStatement -> WHILE LPAREN Expression . RPAREN Block
    (4) BinaryExpression -> Expression . PLUS Expression
    (5) BinaryExpression -> Expression . MINUS Expression
    (6) BinaryExpression -> Expression . TIMES Expression
    (7) BinaryExpression -> Expression . DIVIDE Expression
    (8) BinaryExpression -> Expression . MOD Expression
    (9) BinaryExpression -> Expression . LEQ Expression
    (10) BinaryExpression -> Expression . GEQ Expression
    (11) BinaryExpression -> Expression . LT Expression
    (12) BinaryExpression -> Expression . GT Expression
    (13) BinaryExpression -> Expression . EQ Expression
    (14) BinaryExpression -> Expression . NE Expression
    (48) ParenthesesCallExpression -> Expression . LPAREN ExpressionList RPAREN
    (19) BracketCallExpression -> Expression . LBRACKET Expression RBRACKET
    (28) DotExpression -> Expression . DOT Expression
    (27) DereferenceExpression -> Expression . DEREF
    (2) AngleCallExpression -> Expression . LANGLE ExpressionList RANGLE

    RPAREN          shift and go to state 132
    PLUS            shift and go to state 33
    MINUS           shift and go to state 34
    TIMES           shift and go to state 35
    DIVIDE          shift and go to state 36
    MOD             shift and go to state 37
    LEQ             shift and go to state 38
    GEQ             shift and go to state 39
    LT              shift and go to state 40
    GT              shift and go to state 41
    EQ              shift and go to state 42
    NE              shift and go to state 43
    LPAREN          shift and go to state 44
    LBRACKET        shift and go to state 45
    DOT             shift and go to state 46
    DEREF           shift and go to state 47
    LANGLE          shift and go to state 48


state 125

    (20) BreakStatement -> BREAK IntLiteral SEMICOLON .

    LET             reduce using rule 20 (BreakStatement -> BREAK IntLiteral SEMICOLON .)
    IF              reduce using rule 20 (BreakStatement -> BREAK IntLiteral SEMICOLON .)
    FOR             reduce using rule 20 (BreakStatement -> BREAK IntLiteral SEMICOLON .)
    WHILE           reduce using rule 20 (BreakStatement -> BREAK IntLiteral SEMICOLON .)
    BREAK           reduce using rule 20 (BreakStatement -> BREAK IntLiteral SEMICOLON .)
    RETURN          reduce using rule 20 (BreakStatement -> BREAK IntLiteral SEMICOLON .)
    SEMICOLON       reduce using rule 20 (BreakStatement -> BREAK IntLiteral SEMICOLON .)
    TYPE            reduce using rule 20 (BreakStatement -> BREAK IntLiteral SEMICOLON .)
    LBRACE          reduce using rule 20 (BreakStatement -> BREAK IntLiteral SEMICOLON .)
    ID              reduce using rule 20 (BreakStatement -> BREAK IntLiteral SEMICOLON .)
    LPAREN          reduce using rule 20 (BreakStatement -> BREAK IntLiteral SEMICOLON .)
    ADDRESS         reduce using rule 20 (BreakStatement -> BREAK IntLiteral SEMICOLON .)
    INTL            reduce using rule 20 (BreakStatement -> BREAK IntLiteral SEMICOLON .)
    BOOLL           reduce using rule 20 (BreakStatement -> BREAK IntLiteral SEMICOLON .)
    RBRACE          reduce using rule 20 (BreakStatement -> BREAK IntLiteral SEMICOLON .)
    RPAREN          reduce using rule 20 (BreakStatement -> BREAK IntLiteral SEMICOLON .)


state 126

    (50) ReturnStatement -> RETURN Expression SEMICOLON .

    LET             reduce using rule 50 (ReturnStatement -> RETURN Expression SEMICOLON .)
    IF              reduce using rule 50 (ReturnStatement -> RETURN Expression SEMICOLON .)
    FOR             reduce using rule 50 (ReturnStatement -> RETURN Expression SEMICOLON .)
    WHILE           reduce using rule 50 (ReturnStatement -> RETURN Expression SEMICOLON .)
    BREAK           reduce using rule 50 (ReturnStatement -> RETURN Expression SEMICOLON .)
    RETURN          reduce using rule 50 (ReturnStatement -> RETURN Expression SEMICOLON .)
    SEMICOLON       reduce using rule 50 (ReturnStatement -> RETURN Expression SEMICOLON .)
    TYPE            reduce using rule 50 (ReturnStatement -> RETURN Expression SEMICOLON .)
    LBRACE          reduce using rule 50 (ReturnStatement -> RETURN Expression SEMICOLON .)
    ID              reduce using rule 50 (ReturnStatement -> RETURN Expression SEMICOLON .)
    LPAREN          reduce using rule 50 (ReturnStatement -> RETURN Expression SEMICOLON .)
    ADDRESS         reduce using rule 50 (ReturnStatement -> RETURN Expression SEMICOLON .)
    INTL            reduce using rule 50 (ReturnStatement -> RETURN Expression SEMICOLON .)
    BOOLL           reduce using rule 50 (ReturnStatement -> RETURN Expression SEMICOLON .)
    RBRACE          reduce using rule 50 (ReturnStatement -> RETURN Expression SEMICOLON .)
    RPAREN          reduce using rule 50 (ReturnStatement -> RETURN Expression SEMICOLON .)


state 127

    (67) TypeStatement -> TYPE Expression ASSIGNMENT . Expression SEMICOLON
    (29) Expression -> . BinaryExpression
    (30) Expression -> . UnaryExpression
    (31) Expression -> . IdExpression
    (32) Expression -> . IdPairExpression
    (4) BinaryExpression -> . Expression PLUS Expression
    (5) BinaryExpression -> . Expression MINUS Expression
    (6) BinaryExpression -> . Expression TIMES Expression
    (7) BinaryExpression -> . Expression DIVIDE Expression
    (8) BinaryExpression -> . Expression MOD Expression
    (9) BinaryExpression -> . Expression LEQ Expression
    (10) BinaryExpression -> . Expression GEQ Expression
    (11) BinaryExpression -> . Expression LT Expression
    (12) BinaryExpression -> . Expression GT Expression
    (13) BinaryExpression -> . Expression EQ Expression
    (14) BinaryExpression -> . Expression NE Expression
    (68) UnaryExpression -> . LiteralExpression
    (69) UnaryExpression -> . ParenthesesCallExpression
    (70) UnaryExpression -> . BracketCallExpression
    (71) UnaryExpression -> . DotExpression
    (72) UnaryExpression -> . ParenthesesExpression
    (73) UnaryExpression -> . DereferenceExpression
    (74) UnaryExpression -> . AddressExpression
    (75) UnaryExpression -> . AngleCallExpression
    (40) IdExpression -> . ID
    (41) IdPairExpression -> . ID ID
    (46) LiteralExpression -> . IntLiteral
    (47) LiteralExpression -> . BoolLiteral
    (48) ParenthesesCallExpression -> . Expression LPAREN ExpressionList RPAREN
    (19) BracketCallExpression -> . Expression LBRACKET Expression RBRACKET
    (28) DotExpression -> . Expression DOT Expression
    (49) ParenthesesExpression -> . LPAREN Expression RPAREN
    (27) DereferenceExpression -> . Expression DEREF
    (1) AddressExpression -> . ADDRESS Expression
    (2) AngleCallExpression -> . Expression LANGLE ExpressionList RANGLE
    (45) IntLiteral -> . INTL
    (18) BoolLiteral -> . BOOLL

    ID              shift and go to state 23
    LPAREN          shift and go to state 26
    ADDRESS         shift and go to state 27
    INTL            shift and go to state 28
    BOOLL           shift and go to state 29

    Expression                     shift and go to state 133
    BinaryExpression               shift and go to state 11
    UnaryExpression                shift and go to state 12
    IdExpression                   shift and go to state 13
    IdPairExpression               shift and go to state 14
    LiteralExpression              shift and go to state 15
    ParenthesesCallExpression      shift and go to state 16
    BracketCallExpression          shift and go to state 17
    DotExpression                  shift and go to state 18
    ParenthesesExpression          shift and go to state 19
    DereferenceExpression          shift and go to state 20
    AddressExpression              shift and go to state 21
    AngleCallExpression            shift and go to state 22
    IntLiteral                     shift and go to state 24
    BoolLiteral                    shift and go to state 25

state 128

    (3) AssignmentStatement -> Expression ASSIGNMENT Expression SEMICOLON .

    LET             reduce using rule 3 (AssignmentStatement -> Expression ASSIGNMENT Expression SEMICOLON .)
    IF              reduce using rule 3 (AssignmentStatement -> Expression ASSIGNMENT Expression SEMICOLON .)
    FOR             reduce using rule 3 (AssignmentStatement -> Expression ASSIGNMENT Expression SEMICOLON .)
    WHILE           reduce using rule 3 (AssignmentStatement -> Expression ASSIGNMENT Expression SEMICOLON .)
    BREAK           reduce using rule 3 (AssignmentStatement -> Expression ASSIGNMENT Expression SEMICOLON .)
    RETURN          reduce using rule 3 (AssignmentStatement -> Expression ASSIGNMENT Expression SEMICOLON .)
    SEMICOLON       reduce using rule 3 (AssignmentStatement -> Expression ASSIGNMENT Expression SEMICOLON .)
    TYPE            reduce using rule 3 (AssignmentStatement -> Expression ASSIGNMENT Expression SEMICOLON .)
    LBRACE          reduce using rule 3 (AssignmentStatement -> Expression ASSIGNMENT Expression SEMICOLON .)
    ID              reduce using rule 3 (AssignmentStatement -> Expression ASSIGNMENT Expression SEMICOLON .)
    LPAREN          reduce using rule 3 (AssignmentStatement -> Expression ASSIGNMENT Expression SEMICOLON .)
    ADDRESS         reduce using rule 3 (AssignmentStatement -> Expression ASSIGNMENT Expression SEMICOLON .)
    INTL            reduce using rule 3 (AssignmentStatement -> Expression ASSIGNMENT Expression SEMICOLON .)
    BOOLL           reduce using rule 3 (AssignmentStatement -> Expression ASSIGNMENT Expression SEMICOLON .)
    RBRACE          reduce using rule 3 (AssignmentStatement -> Expression ASSIGNMENT Expression SEMICOLON .)
    RPAREN          reduce using rule 3 (AssignmentStatement -> Expression ASSIGNMENT Expression SEMICOLON .)


state 129

    (44) InitStatement -> LET Expression ASSIGNMENT Expression . SEMICOLON
    (4) BinaryExpression -> Expression . PLUS Expression
    (5) BinaryExpression -> Expression . MINUS Expression
    (6) BinaryExpression -> Expression . TIMES Expression
    (7) BinaryExpression -> Expression . DIVIDE Expression
    (8) BinaryExpression -> Expression . MOD Expression
    (9) BinaryExpression -> Expression . LEQ Expression
    (10) BinaryExpression -> Expression . GEQ Expression
    (11) BinaryExpression -> Expression . LT Expression
    (12) BinaryExpression -> Expression . GT Expression
    (13) BinaryExpression -> Expression . EQ Expression
    (14) BinaryExpression -> Expression . NE Expression
    (48) ParenthesesCallExpression -> Expression . LPAREN ExpressionList RPAREN
    (19) BracketCallExpression -> Expression . LBRACKET Expression RBRACKET
    (28) DotExpression -> Expression . DOT Expression
    (27) DereferenceExpression -> Expression . DEREF
    (2) AngleCallExpression -> Expression . LANGLE ExpressionList RANGLE

    SEMICOLON       shift and go to state 134
    PLUS            shift and go to state 33
    MINUS           shift and go to state 34
    TIMES           shift and go to state 35
    DIVIDE          shift and go to state 36
    MOD             shift and go to state 37
    LEQ             shift and go to state 38
    GEQ             shift and go to state 39
    LT              shift and go to state 40
    GT              shift and go to state 41
    EQ              shift and go to state 42
    NE              shift and go to state 43
    LPAREN          shift and go to state 44
    LBRACKET        shift and go to state 45
    DOT             shift and go to state 46
    DEREF           shift and go to state 47
    LANGLE          shift and go to state 48


state 130

    (42) IfElseStatement -> IF LPAREN Expression RPAREN . Block ELSE Block
    (43) IfElseStatement -> IF LPAREN Expression RPAREN . Block
    (16) Block -> . LBRACE StatementList RBRACE

    LBRACE          shift and go to state 49

    Block                          shift and go to state 135

state 131

    (37) ForStatement -> FOR LPAREN Statement Expression . SEMICOLON Statement RPAREN Block
    (4) BinaryExpression -> Expression . PLUS Expression
    (5) BinaryExpression -> Expression . MINUS Expression
    (6) BinaryExpression -> Expression . TIMES Expression
    (7) BinaryExpression -> Expression . DIVIDE Expression
    (8) BinaryExpression -> Expression . MOD Expression
    (9) BinaryExpression -> Expression . LEQ Expression
    (10) BinaryExpression -> Expression . GEQ Expression
    (11) BinaryExpression -> Expression . LT Expression
    (12) BinaryExpression -> Expression . GT Expression
    (13) BinaryExpression -> Expression . EQ Expression
    (14) BinaryExpression -> Expression . NE Expression
    (48) ParenthesesCallExpression -> Expression . LPAREN ExpressionList RPAREN
    (19) BracketCallExpression -> Expression . LBRACKET Expression RBRACKET
    (28) DotExpression -> Expression . DOT Expression
    (27) DereferenceExpression -> Expression . DEREF
    (2) AngleCallExpression -> Expression . LANGLE ExpressionList RANGLE

    SEMICOLON       shift and go to state 136
    PLUS            shift and go to state 33
    MINUS           shift and go to state 34
    TIMES           shift and go to state 35
    DIVIDE          shift and go to state 36
    MOD             shift and go to state 37
    LEQ             shift and go to state 38
    GEQ             shift and go to state 39
    LT              shift and go to state 40
    GT              shift and go to state 41
    EQ              shift and go to state 42
    NE              shift and go to state 43
    LPAREN          shift and go to state 44
    LBRACKET        shift and go to state 45
    DOT             shift and go to state 46
    DEREF           shift and go to state 47
    LANGLE          shift and go to state 48


state 132

    (76) WhileStatement -> WHILE LPAREN Expression RPAREN . Block
    (16) Block -> . LBRACE StatementList RBRACE

    LBRACE          shift and go to state 49

    Block                          shift and go to state 137

state 133

    (67) TypeStatement -> TYPE Expression ASSIGNMENT Expression . SEMICOLON
    (4) BinaryExpression -> Expression . PLUS Expression
    (5) BinaryExpression -> Expression . MINUS Expression
    (6) BinaryExpression -> Expression . TIMES Expression
    (7) BinaryExpression -> Expression . DIVIDE Expression
    (8) BinaryExpression -> Expression . MOD Expression
    (9) BinaryExpression -> Expression . LEQ Expression
    (10) BinaryExpression -> Expression . GEQ Expression
    (11) BinaryExpression -> Expression . LT Expression
    (12) BinaryExpression -> Expression . GT Expression
    (13) BinaryExpression -> Expression . EQ Expression
    (14) BinaryExpression -> Expression . NE Expression
    (48) ParenthesesCallExpression -> Expression . LPAREN ExpressionList RPAREN
    (19) BracketCallExpression -> Expression . LBRACKET Expression RBRACKET
    (28) DotExpression -> Expression . DOT Expression
    (27) DereferenceExpression -> Expression . DEREF
    (2) AngleCallExpression -> Expression . LANGLE ExpressionList RANGLE

    SEMICOLON       shift and go to state 138
    PLUS            shift and go to state 33
    MINUS           shift and go to state 34
    TIMES           shift and go to state 35
    DIVIDE          shift and go to state 36
    MOD             shift and go to state 37
    LEQ             shift and go to state 38
    GEQ             shift and go to state 39
    LT              shift and go to state 40
    GT              shift and go to state 41
    EQ              shift and go to state 42
    NE              shift and go to state 43
    LPAREN          shift and go to state 44
    LBRACKET        shift and go to state 45
    DOT             shift and go to state 46
    DEREF           shift and go to state 47
    LANGLE          shift and go to state 48


state 134

    (44) InitStatement -> LET Expression ASSIGNMENT Expression SEMICOLON .

    LET             reduce using rule 44 (InitStatement -> LET Expression ASSIGNMENT Expression SEMICOLON .)
    IF              reduce using rule 44 (InitStatement -> LET Expression ASSIGNMENT Expression SEMICOLON .)
    FOR             reduce using rule 44 (InitStatement -> LET Expression ASSIGNMENT Expression SEMICOLON .)
    WHILE           reduce using rule 44 (InitStatement -> LET Expression ASSIGNMENT Expression SEMICOLON .)
    BREAK           reduce using rule 44 (InitStatement -> LET Expression ASSIGNMENT Expression SEMICOLON .)
    RETURN          reduce using rule 44 (InitStatement -> LET Expression ASSIGNMENT Expression SEMICOLON .)
    SEMICOLON       reduce using rule 44 (InitStatement -> LET Expression ASSIGNMENT Expression SEMICOLON .)
    TYPE            reduce using rule 44 (InitStatement -> LET Expression ASSIGNMENT Expression SEMICOLON .)
    LBRACE          reduce using rule 44 (InitStatement -> LET Expression ASSIGNMENT Expression SEMICOLON .)
    ID              reduce using rule 44 (InitStatement -> LET Expression ASSIGNMENT Expression SEMICOLON .)
    LPAREN          reduce using rule 44 (InitStatement -> LET Expression ASSIGNMENT Expression SEMICOLON .)
    ADDRESS         reduce using rule 44 (InitStatement -> LET Expression ASSIGNMENT Expression SEMICOLON .)
    INTL            reduce using rule 44 (InitStatement -> LET Expression ASSIGNMENT Expression SEMICOLON .)
    BOOLL           reduce using rule 44 (InitStatement -> LET Expression ASSIGNMENT Expression SEMICOLON .)
    RBRACE          reduce using rule 44 (InitStatement -> LET Expression ASSIGNMENT Expression SEMICOLON .)
    RPAREN          reduce using rule 44 (InitStatement -> LET Expression ASSIGNMENT Expression SEMICOLON .)


state 135

    (42) IfElseStatement -> IF LPAREN Expression RPAREN Block . ELSE Block
    (43) IfElseStatement -> IF LPAREN Expression RPAREN Block .

    ELSE            shift and go to state 139
    LET             reduce using rule 43 (IfElseStatement -> IF LPAREN Expression RPAREN Block .)
    IF              reduce using rule 43 (IfElseStatement -> IF LPAREN Expression RPAREN Block .)
    FOR             reduce using rule 43 (IfElseStatement -> IF LPAREN Expression RPAREN Block .)
    WHILE           reduce using rule 43 (IfElseStatement -> IF LPAREN Expression RPAREN Block .)
    BREAK           reduce using rule 43 (IfElseStatement -> IF LPAREN Expression RPAREN Block .)
    RETURN          reduce using rule 43 (IfElseStatement -> IF LPAREN Expression RPAREN Block .)
    SEMICOLON       reduce using rule 43 (IfElseStatement -> IF LPAREN Expression RPAREN Block .)
    TYPE            reduce using rule 43 (IfElseStatement -> IF LPAREN Expression RPAREN Block .)
    LBRACE          reduce using rule 43 (IfElseStatement -> IF LPAREN Expression RPAREN Block .)
    ID              reduce using rule 43 (IfElseStatement -> IF LPAREN Expression RPAREN Block .)
    LPAREN          reduce using rule 43 (IfElseStatement -> IF LPAREN Expression RPAREN Block .)
    ADDRESS         reduce using rule 43 (IfElseStatement -> IF LPAREN Expression RPAREN Block .)
    INTL            reduce using rule 43 (IfElseStatement -> IF LPAREN Expression RPAREN Block .)
    BOOLL           reduce using rule 43 (IfElseStatement -> IF LPAREN Expression RPAREN Block .)
    RBRACE          reduce using rule 43 (IfElseStatement -> IF LPAREN Expression RPAREN Block .)
    RPAREN          reduce using rule 43 (IfElseStatement -> IF LPAREN Expression RPAREN Block .)


state 136

    (37) ForStatement -> FOR LPAREN Statement Expression SEMICOLON . Statement RPAREN Block
    (52) Statement -> . AssignmentStatement
    (53) Statement -> . InitStatement
    (54) Statement -> . ExpressionStatement
    (55) Statement -> . IfElseStatement
    (56) Statement -> . ForStatement
    (57) Statement -> . WhileStatement
    (58) Statement -> . BreakStatement
    (59) Statement -> . ReturnStatement
    (60) Statement -> . BlockStatement
    (61) Statement -> . BlankStatement
    (62) Statement -> . TypeStatement
    (63) Statement -> . DeclarationStatement
    (3) AssignmentStatement -> . Expression ASSIGNMENT Expression SEMICOLON
    (44) InitStatement -> . LET Expression ASSIGNMENT Expression SEMICOLON
    (36) ExpressionStatement -> . Expression SEMICOLON
    (42) IfElseStatement -> . IF LPAREN Expression RPAREN Block ELSE Block
    (43) IfElseStatement -> . IF LPAREN Expression RPAREN Block
    (37) ForStatement -> . FOR LPAREN Statement Expression SEMICOLON Statement RPAREN Block
    (76) WhileStatement -> . WHILE LPAREN Expression RPAREN Block
    (20) BreakStatement -> . BREAK IntLiteral SEMICOLON
    (21) BreakStatement -> . BREAK SEMICOLON
    (50) ReturnStatement -> . RETURN Expression SEMICOLON
    (51) ReturnStatement -> . RETURN SEMICOLON
    (17) BlockStatement -> . Block
    (15) BlankStatement -> . SEMICOLON
    (67) TypeStatement -> . TYPE Expression ASSIGNMENT Expression SEMICOLON
    (23) DeclarationStatement -> . Expression Expression SEMICOLON
    (29) Expression -> . BinaryExpression
    (30) Expression -> . UnaryExpression
    (31) Expression -> . IdExpression
    (32) Expression -> . IdPairExpression
    (16) Block -> . LBRACE StatementList RBRACE
    (4) BinaryExpression -> . Expression PLUS Expression
    (5) BinaryExpression -> . Expression MINUS Expression
    (6) BinaryExpression -> . Expression TIMES Expression
    (7) BinaryExpression -> . Expression DIVIDE Expression
    (8) BinaryExpression -> . Expression MOD Expression
    (9) BinaryExpression -> . Expression LEQ Expression
    (10) BinaryExpression -> . Expression GEQ Expression
    (11) BinaryExpression -> . Expression LT Expression
    (12) BinaryExpression -> . Expression GT Expression
    (13) BinaryExpression -> . Expression EQ Expression
    (14) BinaryExpression -> . Expression NE Expression
    (68) UnaryExpression -> . LiteralExpression
    (69) UnaryExpression -> . ParenthesesCallExpression
    (70) UnaryExpression -> . BracketCallExpression
    (71) UnaryExpression -> . DotExpression
    (72) UnaryExpression -> . ParenthesesExpression
    (73) UnaryExpression -> . DereferenceExpression
    (74) UnaryExpression -> . AddressExpression
    (75) UnaryExpression -> . AngleCallExpression
    (40) IdExpression -> . ID
    (41) IdPairExpression -> . ID ID
    (46) LiteralExpression -> . IntLiteral
    (47) LiteralExpression -> . BoolLiteral
    (48) ParenthesesCallExpression -> . Expression LPAREN ExpressionList RPAREN
    (19) BracketCallExpression -> . Expression LBRACKET Expression RBRACKET
    (28) DotExpression -> . Expression DOT Expression
    (49) ParenthesesExpression -> . LPAREN Expression RPAREN
    (27) DereferenceExpression -> . Expression DEREF
    (1) AddressExpression -> . ADDRESS Expression
    (2) AngleCallExpression -> . Expression LANGLE ExpressionList RANGLE
    (45) IntLiteral -> . INTL
    (18) BoolLiteral -> . BOOLL

    LET             shift and go to state 88
    IF              shift and go to state 89
    FOR             shift and go to state 91
    WHILE           shift and go to state 92
    BREAK           shift and go to state 93
    RETURN          shift and go to state 94
    SEMICOLON       shift and go to state 87
    TYPE            shift and go to state 95
    LBRACE          shift and go to state 49
    ID              shift and go to state 23
    LPAREN          shift and go to state 26
    ADDRESS         shift and go to state 27
    INTL            shift and go to state 28
    BOOLL           shift and go to state 29

    Statement                      shift and go to state 140
    Expression                     shift and go to state 86
    Block                          shift and go to state 90
    AssignmentStatement            shift and go to state 74
    InitStatement                  shift and go to state 75
    ExpressionStatement            shift and go to state 76
    IfElseStatement                shift and go to state 77
    ForStatement                   shift and go to state 78
    WhileStatement                 shift and go to state 79
    BreakStatement                 shift and go to state 80
    ReturnStatement                shift and go to state 81
    BlockStatement                 shift and go to state 82
    BlankStatement                 shift and go to state 83
    TypeStatement                  shift and go to state 84
    DeclarationStatement           shift and go to state 85
    IntLiteral                     shift and go to state 24
    BinaryExpression               shift and go to state 11
    UnaryExpression                shift and go to state 12
    IdExpression                   shift and go to state 13
    IdPairExpression               shift and go to state 14
    LiteralExpression              shift and go to state 15
    ParenthesesCallExpression      shift and go to state 16
    BracketCallExpression          shift and go to state 17
    DotExpression                  shift and go to state 18
    ParenthesesExpression          shift and go to state 19
    DereferenceExpression          shift and go to state 20
    AddressExpression              shift and go to state 21
    AngleCallExpression            shift and go to state 22
    BoolLiteral                    shift and go to state 25

state 137

    (76) WhileStatement -> WHILE LPAREN Expression RPAREN Block .

    LET             reduce using rule 76 (WhileStatement -> WHILE LPAREN Expression RPAREN Block .)
    IF              reduce using rule 76 (WhileStatement -> WHILE LPAREN Expression RPAREN Block .)
    FOR             reduce using rule 76 (WhileStatement -> WHILE LPAREN Expression RPAREN Block .)
    WHILE           reduce using rule 76 (WhileStatement -> WHILE LPAREN Expression RPAREN Block .)
    BREAK           reduce using rule 76 (WhileStatement -> WHILE LPAREN Expression RPAREN Block .)
    RETURN          reduce using rule 76 (WhileStatement -> WHILE LPAREN Expression RPAREN Block .)
    SEMICOLON       reduce using rule 76 (WhileStatement -> WHILE LPAREN Expression RPAREN Block .)
    TYPE            reduce using rule 76 (WhileStatement -> WHILE LPAREN Expression RPAREN Block .)
    LBRACE          reduce using rule 76 (WhileStatement -> WHILE LPAREN Expression RPAREN Block .)
    ID              reduce using rule 76 (WhileStatement -> WHILE LPAREN Expression RPAREN Block .)
    LPAREN          reduce using rule 76 (WhileStatement -> WHILE LPAREN Expression RPAREN Block .)
    ADDRESS         reduce using rule 76 (WhileStatement -> WHILE LPAREN Expression RPAREN Block .)
    INTL            reduce using rule 76 (WhileStatement -> WHILE LPAREN Expression RPAREN Block .)
    BOOLL           reduce using rule 76 (WhileStatement -> WHILE LPAREN Expression RPAREN Block .)
    RBRACE          reduce using rule 76 (WhileStatement -> WHILE LPAREN Expression RPAREN Block .)
    RPAREN          reduce using rule 76 (WhileStatement -> WHILE LPAREN Expression RPAREN Block .)


state 138

    (67) TypeStatement -> TYPE Expression ASSIGNMENT Expression SEMICOLON .

    LET             reduce using rule 67 (TypeStatement -> TYPE Expression ASSIGNMENT Expression SEMICOLON .)
    IF              reduce using rule 67 (TypeStatement -> TYPE Expression ASSIGNMENT Expression SEMICOLON .)
    FOR             reduce using rule 67 (TypeStatement -> TYPE Expression ASSIGNMENT Expression SEMICOLON .)
    WHILE           reduce using rule 67 (TypeStatement -> TYPE Expression ASSIGNMENT Expression SEMICOLON .)
    BREAK           reduce using rule 67 (TypeStatement -> TYPE Expression ASSIGNMENT Expression SEMICOLON .)
    RETURN          reduce using rule 67 (TypeStatement -> TYPE Expression ASSIGNMENT Expression SEMICOLON .)
    SEMICOLON       reduce using rule 67 (TypeStatement -> TYPE Expression ASSIGNMENT Expression SEMICOLON .)
    TYPE            reduce using rule 67 (TypeStatement -> TYPE Expression ASSIGNMENT Expression SEMICOLON .)
    LBRACE          reduce using rule 67 (TypeStatement -> TYPE Expression ASSIGNMENT Expression SEMICOLON .)
    ID              reduce using rule 67 (TypeStatement -> TYPE Expression ASSIGNMENT Expression SEMICOLON .)
    LPAREN          reduce using rule 67 (TypeStatement -> TYPE Expression ASSIGNMENT Expression SEMICOLON .)
    ADDRESS         reduce using rule 67 (TypeStatement -> TYPE Expression ASSIGNMENT Expression SEMICOLON .)
    INTL            reduce using rule 67 (TypeStatement -> TYPE Expression ASSIGNMENT Expression SEMICOLON .)
    BOOLL           reduce using rule 67 (TypeStatement -> TYPE Expression ASSIGNMENT Expression SEMICOLON .)
    RBRACE          reduce using rule 67 (TypeStatement -> TYPE Expression ASSIGNMENT Expression SEMICOLON .)
    RPAREN          reduce using rule 67 (TypeStatement -> TYPE Expression ASSIGNMENT Expression SEMICOLON .)


state 139

    (42) IfElseStatement -> IF LPAREN Expression RPAREN Block ELSE . Block
    (16) Block -> . LBRACE StatementList RBRACE

    LBRACE          shift and go to state 49

    Block                          shift and go to state 141

state 140

    (37) ForStatement -> FOR LPAREN Statement Expression SEMICOLON Statement . RPAREN Block

    RPAREN          shift and go to state 142


state 141

    (42) IfElseStatement -> IF LPAREN Expression RPAREN Block ELSE Block .

    LET             reduce using rule 42 (IfElseStatement -> IF LPAREN Expression RPAREN Block ELSE Block .)
    IF              reduce using rule 42 (IfElseStatement -> IF LPAREN Expression RPAREN Block ELSE Block .)
    FOR             reduce using rule 42 (IfElseStatement -> IF LPAREN Expression RPAREN Block ELSE Block .)
    WHILE           reduce using rule 42 (IfElseStatement -> IF LPAREN Expression RPAREN Block ELSE Block .)
    BREAK           reduce using rule 42 (IfElseStatement -> IF LPAREN Expression RPAREN Block ELSE Block .)
    RETURN          reduce using rule 42 (IfElseStatement -> IF LPAREN Expression RPAREN Block ELSE Block .)
    SEMICOLON       reduce using rule 42 (IfElseStatement -> IF LPAREN Expression RPAREN Block ELSE Block .)
    TYPE            reduce using rule 42 (IfElseStatement -> IF LPAREN Expression RPAREN Block ELSE Block .)
    LBRACE          reduce using rule 42 (IfElseStatement -> IF LPAREN Expression RPAREN Block ELSE Block .)
    ID              reduce using rule 42 (IfElseStatement -> IF LPAREN Expression RPAREN Block ELSE Block .)
    LPAREN          reduce using rule 42 (IfElseStatement -> IF LPAREN Expression RPAREN Block ELSE Block .)
    ADDRESS         reduce using rule 42 (IfElseStatement -> IF LPAREN Expression RPAREN Block ELSE Block .)
    INTL            reduce using rule 42 (IfElseStatement -> IF LPAREN Expression RPAREN Block ELSE Block .)
    BOOLL           reduce using rule 42 (IfElseStatement -> IF LPAREN Expression RPAREN Block ELSE Block .)
    RBRACE          reduce using rule 42 (IfElseStatement -> IF LPAREN Expression RPAREN Block ELSE Block .)
    RPAREN          reduce using rule 42 (IfElseStatement -> IF LPAREN Expression RPAREN Block ELSE Block .)


state 142

    (37) ForStatement -> FOR LPAREN Statement Expression SEMICOLON Statement RPAREN . Block
    (16) Block -> . LBRACE StatementList RBRACE

    LBRACE          shift and go to state 49

    Block                          shift and go to state 143

state 143

    (37) ForStatement -> FOR LPAREN Statement Expression SEMICOLON Statement RPAREN Block .

    LET             reduce using rule 37 (ForStatement -> FOR LPAREN Statement Expression SEMICOLON Statement RPAREN Block .)
    IF              reduce using rule 37 (ForStatement -> FOR LPAREN Statement Expression SEMICOLON Statement RPAREN Block .)
    FOR             reduce using rule 37 (ForStatement -> FOR LPAREN Statement Expression SEMICOLON Statement RPAREN Block .)
    WHILE           reduce using rule 37 (ForStatement -> FOR LPAREN Statement Expression SEMICOLON Statement RPAREN Block .)
    BREAK           reduce using rule 37 (ForStatement -> FOR LPAREN Statement Expression SEMICOLON Statement RPAREN Block .)
    RETURN          reduce using rule 37 (ForStatement -> FOR LPAREN Statement Expression SEMICOLON Statement RPAREN Block .)
    SEMICOLON       reduce using rule 37 (ForStatement -> FOR LPAREN Statement Expression SEMICOLON Statement RPAREN Block .)
    TYPE            reduce using rule 37 (ForStatement -> FOR LPAREN Statement Expression SEMICOLON Statement RPAREN Block .)
    LBRACE          reduce using rule 37 (ForStatement -> FOR LPAREN Statement Expression SEMICOLON Statement RPAREN Block .)
    ID              reduce using rule 37 (ForStatement -> FOR LPAREN Statement Expression SEMICOLON Statement RPAREN Block .)
    LPAREN          reduce using rule 37 (ForStatement -> FOR LPAREN Statement Expression SEMICOLON Statement RPAREN Block .)
    ADDRESS         reduce using rule 37 (ForStatement -> FOR LPAREN Statement Expression SEMICOLON Statement RPAREN Block .)
    INTL            reduce using rule 37 (ForStatement -> FOR LPAREN Statement Expression SEMICOLON Statement RPAREN Block .)
    BOOLL           reduce using rule 37 (ForStatement -> FOR LPAREN Statement Expression SEMICOLON Statement RPAREN Block .)
    RBRACE          reduce using rule 37 (ForStatement -> FOR LPAREN Statement Expression SEMICOLON Statement RPAREN Block .)
    RPAREN          reduce using rule 37 (ForStatement -> FOR LPAREN Statement Expression SEMICOLON Statement RPAREN Block .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 23 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 52 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 52 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 52 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 52 resolved as shift
WARNING: shift/reduce conflict for MOD in state 52 resolved as shift
WARNING: shift/reduce conflict for LEQ in state 52 resolved as shift
WARNING: shift/reduce conflict for GEQ in state 52 resolved as shift
WARNING: shift/reduce conflict for LT in state 52 resolved as shift
WARNING: shift/reduce conflict for GT in state 52 resolved as shift
WARNING: shift/reduce conflict for EQ in state 52 resolved as shift
WARNING: shift/reduce conflict for NE in state 52 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 52 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 52 resolved as shift
WARNING: shift/reduce conflict for DOT in state 52 resolved as shift
WARNING: shift/reduce conflict for DEREF in state 52 resolved as shift
WARNING: shift/reduce conflict for LANGLE in state 52 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 70 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 70 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 70 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 70 resolved as shift
WARNING: shift/reduce conflict for MOD in state 70 resolved as shift
WARNING: shift/reduce conflict for LEQ in state 70 resolved as shift
WARNING: shift/reduce conflict for GEQ in state 70 resolved as shift
WARNING: shift/reduce conflict for LT in state 70 resolved as shift
WARNING: shift/reduce conflict for GT in state 70 resolved as shift
WARNING: shift/reduce conflict for EQ in state 70 resolved as shift
WARNING: shift/reduce conflict for NE in state 70 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 70 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 70 resolved as shift
WARNING: shift/reduce conflict for DOT in state 70 resolved as shift
WARNING: shift/reduce conflict for DEREF in state 70 resolved as shift
WARNING: shift/reduce conflict for LANGLE in state 70 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 120 resolved as shift
