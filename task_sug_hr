Dizajniranje strogo tipiziranog programskog jezika

Programski jezici centralna su karika u razvoju programske potpore.

Ipak, ne postoji programski jezik najbolji za sve primjene, u isto vrijeme efikasan, jednostavan, prenosiv i konzistentan.
Puno je starih programskih jezika pretrpano funkcionalnosću, njihov razvoj traje već desetljećima, a pratiti taj razvoj postaje nemoguće.
S druge strane, neki jezici su laki za korištenje, ali odveć prespori.

Cilj ovog diplomskog rada dizajnirati je novi programski jezik. Jezik bi se trebao moći koristiti za aplikacije kod kojih je nužna brzina, a u isto vrijeme biti što "Manji po broju funkcionalnosti??? (self contained)". Trebao bi imati što manje nedefiniranih ponašanja, što bi ga učinilo inherentno portabilnim. Jezik treba biti specificiran u formalnom obliku. O okolini izvođenja odlučit ćemo u kasnijim stadijima. Jezik bi trebao biti što više konzistentan, tako da postoji jedan preferirani način za izvesti neki cilj. 

Nakon dizajna jezika potrebno je obaviti formalnu analizu. Jedna od centralnih točka analize bit će analiza sustava tipova.

Posljednji cilj rada implementacija je skupa alata, kojeg primarno čini prevoditelj, ali koji može uključivati i druge alate, poput jezičnih poslužitelja (language servers) i formatera koda. Cjelokupni kod bit će dostupan na javnim repozitorijima, napisan koristeći konzistentne stilove koda. Sve funkcionalnosti trebaju biti dokumentirane. 
